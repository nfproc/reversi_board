// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reversi_accel_AxiStream2Mat (
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        mat_in_4228_din,
        mat_in_4228_full_n,
        mat_in_4228_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_dout,
        cols_empty_n,
        cols_read,
        stride_dout,
        stride_empty_n,
        stride_read,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [31:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [23:0] mat_in_4228_din;
input   mat_in_4228_full_n;
output   mat_in_4228_write;
input  [31:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [31:0] cols_dout;
input   cols_empty_n;
output   cols_read;
input  [31:0] stride_dout;
input   stride_empty_n;
output   stride_read;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    last_blk_pxl_width_U0_ap_start;
wire    last_blk_pxl_width_U0_ap_done;
wire    last_blk_pxl_width_U0_ap_continue;
wire    last_blk_pxl_width_U0_ap_idle;
wire    last_blk_pxl_width_U0_ap_ready;
wire   [3:0] last_blk_pxl_width_U0_return_r;
wire    last_blk_width_channel_full_n;
wire    AxiStream2MatStream_2_U0_ap_start;
wire    AxiStream2MatStream_2_U0_ap_done;
wire    AxiStream2MatStream_2_U0_ap_continue;
wire    AxiStream2MatStream_2_U0_ap_idle;
wire    AxiStream2MatStream_2_U0_ap_ready;
wire    AxiStream2MatStream_2_U0_ldata1_read;
wire   [23:0] AxiStream2MatStream_2_U0_mat_in_4228_din;
wire    AxiStream2MatStream_2_U0_mat_in_4228_write;
wire    AxiStream2MatStream_2_U0_rows_read;
wire    AxiStream2MatStream_2_U0_cols_bound_per_npc_read;
wire    AxiStream2MatStream_2_U0_stride_read;
wire   [3:0] last_blk_width_channel_dout;
wire    last_blk_width_channel_empty_n;

reversi_accel_last_blk_pxl_width last_blk_pxl_width_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(last_blk_pxl_width_U0_ap_start),
    .ap_done(last_blk_pxl_width_U0_ap_done),
    .ap_continue(last_blk_pxl_width_U0_ap_continue),
    .ap_idle(last_blk_pxl_width_U0_ap_idle),
    .ap_ready(last_blk_pxl_width_U0_ap_ready),
    .return_r(last_blk_pxl_width_U0_return_r)
);

reversi_accel_AxiStream2MatStream_2_s AxiStream2MatStream_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AxiStream2MatStream_2_U0_ap_start),
    .ap_done(AxiStream2MatStream_2_U0_ap_done),
    .ap_continue(AxiStream2MatStream_2_U0_ap_continue),
    .ap_idle(AxiStream2MatStream_2_U0_ap_idle),
    .ap_ready(AxiStream2MatStream_2_U0_ap_ready),
    .ldata1_dout(ldata1_dout),
    .ldata1_empty_n(ldata1_empty_n),
    .ldata1_read(AxiStream2MatStream_2_U0_ldata1_read),
    .mat_in_4228_din(AxiStream2MatStream_2_U0_mat_in_4228_din),
    .mat_in_4228_full_n(mat_in_4228_full_n),
    .mat_in_4228_write(AxiStream2MatStream_2_U0_mat_in_4228_write),
    .rows_dout(rows_dout),
    .rows_empty_n(rows_empty_n),
    .rows_read(AxiStream2MatStream_2_U0_rows_read),
    .cols_bound_per_npc_dout(cols_dout),
    .cols_bound_per_npc_empty_n(cols_empty_n),
    .cols_bound_per_npc_read(AxiStream2MatStream_2_U0_cols_bound_per_npc_read),
    .last_blk_width(last_blk_width_channel_dout),
    .stride_dout(stride_dout),
    .stride_empty_n(stride_empty_n),
    .stride_read(AxiStream2MatStream_2_U0_stride_read)
);

reversi_accel_fifo_w4_d2_S last_blk_width_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(last_blk_pxl_width_U0_return_r),
    .if_full_n(last_blk_width_channel_full_n),
    .if_write(last_blk_pxl_width_U0_ap_done),
    .if_dout(last_blk_width_channel_dout),
    .if_empty_n(last_blk_width_channel_empty_n),
    .if_read(AxiStream2MatStream_2_U0_ap_ready)
);

assign AxiStream2MatStream_2_U0_ap_continue = ap_continue;

assign AxiStream2MatStream_2_U0_ap_start = last_blk_width_channel_empty_n;

assign ap_done = AxiStream2MatStream_2_U0_ap_done;

assign ap_idle = (last_blk_pxl_width_U0_ap_idle & (last_blk_width_channel_empty_n ^ 1'b1) & AxiStream2MatStream_2_U0_ap_idle);

assign ap_ready = last_blk_pxl_width_U0_ap_ready;

assign cols_read = AxiStream2MatStream_2_U0_cols_bound_per_npc_read;

assign last_blk_pxl_width_U0_ap_continue = last_blk_width_channel_full_n;

assign last_blk_pxl_width_U0_ap_start = ap_start;

assign ldata1_read = AxiStream2MatStream_2_U0_ldata1_read;

assign mat_in_4228_din = AxiStream2MatStream_2_U0_mat_in_4228_din;

assign mat_in_4228_write = AxiStream2MatStream_2_U0_mat_in_4228_write;

assign rows_read = AxiStream2MatStream_2_U0_rows_read;

assign stride_read = AxiStream2MatStream_2_U0_stride_read;

endmodule //reversi_accel_AxiStream2Mat
