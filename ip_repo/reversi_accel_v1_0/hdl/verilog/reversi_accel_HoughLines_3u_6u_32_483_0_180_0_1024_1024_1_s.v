// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reversi_accel_HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        mat_dil_b_4243_dout,
        mat_dil_b_4243_empty_n,
        mat_dil_b_4243_read,
        m_axi_rho_AWVALID,
        m_axi_rho_AWREADY,
        m_axi_rho_AWADDR,
        m_axi_rho_AWID,
        m_axi_rho_AWLEN,
        m_axi_rho_AWSIZE,
        m_axi_rho_AWBURST,
        m_axi_rho_AWLOCK,
        m_axi_rho_AWCACHE,
        m_axi_rho_AWPROT,
        m_axi_rho_AWQOS,
        m_axi_rho_AWREGION,
        m_axi_rho_AWUSER,
        m_axi_rho_WVALID,
        m_axi_rho_WREADY,
        m_axi_rho_WDATA,
        m_axi_rho_WSTRB,
        m_axi_rho_WLAST,
        m_axi_rho_WID,
        m_axi_rho_WUSER,
        m_axi_rho_ARVALID,
        m_axi_rho_ARREADY,
        m_axi_rho_ARADDR,
        m_axi_rho_ARID,
        m_axi_rho_ARLEN,
        m_axi_rho_ARSIZE,
        m_axi_rho_ARBURST,
        m_axi_rho_ARLOCK,
        m_axi_rho_ARCACHE,
        m_axi_rho_ARPROT,
        m_axi_rho_ARQOS,
        m_axi_rho_ARREGION,
        m_axi_rho_ARUSER,
        m_axi_rho_RVALID,
        m_axi_rho_RREADY,
        m_axi_rho_RDATA,
        m_axi_rho_RLAST,
        m_axi_rho_RID,
        m_axi_rho_RUSER,
        m_axi_rho_RRESP,
        m_axi_rho_BVALID,
        m_axi_rho_BREADY,
        m_axi_rho_BRESP,
        m_axi_rho_BID,
        m_axi_rho_BUSER,
        p_read2,
        m_axi_theta_AWVALID,
        m_axi_theta_AWREADY,
        m_axi_theta_AWADDR,
        m_axi_theta_AWID,
        m_axi_theta_AWLEN,
        m_axi_theta_AWSIZE,
        m_axi_theta_AWBURST,
        m_axi_theta_AWLOCK,
        m_axi_theta_AWCACHE,
        m_axi_theta_AWPROT,
        m_axi_theta_AWQOS,
        m_axi_theta_AWREGION,
        m_axi_theta_AWUSER,
        m_axi_theta_WVALID,
        m_axi_theta_WREADY,
        m_axi_theta_WDATA,
        m_axi_theta_WSTRB,
        m_axi_theta_WLAST,
        m_axi_theta_WID,
        m_axi_theta_WUSER,
        m_axi_theta_ARVALID,
        m_axi_theta_ARREADY,
        m_axi_theta_ARADDR,
        m_axi_theta_ARID,
        m_axi_theta_ARLEN,
        m_axi_theta_ARSIZE,
        m_axi_theta_ARBURST,
        m_axi_theta_ARLOCK,
        m_axi_theta_ARCACHE,
        m_axi_theta_ARPROT,
        m_axi_theta_ARQOS,
        m_axi_theta_ARREGION,
        m_axi_theta_ARUSER,
        m_axi_theta_RVALID,
        m_axi_theta_RREADY,
        m_axi_theta_RDATA,
        m_axi_theta_RLAST,
        m_axi_theta_RID,
        m_axi_theta_RUSER,
        m_axi_theta_RRESP,
        m_axi_theta_BVALID,
        m_axi_theta_BREADY,
        m_axi_theta_BRESP,
        m_axi_theta_BID,
        m_axi_theta_BUSER,
        p_read3
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
input  [7:0] mat_dil_b_4243_dout;
input   mat_dil_b_4243_empty_n;
output   mat_dil_b_4243_read;
output   m_axi_rho_AWVALID;
input   m_axi_rho_AWREADY;
output  [63:0] m_axi_rho_AWADDR;
output  [0:0] m_axi_rho_AWID;
output  [31:0] m_axi_rho_AWLEN;
output  [2:0] m_axi_rho_AWSIZE;
output  [1:0] m_axi_rho_AWBURST;
output  [1:0] m_axi_rho_AWLOCK;
output  [3:0] m_axi_rho_AWCACHE;
output  [2:0] m_axi_rho_AWPROT;
output  [3:0] m_axi_rho_AWQOS;
output  [3:0] m_axi_rho_AWREGION;
output  [0:0] m_axi_rho_AWUSER;
output   m_axi_rho_WVALID;
input   m_axi_rho_WREADY;
output  [31:0] m_axi_rho_WDATA;
output  [3:0] m_axi_rho_WSTRB;
output   m_axi_rho_WLAST;
output  [0:0] m_axi_rho_WID;
output  [0:0] m_axi_rho_WUSER;
output   m_axi_rho_ARVALID;
input   m_axi_rho_ARREADY;
output  [63:0] m_axi_rho_ARADDR;
output  [0:0] m_axi_rho_ARID;
output  [31:0] m_axi_rho_ARLEN;
output  [2:0] m_axi_rho_ARSIZE;
output  [1:0] m_axi_rho_ARBURST;
output  [1:0] m_axi_rho_ARLOCK;
output  [3:0] m_axi_rho_ARCACHE;
output  [2:0] m_axi_rho_ARPROT;
output  [3:0] m_axi_rho_ARQOS;
output  [3:0] m_axi_rho_ARREGION;
output  [0:0] m_axi_rho_ARUSER;
input   m_axi_rho_RVALID;
output   m_axi_rho_RREADY;
input  [31:0] m_axi_rho_RDATA;
input   m_axi_rho_RLAST;
input  [0:0] m_axi_rho_RID;
input  [0:0] m_axi_rho_RUSER;
input  [1:0] m_axi_rho_RRESP;
input   m_axi_rho_BVALID;
output   m_axi_rho_BREADY;
input  [1:0] m_axi_rho_BRESP;
input  [0:0] m_axi_rho_BID;
input  [0:0] m_axi_rho_BUSER;
input  [63:0] p_read2;
output   m_axi_theta_AWVALID;
input   m_axi_theta_AWREADY;
output  [63:0] m_axi_theta_AWADDR;
output  [0:0] m_axi_theta_AWID;
output  [31:0] m_axi_theta_AWLEN;
output  [2:0] m_axi_theta_AWSIZE;
output  [1:0] m_axi_theta_AWBURST;
output  [1:0] m_axi_theta_AWLOCK;
output  [3:0] m_axi_theta_AWCACHE;
output  [2:0] m_axi_theta_AWPROT;
output  [3:0] m_axi_theta_AWQOS;
output  [3:0] m_axi_theta_AWREGION;
output  [0:0] m_axi_theta_AWUSER;
output   m_axi_theta_WVALID;
input   m_axi_theta_WREADY;
output  [31:0] m_axi_theta_WDATA;
output  [3:0] m_axi_theta_WSTRB;
output   m_axi_theta_WLAST;
output  [0:0] m_axi_theta_WID;
output  [0:0] m_axi_theta_WUSER;
output   m_axi_theta_ARVALID;
input   m_axi_theta_ARREADY;
output  [63:0] m_axi_theta_ARADDR;
output  [0:0] m_axi_theta_ARID;
output  [31:0] m_axi_theta_ARLEN;
output  [2:0] m_axi_theta_ARSIZE;
output  [1:0] m_axi_theta_ARBURST;
output  [1:0] m_axi_theta_ARLOCK;
output  [3:0] m_axi_theta_ARCACHE;
output  [2:0] m_axi_theta_ARPROT;
output  [3:0] m_axi_theta_ARQOS;
output  [3:0] m_axi_theta_ARREGION;
output  [0:0] m_axi_theta_ARUSER;
input   m_axi_theta_RVALID;
output   m_axi_theta_RREADY;
input  [31:0] m_axi_theta_RDATA;
input   m_axi_theta_RLAST;
input  [0:0] m_axi_theta_RID;
input  [0:0] m_axi_theta_RUSER;
input  [1:0] m_axi_theta_RRESP;
input   m_axi_theta_BVALID;
output   m_axi_theta_BREADY;
input  [1:0] m_axi_theta_BRESP;
input  [0:0] m_axi_theta_BID;
input  [0:0] m_axi_theta_BUSER;
input  [63:0] p_read3;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg mat_dil_b_4243_read;
reg m_axi_rho_AWVALID;
reg m_axi_rho_WVALID;
reg m_axi_rho_BREADY;
reg m_axi_theta_AWVALID;
reg m_axi_theta_WVALID;
reg m_axi_theta_BREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] trunc_ln315_fu_80_p1;
reg   [11:0] trunc_ln315_reg_100;
wire   [11:0] trunc_ln315_1_fu_85_p1;
reg   [11:0] trunc_ln315_1_reg_105;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_idle;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_ready;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_mat_dil_b_4243_read;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWVALID;
wire   [63:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWADDR;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLEN;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWSIZE;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWBURST;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLOCK;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWCACHE;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWPROT;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWQOS;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWREGION;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WVALID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WDATA;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WSTRB;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WLAST;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WID;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARVALID;
wire   [63:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARADDR;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARLEN;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARSIZE;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARBURST;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARLOCK;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARCACHE;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARPROT;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARQOS;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARREGION;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_RREADY;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_BREADY;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWVALID;
wire   [63:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWADDR;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLEN;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWSIZE;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWBURST;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLOCK;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWCACHE;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWPROT;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWQOS;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWREGION;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WVALID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WDATA;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WSTRB;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WLAST;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WID;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARVALID;
wire   [63:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARADDR;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARID;
wire   [31:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARLEN;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARSIZE;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARBURST;
wire   [1:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARLOCK;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARCACHE;
wire   [2:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARPROT;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARQOS;
wire   [3:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARREGION;
wire   [0:0] grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARUSER;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_RREADY;
wire    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_BREADY;
reg    grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg;
reg    ap_block_state1_ignore_call9;
wire    ap_CS_fsm_state2;
reg    ap_block_state1;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg = 1'b0;
end

reversi_accel_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start),
    .ap_done(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done),
    .ap_idle(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_idle),
    .ap_ready(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_ready),
    .mat_dil_b_4243_dout(mat_dil_b_4243_dout),
    .mat_dil_b_4243_empty_n(mat_dil_b_4243_empty_n),
    .mat_dil_b_4243_read(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_mat_dil_b_4243_read),
    .m_axi_rho_AWVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWVALID),
    .m_axi_rho_AWREADY(m_axi_rho_AWREADY),
    .m_axi_rho_AWADDR(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWADDR),
    .m_axi_rho_AWID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWID),
    .m_axi_rho_AWLEN(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLEN),
    .m_axi_rho_AWSIZE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWSIZE),
    .m_axi_rho_AWBURST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWBURST),
    .m_axi_rho_AWLOCK(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLOCK),
    .m_axi_rho_AWCACHE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWCACHE),
    .m_axi_rho_AWPROT(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWPROT),
    .m_axi_rho_AWQOS(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWQOS),
    .m_axi_rho_AWREGION(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWREGION),
    .m_axi_rho_AWUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWUSER),
    .m_axi_rho_WVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WVALID),
    .m_axi_rho_WREADY(m_axi_rho_WREADY),
    .m_axi_rho_WDATA(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WDATA),
    .m_axi_rho_WSTRB(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WSTRB),
    .m_axi_rho_WLAST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WLAST),
    .m_axi_rho_WID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WID),
    .m_axi_rho_WUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WUSER),
    .m_axi_rho_ARVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARVALID),
    .m_axi_rho_ARREADY(1'b0),
    .m_axi_rho_ARADDR(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARADDR),
    .m_axi_rho_ARID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARID),
    .m_axi_rho_ARLEN(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARLEN),
    .m_axi_rho_ARSIZE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARSIZE),
    .m_axi_rho_ARBURST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARBURST),
    .m_axi_rho_ARLOCK(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARLOCK),
    .m_axi_rho_ARCACHE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARCACHE),
    .m_axi_rho_ARPROT(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARPROT),
    .m_axi_rho_ARQOS(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARQOS),
    .m_axi_rho_ARREGION(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARREGION),
    .m_axi_rho_ARUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_ARUSER),
    .m_axi_rho_RVALID(1'b0),
    .m_axi_rho_RREADY(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_RREADY),
    .m_axi_rho_RDATA(32'd0),
    .m_axi_rho_RLAST(1'b0),
    .m_axi_rho_RID(1'd0),
    .m_axi_rho_RUSER(1'd0),
    .m_axi_rho_RRESP(2'd0),
    .m_axi_rho_BVALID(m_axi_rho_BVALID),
    .m_axi_rho_BREADY(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_BREADY),
    .m_axi_rho_BRESP(m_axi_rho_BRESP),
    .m_axi_rho_BID(m_axi_rho_BID),
    .m_axi_rho_BUSER(m_axi_rho_BUSER),
    .outputrho(p_read2),
    .m_axi_theta_AWVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWVALID),
    .m_axi_theta_AWREADY(m_axi_theta_AWREADY),
    .m_axi_theta_AWADDR(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWADDR),
    .m_axi_theta_AWID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWID),
    .m_axi_theta_AWLEN(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLEN),
    .m_axi_theta_AWSIZE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWSIZE),
    .m_axi_theta_AWBURST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWBURST),
    .m_axi_theta_AWLOCK(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLOCK),
    .m_axi_theta_AWCACHE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWCACHE),
    .m_axi_theta_AWPROT(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWPROT),
    .m_axi_theta_AWQOS(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWQOS),
    .m_axi_theta_AWREGION(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWREGION),
    .m_axi_theta_AWUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWUSER),
    .m_axi_theta_WVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WVALID),
    .m_axi_theta_WREADY(m_axi_theta_WREADY),
    .m_axi_theta_WDATA(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WDATA),
    .m_axi_theta_WSTRB(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WSTRB),
    .m_axi_theta_WLAST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WLAST),
    .m_axi_theta_WID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WID),
    .m_axi_theta_WUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WUSER),
    .m_axi_theta_ARVALID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARVALID),
    .m_axi_theta_ARREADY(1'b0),
    .m_axi_theta_ARADDR(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARADDR),
    .m_axi_theta_ARID(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARID),
    .m_axi_theta_ARLEN(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARLEN),
    .m_axi_theta_ARSIZE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARSIZE),
    .m_axi_theta_ARBURST(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARBURST),
    .m_axi_theta_ARLOCK(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARLOCK),
    .m_axi_theta_ARCACHE(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARCACHE),
    .m_axi_theta_ARPROT(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARPROT),
    .m_axi_theta_ARQOS(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARQOS),
    .m_axi_theta_ARREGION(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARREGION),
    .m_axi_theta_ARUSER(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_ARUSER),
    .m_axi_theta_RVALID(1'b0),
    .m_axi_theta_RREADY(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_RREADY),
    .m_axi_theta_RDATA(32'd0),
    .m_axi_theta_RLAST(1'b0),
    .m_axi_theta_RID(1'd0),
    .m_axi_theta_RUSER(1'd0),
    .m_axi_theta_RRESP(2'd0),
    .m_axi_theta_BVALID(m_axi_theta_BVALID),
    .m_axi_theta_BREADY(grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_BREADY),
    .m_axi_theta_BRESP(m_axi_theta_BRESP),
    .m_axi_theta_BID(m_axi_theta_BID),
    .m_axi_theta_BUSER(m_axi_theta_BUSER),
    .outputtheta(p_read3),
    .height(trunc_ln315_reg_100),
    .width(trunc_ln315_1_reg_105)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg <= 1'b1;
        end else if ((grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_ready == 1'b1)) begin
            grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln315_1_reg_105 <= trunc_ln315_1_fu_85_p1;
        trunc_ln315_reg_100 <= trunc_ln315_fu_80_p1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_rho_AWVALID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWVALID;
    end else begin
        m_axi_rho_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_rho_BREADY = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_BREADY;
    end else begin
        m_axi_rho_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_rho_WVALID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WVALID;
    end else begin
        m_axi_rho_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_theta_AWVALID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWVALID;
    end else begin
        m_axi_theta_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_theta_BREADY = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_BREADY;
    end else begin
        m_axi_theta_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state1))) begin
        m_axi_theta_WVALID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WVALID;
    end else begin
        m_axi_theta_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mat_dil_b_4243_read = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_mat_dil_b_4243_read;
    end else begin
        mat_dil_b_4243_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call9 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_ap_start_reg;

assign m_axi_rho_ARADDR = 64'd0;

assign m_axi_rho_ARBURST = 2'd0;

assign m_axi_rho_ARCACHE = 4'd0;

assign m_axi_rho_ARID = 1'd0;

assign m_axi_rho_ARLEN = 32'd0;

assign m_axi_rho_ARLOCK = 2'd0;

assign m_axi_rho_ARPROT = 3'd0;

assign m_axi_rho_ARQOS = 4'd0;

assign m_axi_rho_ARREGION = 4'd0;

assign m_axi_rho_ARSIZE = 3'd0;

assign m_axi_rho_ARUSER = 1'd0;

assign m_axi_rho_ARVALID = 1'b0;

assign m_axi_rho_AWADDR = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWADDR;

assign m_axi_rho_AWBURST = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWBURST;

assign m_axi_rho_AWCACHE = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWCACHE;

assign m_axi_rho_AWID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWID;

assign m_axi_rho_AWLEN = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLEN;

assign m_axi_rho_AWLOCK = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWLOCK;

assign m_axi_rho_AWPROT = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWPROT;

assign m_axi_rho_AWQOS = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWQOS;

assign m_axi_rho_AWREGION = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWREGION;

assign m_axi_rho_AWSIZE = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWSIZE;

assign m_axi_rho_AWUSER = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_AWUSER;

assign m_axi_rho_RREADY = 1'b0;

assign m_axi_rho_WDATA = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WDATA;

assign m_axi_rho_WID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WID;

assign m_axi_rho_WLAST = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WLAST;

assign m_axi_rho_WSTRB = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WSTRB;

assign m_axi_rho_WUSER = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_rho_WUSER;

assign m_axi_theta_ARADDR = 64'd0;

assign m_axi_theta_ARBURST = 2'd0;

assign m_axi_theta_ARCACHE = 4'd0;

assign m_axi_theta_ARID = 1'd0;

assign m_axi_theta_ARLEN = 32'd0;

assign m_axi_theta_ARLOCK = 2'd0;

assign m_axi_theta_ARPROT = 3'd0;

assign m_axi_theta_ARQOS = 4'd0;

assign m_axi_theta_ARREGION = 4'd0;

assign m_axi_theta_ARSIZE = 3'd0;

assign m_axi_theta_ARUSER = 1'd0;

assign m_axi_theta_ARVALID = 1'b0;

assign m_axi_theta_AWADDR = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWADDR;

assign m_axi_theta_AWBURST = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWBURST;

assign m_axi_theta_AWCACHE = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWCACHE;

assign m_axi_theta_AWID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWID;

assign m_axi_theta_AWLEN = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLEN;

assign m_axi_theta_AWLOCK = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWLOCK;

assign m_axi_theta_AWPROT = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWPROT;

assign m_axi_theta_AWQOS = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWQOS;

assign m_axi_theta_AWREGION = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWREGION;

assign m_axi_theta_AWSIZE = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWSIZE;

assign m_axi_theta_AWUSER = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_AWUSER;

assign m_axi_theta_RREADY = 1'b0;

assign m_axi_theta_WDATA = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WDATA;

assign m_axi_theta_WID = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WID;

assign m_axi_theta_WLAST = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WLAST;

assign m_axi_theta_WSTRB = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WSTRB;

assign m_axi_theta_WUSER = grp_xfHoughLines_0_1024_1024_0_1_1_6u_3u_32_483_0_180_s_fu_64_m_axi_theta_WUSER;

assign trunc_ln315_1_fu_85_p1 = p_read1[11:0];

assign trunc_ln315_fu_80_p1 = p_read[11:0];

endmodule //reversi_accel_HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_s
