-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reversi_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ldata1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    ldata1_empty_n : IN STD_LOGIC;
    ldata1_read : OUT STD_LOGIC;
    mat_in_4228_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    mat_in_4228_full_n : IN STD_LOGIC;
    mat_in_4228_write : OUT STD_LOGIC;
    bound : IN STD_LOGIC_VECTOR (31 downto 0);
    sub26 : IN STD_LOGIC_VECTOR (31 downto 0);
    sext_ln1021 : IN STD_LOGIC_VECTOR (5 downto 0);
    cols_bound_per_npc_load : IN STD_LOGIC_VECTOR (31 downto 0);
    sub : IN STD_LOGIC_VECTOR (31 downto 0);
    strideBased_last_blk_width : IN STD_LOGIC_VECTOR (3 downto 0);
    sub4 : IN STD_LOGIC_VECTOR (5 downto 0);
    add_ln1021 : IN STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of reversi_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_37 : STD_LOGIC_VECTOR (5 downto 0) := "110111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv27_0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln1001_reg_846 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1001_reg_846_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1012_reg_866 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op103_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal icmp_ln1032_reg_862 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1032_reg_862_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1001_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ldata1_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mat_in_4228_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1001_reg_846_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_reg_850 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_857 : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_857_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_857_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal bLast_width_reg_857_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1032_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1032_reg_862_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1032_reg_862_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1012_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1012_reg_866_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_6_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_6_reg_870 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_1_fu_338_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln674_1_reg_876 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_30_fu_366_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_30_reg_882 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_30_reg_882_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1013_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1013_reg_887 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1013_reg_887_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1014_fu_389_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln1014_reg_892 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln674_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_fu_409_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln674_reg_904 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln674_1_fu_433_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln674_1_reg_911 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln674_1_reg_911_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln414_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_916 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln414_reg_916_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln414_fu_445_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_reg_924 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_reg_924_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_1_fu_449_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln414_1_reg_932 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln674_14_fu_499_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln674_14_reg_938 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln674_25_fu_540_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_25_reg_943 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln674_fu_550_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln674_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln414_fu_556_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln414_reg_953 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_80_reg_958 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln414_2_fu_561_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln414_2_reg_963 : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln414_fu_602_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_reg_968 : STD_LOGIC_VECTOR (23 downto 0);
    signal localbuffer_V_3_fu_627_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_105_fu_737_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln674_31_fu_746_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln674_31_reg_984 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173 : STD_LOGIC_VECTOR (23 downto 0);
    signal rem_fu_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_2_fu_372_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_1_fu_453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_fu_100 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln1001_fu_224_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_fu_260_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_108 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1001_fu_215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1033_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xf_bits_per_clock_fu_282_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln1007_fu_288_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ptr_width_minus_fu_300_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1007_fu_292_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1021_fu_316_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln1021_fu_322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_182_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln1021_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_2_fu_342_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_27_fu_346_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_29_fu_352_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln674_20_fu_358_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_393_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln1007_1_fu_296_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1018_fu_413_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1018_fu_423_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln674_26_fu_427_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln1018_fu_419_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1008_fu_306_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_78_fu_467_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln674_28_fu_477_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln674_22_fu_489_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln674_21_fu_482_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln674_14_fu_495_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln674_fu_515_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_187_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_73_fu_505_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln674_fu_520_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln674_19_fu_534_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln674_18_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln674_fu_546_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln414_fu_566_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln414_4_fu_571_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln414_3_fu_576_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln414_4_fu_582_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln414_5_fu_586_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln414_2_fu_590_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln414_1_fu_596_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln674_15_fu_613_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln674_15_fu_616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_106_fu_622_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln674_12_fu_631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln674_12_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln414_fu_649_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_79_fu_645_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln414_fu_652_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_103_fu_658_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln674_13_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln674_13_fu_674_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_104_fu_680_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln414_5_fu_689_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_81_fu_685_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln414_3_fu_694_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln414_fu_698_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_77_fu_704_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal localbuffer_V_fu_664_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln414_fu_721_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln414_6_fu_714_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_3_fu_726_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal and_ln414_4_fu_732_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_3_fu_743_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln674_16_fu_752_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal lshr_ln674_16_fu_755_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln1025_fu_761_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_735 : BOOLEAN;
    signal ap_condition_739 : BOOLEAN;
    signal ap_condition_742 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component reversi_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component reversi_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                if (((icmp_ln1012_reg_866_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln1001_reg_846_pp0_iter3_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173 <= localbuffer_V_3_fu_627_p1;
                elsif (((icmp_ln1012_reg_866_pp0_iter3_reg = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter3_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173 <= p_Result_105_fu_737_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173 <= ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_173;
                end if;
            end if; 
        end if;
    end process;

    i_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_100 <= ap_const_lv31_0;
                elsif (((icmp_ln1001_fu_219_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_100 <= add_ln1001_fu_224_p2;
                end if;
            end if; 
        end if;
    end process;

    j_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_104 <= ap_const_lv32_0;
                elsif (((icmp_ln1001_fu_219_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    j_fu_104 <= j_1_fu_260_p3;
                end if;
            end if; 
        end if;
    end process;

    p_Val2_s_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_Val2_s_fu_108 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_735)) then 
                    p_Val2_s_fu_108 <= ldata1_dout;
                end if;
            end if; 
        end if;
    end process;

    rem_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    rem_fu_96 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_condition_742)) then 
                    rem_fu_96 <= rem_1_fu_453_p2;
                elsif ((ap_const_boolean_1 = ap_condition_739)) then 
                    rem_fu_96 <= rem_2_fu_372_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1001_reg_846 = ap_const_lv1_1) and (icmp_ln1012_fu_310_p2 = ap_const_lv1_1))) then
                add_ln674_1_reg_911 <= add_ln674_1_fu_433_p2;
                icmp_ln1013_reg_887 <= icmp_ln1013_fu_383_p2;
                icmp_ln414_reg_916 <= icmp_ln414_fu_439_p2;
                icmp_ln674_reg_897 <= icmp_ln674_fu_403_p2;
                trunc_ln1014_reg_892 <= trunc_ln1014_fu_389_p1;
                trunc_ln414_1_reg_932 <= trunc_ln414_1_fu_449_p1;
                trunc_ln414_reg_924 <= trunc_ln414_fu_445_p1;
                trunc_ln674_reg_904 <= trunc_ln674_fu_409_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln674_1_reg_911_pp0_iter3_reg <= add_ln674_1_reg_911;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                bLast_width_reg_857_pp0_iter2_reg <= bLast_width_reg_857;
                bLast_width_reg_857_pp0_iter3_reg <= bLast_width_reg_857_pp0_iter2_reg;
                bLast_width_reg_857_pp0_iter4_reg <= bLast_width_reg_857_pp0_iter3_reg;
                icmp_ln1001_reg_846_pp0_iter2_reg <= icmp_ln1001_reg_846;
                icmp_ln1001_reg_846_pp0_iter3_reg <= icmp_ln1001_reg_846_pp0_iter2_reg;
                icmp_ln1012_reg_866_pp0_iter3_reg <= icmp_ln1012_reg_866;
                icmp_ln1013_reg_887_pp0_iter3_reg <= icmp_ln1013_reg_887;
                icmp_ln1032_reg_862_pp0_iter2_reg <= icmp_ln1032_reg_862;
                icmp_ln1032_reg_862_pp0_iter3_reg <= icmp_ln1032_reg_862_pp0_iter2_reg;
                icmp_ln1032_reg_862_pp0_iter4_reg <= icmp_ln1032_reg_862_pp0_iter3_reg;
                icmp_ln414_reg_916_pp0_iter3_reg <= icmp_ln414_reg_916;
                sub_ln674_30_reg_882_pp0_iter3_reg <= sub_ln674_30_reg_882;
                trunc_ln414_reg_924_pp0_iter3_reg <= trunc_ln414_reg_924;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1012_reg_866 = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1))) then
                and_ln414_reg_968 <= and_ln414_fu_602_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
                icmp_ln1001_reg_846 <= icmp_ln1001_fu_219_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_173 <= ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_173 <= ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_173 <= ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_173 <= ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_173;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1001_fu_219_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                bLast_reg_850 <= bLast_fu_233_p2;
                bLast_width_reg_857 <= bLast_width_fu_241_p2;
                icmp_ln1032_reg_862 <= icmp_ln1032_fu_246_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1001_reg_846 = ap_const_lv1_1))) then
                icmp_ln1012_reg_866 <= icmp_ln1012_fu_310_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1001_reg_846 = ap_const_lv1_1) and (icmp_ln1012_fu_310_p2 = ap_const_lv1_0))) then
                icmp_ln674_6_reg_870 <= icmp_ln674_6_fu_332_p2;
                sub_ln674_30_reg_882 <= sub_ln674_30_fu_366_p2;
                trunc_ln674_1_reg_876 <= trunc_ln674_1_fu_338_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1012_reg_866 = ap_const_lv1_0) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1))) then
                lshr_ln674_14_reg_938 <= lshr_ln674_14_fu_499_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1012_reg_866 = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln1013_reg_887 = ap_const_lv1_0))) then
                lshr_ln674_reg_948 <= lshr_ln674_fu_550_p2;
                sub_ln414_reg_953 <= sub_ln414_fu_556_p2;
                sub_ln674_25_reg_943 <= sub_ln674_25_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1012_reg_866 = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1) and (icmp_ln414_reg_916 = ap_const_lv1_1))) then
                sub_ln414_2_reg_963 <= sub_ln414_2_fu_561_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (bLast_width_reg_857_pp0_iter3_reg = ap_const_lv1_1))) then
                sub_ln674_31_reg_984 <= sub_ln674_31_fu_746_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op103_read_state4 = ap_const_boolean_1))) then
                tmp_80_reg_958 <= ldata1_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1001_fu_224_p2 <= std_logic_vector(unsigned(i_fu_100) + unsigned(ap_const_lv31_1));
    add_ln1018_fu_413_p2 <= std_logic_vector(unsigned(zext_ln1007_1_fu_296_p1) + unsigned(ap_const_lv6_3F));
    add_ln1033_fu_254_p2 <= std_logic_vector(unsigned(j_fu_104) + unsigned(ap_const_lv32_1));
    add_ln674_1_fu_433_p2 <= std_logic_vector(unsigned(sub_ln674_26_fu_427_p2) + unsigned(ap_const_lv6_1F));
    add_ln674_fu_515_p2 <= std_logic_vector(unsigned(trunc_ln674_reg_904) + unsigned(ap_const_lv6_21));
    and_ln414_3_fu_726_p2 <= (xor_ln414_fu_721_p2 and localbuffer_V_fu_664_p3);
    and_ln414_4_fu_732_p2 <= (select_ln414_6_fu_714_p3 and and_ln414_reg_968);
    and_ln414_fu_602_p2 <= (shl_ln414_2_fu_590_p2 and lshr_ln414_1_fu_596_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ldata1_empty_n, ap_predicate_op103_read_state4, mat_in_4228_full_n, icmp_ln1032_reg_862_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (mat_in_4228_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ldata1_empty_n, ap_predicate_op103_read_state4, mat_in_4228_full_n, icmp_ln1032_reg_862_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (mat_in_4228_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ldata1_empty_n, ap_predicate_op103_read_state4, mat_in_4228_full_n, icmp_ln1032_reg_862_pp0_iter4_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (mat_in_4228_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(ldata1_empty_n, ap_predicate_op103_read_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ldata1_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(mat_in_4228_full_n, icmp_ln1032_reg_862_pp0_iter4_reg)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (mat_in_4228_full_n = ap_const_logic_0));
    end process;


    ap_condition_735_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1001_reg_846_pp0_iter2_reg, icmp_ln1012_reg_866)
    begin
                ap_condition_735 <= ((icmp_ln1012_reg_866 = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1));
    end process;


    ap_condition_739_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1001_reg_846, icmp_ln1012_fu_310_p2)
    begin
                ap_condition_739 <= ((icmp_ln1001_reg_846 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1012_fu_310_p2 = ap_const_lv1_0));
    end process;


    ap_condition_742_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln1001_reg_846, icmp_ln1012_fu_310_p2)
    begin
                ap_condition_742 <= ((icmp_ln1001_reg_846 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1012_fu_310_p2 = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln1001_fu_219_p2)
    begin
        if (((icmp_ln1001_fu_219_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;
    ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_173 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op103_read_state4_assign_proc : process(icmp_ln1001_reg_846_pp0_iter2_reg, icmp_ln1012_reg_866)
    begin
                ap_predicate_op103_read_state4 <= ((icmp_ln1012_reg_866 = ap_const_lv1_1) and (icmp_ln1001_reg_846_pp0_iter2_reg = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bLast_fu_233_p2 <= "1" when (j_fu_104 = sub) else "0";
    bLast_width_fu_241_p2 <= "1" when (j_fu_104 = sub26) else "0";
    grp_fu_182_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(rem_fu_96));
    grp_fu_187_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(trunc_ln674_reg_904));
    icmp_ln1001_fu_219_p2 <= "1" when (signed(zext_ln1001_fu_215_p1) < signed(bound)) else "0";
    icmp_ln1012_fu_310_p2 <= "1" when (signed(rem_fu_96) < signed(zext_ln1007_fu_292_p1)) else "0";
    icmp_ln1013_fu_383_p2 <= "1" when (rem_fu_96 = ap_const_lv32_0) else "0";
    icmp_ln1032_fu_246_p2 <= "1" when (signed(j_fu_104) < signed(cols_bound_per_npc_load)) else "0";
    icmp_ln414_fu_439_p2 <= "1" when (unsigned(rem_fu_96) > unsigned(sext_ln1018_fu_419_p1)) else "0";
    icmp_ln674_6_fu_332_p2 <= "1" when (unsigned(grp_fu_182_p2) > unsigned(sub_ln1021_fu_326_p2)) else "0";
    icmp_ln674_fu_403_p2 <= "0" when (tmp_fu_393_p4 = ap_const_lv27_0) else "1";
    j_1_fu_260_p3 <= 
        ap_const_lv32_0 when (bLast_fu_233_p2(0) = '1') else 
        add_ln1033_fu_254_p2;

    ldata1_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, ldata1_empty_n, ap_predicate_op103_read_state4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ldata1_blk_n <= ldata1_empty_n;
        else 
            ldata1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ldata1_read_assign_proc : process(ap_enable_reg_pp0_iter3, ap_predicate_op103_read_state4, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op103_read_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ldata1_read <= ap_const_logic_1;
        else 
            ldata1_read <= ap_const_logic_0;
        end if; 
    end process;

    localbuffer_V_3_fu_627_p1 <= p_Result_106_fu_622_p2(24 - 1 downto 0);
    localbuffer_V_fu_664_p3 <= 
        ap_const_lv24_0 when (icmp_ln1013_reg_887_pp0_iter3_reg(0) = '1') else 
        p_Result_103_fu_658_p2;
    lshr_ln414_1_fu_596_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_5_fu_586_p1(24-1 downto 0)))));
    lshr_ln414_fu_652_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_fu_649_p1(24-1 downto 0)))));
    lshr_ln674_12_fu_634_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln674_12_fu_631_p1(31-1 downto 0)))));
    lshr_ln674_13_fu_674_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln674_13_fu_671_p1(31-1 downto 0)))));
    lshr_ln674_14_fu_499_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_21_fu_482_p3),to_integer(unsigned('0' & zext_ln674_14_fu_495_p1(31-1 downto 0)))));
    lshr_ln674_15_fu_616_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln674_15_fu_613_p1(31-1 downto 0)))));
    lshr_ln674_16_fu_755_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln674_16_fu_752_p1(24-1 downto 0)))));
    lshr_ln674_fu_550_p2 <= std_logic_vector(shift_right(unsigned(select_ln674_18_fu_527_p3),to_integer(unsigned('0' & zext_ln674_fu_546_p1(31-1 downto 0)))));

    mat_in_4228_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, mat_in_4228_full_n, icmp_ln1032_reg_862_pp0_iter4_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            mat_in_4228_blk_n <= mat_in_4228_full_n;
        else 
            mat_in_4228_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mat_in_4228_din <= (select_ln1025_fu_761_p3 and ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_173);

    mat_in_4228_write_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln1032_reg_862_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1032_reg_862_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            mat_in_4228_write <= ap_const_logic_1;
        else 
            mat_in_4228_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_103_fu_658_p2 <= (tmp_79_fu_645_p1 and lshr_ln414_fu_652_p2);
    p_Result_104_fu_680_p2 <= (tmp_80_reg_958 and lshr_ln674_13_fu_674_p2);
    p_Result_105_fu_737_p2 <= (and_ln414_4_fu_732_p2 or and_ln414_3_fu_726_p2);
    p_Result_106_fu_622_p2 <= (lshr_ln674_15_fu_616_p2 and lshr_ln674_14_reg_938);
    p_Result_s_fu_640_p2 <= (lshr_ln674_reg_948 and lshr_ln674_12_fu_634_p2);
    ptr_width_minus_fu_300_p3 <= 
        sub4 when (bLast_reg_850(0) = '1') else 
        ap_const_lv6_8;
    rem_1_fu_453_p2 <= std_logic_vector(unsigned(rem_fu_96) + unsigned(zext_ln1008_fu_306_p1));
    rem_2_fu_372_p2 <= std_logic_vector(unsigned(rem_fu_96) - unsigned(zext_ln1007_fu_292_p1));
    select_ln1021_fu_316_p3 <= 
        add_ln1021 when (bLast_reg_850(0) = '1') else 
        ap_const_lv6_37;
    select_ln1025_fu_761_p3 <= 
        lshr_ln674_16_fu_755_p2 when (bLast_width_reg_857_pp0_iter4_reg(0) = '1') else 
        ap_const_lv24_FFFFFF;
    select_ln414_4_fu_571_p3 <= 
        trunc_ln414_1_reg_932 when (icmp_ln414_reg_916(0) = '1') else 
        trunc_ln414_reg_924;
    select_ln414_5_fu_689_p3 <= 
        sub_ln414_2_reg_963 when (icmp_ln414_reg_916_pp0_iter3_reg(0) = '1') else 
        trunc_ln414_reg_924_pp0_iter3_reg;
    select_ln414_6_fu_714_p3 <= 
        tmp_77_fu_704_p4 when (icmp_ln414_reg_916_pp0_iter3_reg(0) = '1') else 
        shl_ln414_fu_698_p2;
    select_ln414_fu_566_p3 <= 
        trunc_ln414_reg_924 when (icmp_ln414_reg_916(0) = '1') else 
        trunc_ln414_1_reg_932;
    select_ln674_18_fu_527_p3 <= 
        tmp_73_fu_505_p4 when (icmp_ln674_reg_897(0) = '1') else 
        p_Val2_s_fu_108;
    select_ln674_19_fu_534_p3 <= 
        grp_fu_187_p2 when (icmp_ln674_reg_897(0) = '1') else 
        trunc_ln674_reg_904;
    select_ln674_20_fu_358_p3 <= 
        sub_ln674_27_fu_346_p2 when (icmp_ln674_6_fu_332_p2(0) = '1') else 
        sub_ln674_29_fu_352_p2;
    select_ln674_21_fu_482_p3 <= 
        tmp_78_fu_467_p4 when (icmp_ln674_6_reg_870(0) = '1') else 
        p_Val2_s_fu_108;
    select_ln674_22_fu_489_p3 <= 
        sub_ln674_28_fu_477_p2 when (icmp_ln674_6_reg_870(0) = '1') else 
        trunc_ln674_1_reg_876;
    select_ln674_fu_520_p3 <= 
        add_ln674_fu_515_p2 when (icmp_ln674_reg_897(0) = '1') else 
        grp_fu_187_p2;
        sext_ln1007_fu_288_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xf_bits_per_clock_fu_282_p3),5));

        sext_ln1018_fu_419_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln1018_fu_413_p2),32));

    shl_ln414_2_fu_590_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & zext_ln414_4_fu_582_p1(24-1 downto 0)))));
    shl_ln414_fu_698_p2 <= std_logic_vector(shift_left(unsigned(tmp_81_fu_685_p1),to_integer(unsigned('0' & zext_ln414_3_fu_694_p1(24-1 downto 0)))));
    sub_ln1021_fu_326_p2 <= std_logic_vector(unsigned(zext_ln1021_fu_322_p1) - unsigned(rem_fu_96));
    sub_ln414_2_fu_561_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(trunc_ln414_reg_924));
    sub_ln414_3_fu_576_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(select_ln414_fu_566_p3));
    sub_ln414_fu_556_p2 <= std_logic_vector(signed(ap_const_lv5_18) - signed(trunc_ln1014_reg_892));
    sub_ln674_25_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(select_ln674_fu_520_p3));
    sub_ln674_26_fu_427_p2 <= std_logic_vector(unsigned(trunc_ln1018_fu_423_p1) - unsigned(add_ln1018_fu_413_p2));
    sub_ln674_27_fu_346_p2 <= std_logic_vector(unsigned(trunc_ln674_1_fu_338_p1) - unsigned(trunc_ln674_2_fu_342_p1));
    sub_ln674_28_fu_477_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(trunc_ln674_1_reg_876));
    sub_ln674_29_fu_352_p2 <= std_logic_vector(unsigned(trunc_ln674_2_fu_342_p1) - unsigned(trunc_ln674_1_fu_338_p1));
    sub_ln674_30_fu_366_p2 <= std_logic_vector(unsigned(ap_const_lv6_1F) - unsigned(select_ln674_20_fu_358_p3));
    sub_ln674_31_fu_746_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(trunc_ln674_3_fu_743_p1));
    
    tmp_73_fu_505_p4_proc : process(p_Val2_s_fu_108)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_73_fu_505_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_108;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for tmp_73_fu_505_p4_i in 0 to 32-1 loop
                v0_cpy(tmp_73_fu_505_p4_i) := p_Val2_s_fu_108(32-1-tmp_73_fu_505_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_73_fu_505_p4 <= resvalue(32-1 downto 0);
    end process;

    
    tmp_77_fu_704_p4_proc : process(shl_ln414_fu_698_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(24+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(24+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable tmp_77_fu_704_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(24 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(24 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_17(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := shl_ln414_fu_698_p2;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(24-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(24-1-unsigned(ap_const_lv32_17(5-1 downto 0)));
            for tmp_77_fu_704_p4_i in 0 to 24-1 loop
                v0_cpy(tmp_77_fu_704_p4_i) := shl_ln414_fu_698_p2(24-1-tmp_77_fu_704_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(24-1 downto 0)))));
        res_mask := res_mask(24-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_77_fu_704_p4 <= resvalue(24-1 downto 0);
    end process;

    
    tmp_78_fu_467_p4_proc : process(p_Val2_s_fu_108)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_78_fu_467_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Val2_s_fu_108;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for tmp_78_fu_467_p4_i in 0 to 32-1 loop
                v0_cpy(tmp_78_fu_467_p4_i) := p_Val2_s_fu_108(32-1-tmp_78_fu_467_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_78_fu_467_p4 <= resvalue(32-1 downto 0);
    end process;

    tmp_79_fu_645_p1 <= p_Result_s_fu_640_p2(24 - 1 downto 0);
    tmp_81_fu_685_p1 <= p_Result_104_fu_680_p2(24 - 1 downto 0);
    tmp_fu_393_p4 <= grp_fu_182_p2(31 downto 5);
    trunc_ln1014_fu_389_p1 <= rem_fu_96(5 - 1 downto 0);
    trunc_ln1018_fu_423_p1 <= rem_fu_96(6 - 1 downto 0);
    trunc_ln414_1_fu_449_p1 <= add_ln1018_fu_413_p2(5 - 1 downto 0);
    trunc_ln414_fu_445_p1 <= rem_fu_96(5 - 1 downto 0);
    trunc_ln674_1_fu_338_p1 <= grp_fu_182_p2(6 - 1 downto 0);
    trunc_ln674_2_fu_342_p1 <= sub_ln1021_fu_326_p2(6 - 1 downto 0);
    trunc_ln674_3_fu_743_p1 <= sext_ln1021(5 - 1 downto 0);
    trunc_ln674_fu_409_p1 <= grp_fu_182_p2(6 - 1 downto 0);
    xf_bits_per_clock_fu_282_p3 <= 
        strideBased_last_blk_width when (bLast_reg_850(0) = '1') else 
        ap_const_lv4_8;
    xor_ln414_fu_721_p2 <= (ap_const_lv24_FFFFFF xor and_ln414_reg_968);
    zext_ln1001_fu_215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_100),32));
    zext_ln1007_1_fu_296_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1007_fu_288_p1),6));
    zext_ln1007_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1007_fu_288_p1),32));
    zext_ln1008_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ptr_width_minus_fu_300_p3),32));
    zext_ln1021_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1021_fu_316_p3),32));
    zext_ln414_3_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_5_fu_689_p3),24));
    zext_ln414_4_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln414_4_fu_571_p3),24));
    zext_ln414_5_fu_586_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_3_fu_576_p2),24));
    zext_ln414_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln414_reg_953),24));
    zext_ln674_12_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_25_reg_943),32));
    zext_ln674_13_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln674_1_reg_911_pp0_iter3_reg),32));
    zext_ln674_14_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_22_fu_489_p3),32));
    zext_ln674_15_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_30_reg_882_pp0_iter3_reg),32));
    zext_ln674_16_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_31_reg_984),24));
    zext_ln674_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_19_fu_534_p3),32));
end behav;
