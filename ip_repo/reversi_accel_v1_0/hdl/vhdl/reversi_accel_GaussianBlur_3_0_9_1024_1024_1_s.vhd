-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reversi_accel_GaussianBlur_3_0_9_1024_1024_1_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_rows_empty_n : IN STD_LOGIC;
    p_src_rows_read : OUT STD_LOGIC;
    p_src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_src_cols_empty_n : IN STD_LOGIC;
    p_src_cols_read : OUT STD_LOGIC;
    mat_in_4228_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    mat_in_4228_empty_n : IN STD_LOGIC;
    mat_in_4228_read : OUT STD_LOGIC;
    mat_blur_4229_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    mat_blur_4229_full_n : IN STD_LOGIC;
    mat_blur_4229_write : OUT STD_LOGIC );
end;


architecture behav of reversi_accel_GaussianBlur_3_0_9_1024_1024_1_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_src_rows_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal p_src_cols_blk_n : STD_LOGIC;
    signal grp_fu_93_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum_reg_142 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal trunc_ln1246_fu_111_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1246_reg_153 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1246_1_fu_116_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1246_1_reg_158 : STD_LOGIC_VECTOR (15 downto 0);
    signal cf_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal cf_ce0 : STD_LOGIC;
    signal cf_we0 : STD_LOGIC;
    signal cf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cf_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_idle : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_ready : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_ce0 : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_we0 : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_sum_1_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_sum_1_out_ap_vld : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_ce : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_ce : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_ce : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_idle : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_ready : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_ce0 : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_we0 : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_1_07_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_1_07_out_ap_vld : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_0_06_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_0_06_out_ap_vld : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_ce : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_ce : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_ce : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_idle : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_ready : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_in_4228_read : STD_LOGIC;
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_din : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_write : STD_LOGIC;
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call10 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state20_ignore_call18 : BOOLEAN;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state20 : BOOLEAN;
    signal grp_fu_163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_163_ce : STD_LOGIC;
    signal grp_fu_167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_167_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_167_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_167_ce : STD_LOGIC;
    signal grp_fu_171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_171_ce : STD_LOGIC;
    signal grp_fu_174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_174_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cf_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        cf_ce0 : OUT STD_LOGIC;
        cf_we0 : OUT STD_LOGIC;
        cf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        sum_1_out_ap_vld : OUT STD_LOGIC;
        grp_fu_163_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_163_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_ce : OUT STD_LOGIC;
        grp_fu_167_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_ce : OUT STD_LOGIC;
        grp_fu_171_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_171_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_171_p_ce : OUT STD_LOGIC );
    end component;


    component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cf_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        cf_ce0 : OUT STD_LOGIC;
        cf_we0 : OUT STD_LOGIC;
        cf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        sum : IN STD_LOGIC_VECTOR (31 downto 0);
        weights_1_07_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_1_07_out_ap_vld : OUT STD_LOGIC;
        weights_0_06_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        weights_0_06_out_ap_vld : OUT STD_LOGIC;
        grp_fu_163_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_163_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_163_p_ce : OUT STD_LOGIC;
        grp_fu_167_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_167_p_ce : OUT STD_LOGIC;
        grp_fu_174_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_174_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_174_p_ce : OUT STD_LOGIC );
    end component;


    component reversi_accel_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat_in_4228_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        mat_in_4228_empty_n : IN STD_LOGIC;
        mat_in_4228_read : OUT STD_LOGIC;
        mat_blur_4229_din : OUT STD_LOGIC_VECTOR (23 downto 0);
        mat_blur_4229_full_n : IN STD_LOGIC;
        mat_blur_4229_write : OUT STD_LOGIC;
        img_height : IN STD_LOGIC_VECTOR (15 downto 0);
        img_width : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component reversi_accel_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reversi_accel_faddfsub_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reversi_accel_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reversi_accel_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reversi_accel_sitofp_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_s_cf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    cf_U : component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_s_cf
    generic map (
        DataWidth => 32,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cf_address0,
        ce0 => cf_ce0,
        we0 => cf_we0,
        d0 => cf_d0,
        q0 => cf_q0);

    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66 : component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start,
        ap_done => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done,
        ap_idle => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_idle,
        ap_ready => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_ready,
        cf_address0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_address0,
        cf_ce0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_ce0,
        cf_we0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_we0,
        cf_d0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_d0,
        sum_1_out => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_sum_1_out,
        sum_1_out_ap_vld => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_sum_1_out_ap_vld,
        grp_fu_163_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din0,
        grp_fu_163_p_din1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din1,
        grp_fu_163_p_opcode => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_opcode,
        grp_fu_163_p_dout0 => grp_fu_163_p2,
        grp_fu_163_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_ce,
        grp_fu_167_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din0,
        grp_fu_167_p_din1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din1,
        grp_fu_167_p_dout0 => grp_fu_167_p2,
        grp_fu_167_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_ce,
        grp_fu_171_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_din0,
        grp_fu_171_p_dout0 => grp_fu_171_p1,
        grp_fu_171_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_ce);

    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73 : component reversi_accel_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start,
        ap_done => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done,
        ap_idle => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_idle,
        ap_ready => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_ready,
        cf_address0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_address0,
        cf_ce0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_ce0,
        cf_we0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_we0,
        cf_d0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_d0,
        cf_q0 => cf_q0,
        sum => sum_reg_142,
        weights_1_07_out => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_1_07_out,
        weights_1_07_out_ap_vld => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_1_07_out_ap_vld,
        weights_0_06_out => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_0_06_out,
        weights_0_06_out_ap_vld => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_0_06_out_ap_vld,
        grp_fu_163_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din0,
        grp_fu_163_p_din1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din1,
        grp_fu_163_p_opcode => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_opcode,
        grp_fu_163_p_dout0 => grp_fu_163_p2,
        grp_fu_163_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_ce,
        grp_fu_167_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din0,
        grp_fu_167_p_din1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din1,
        grp_fu_167_p_dout0 => grp_fu_167_p2,
        grp_fu_167_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_ce,
        grp_fu_174_p_din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_din0,
        grp_fu_174_p_dout0 => grp_fu_174_p1,
        grp_fu_174_p_ce => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_ce);

    grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81 : component reversi_accel_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start,
        ap_done => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done,
        ap_idle => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_idle,
        ap_ready => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_ready,
        mat_in_4228_dout => mat_in_4228_dout,
        mat_in_4228_empty_n => mat_in_4228_empty_n,
        mat_in_4228_read => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_in_4228_read,
        mat_blur_4229_din => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_din,
        mat_blur_4229_full_n => mat_blur_4229_full_n,
        mat_blur_4229_write => grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_write,
        img_height => trunc_ln1246_reg_153,
        img_width => trunc_ln1246_1_reg_158,
        p_read => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_0_06_out,
        p_read1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_weights_1_07_out);

    fdiv_32ns_32ns_32_16_no_dsp_1_U165 : component reversi_accel_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_3F800000,
        din1 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_sum_1_out,
        ce => ap_const_logic_1,
        dout => grp_fu_93_p2);

    faddfsub_32ns_32ns_32_5_full_dsp_1_U166 : component reversi_accel_faddfsub_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_163_p0,
        din1 => grp_fu_163_p1,
        opcode => grp_fu_163_opcode,
        ce => grp_fu_163_ce,
        dout => grp_fu_163_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U167 : component reversi_accel_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_167_p0,
        din1 => grp_fu_167_p1,
        ce => grp_fu_167_ce,
        dout => grp_fu_167_p2);

    sitofp_32s_32_6_no_dsp_1_U168 : component reversi_accel_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_din0,
        ce => grp_fu_171_ce,
        dout => grp_fu_171_p1);

    sitofp_32ns_32_6_no_dsp_1_U169 : component reversi_accel_sitofp_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_din0,
        ce => grp_fu_174_ce,
        dout => grp_fu_174_p1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_ready = ap_const_logic_1)) then 
                    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_ready = ap_const_logic_1)) then 
                    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_ready = ap_const_logic_1)) then 
                    grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                sum_reg_142 <= grp_fu_93_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                trunc_ln1246_1_reg_158 <= trunc_ln1246_1_fu_116_p1;
                trunc_ln1246_reg_153 <= trunc_ln1246_fu_111_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src_rows_empty_n, p_src_cols_empty_n, ap_CS_fsm_state20, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done, grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state19, ap_CS_fsm_state21)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if ((not(((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done)
    begin
        if ((grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(p_src_rows_empty_n, p_src_cols_empty_n)
    begin
        if (((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done)
    begin
        if ((grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done)
    begin
        if ((grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call10_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call10 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state20_assign_proc : process(p_src_rows_empty_n, p_src_cols_empty_n)
    begin
                ap_block_state20 <= ((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;


    ap_block_state20_ignore_call18_assign_proc : process(p_src_rows_empty_n, p_src_cols_empty_n)
    begin
                ap_block_state20_ignore_call18 <= ((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) and (grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cf_address0_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_address0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_address0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cf_address0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cf_address0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_address0;
        else 
            cf_address0 <= "XX";
        end if; 
    end process;


    cf_ce0_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_ce0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_ce0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cf_ce0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cf_ce0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_ce0;
        else 
            cf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cf_d0_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_d0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_d0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cf_d0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cf_d0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_d0;
        else 
            cf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cf_we0_assign_proc : process(grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_we0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_we0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            cf_we0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_cf_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            cf_we0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_cf_we0;
        else 
            cf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_ap_start_reg;
    grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_ap_start_reg;

    grp_fu_163_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_ce, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_163_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_163_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_ce;
        else 
            grp_fu_163_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_163_opcode_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_opcode, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_opcode, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_163_opcode <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_opcode;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_163_opcode <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_opcode;
        else 
            grp_fu_163_opcode <= "XX";
        end if; 
    end process;


    grp_fu_163_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_163_p0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_163_p0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din0;
        else 
            grp_fu_163_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_163_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din1, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_163_p1 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_163_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_163_p1 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_163_p_din1;
        else 
            grp_fu_163_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_167_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_ce, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_ce, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_167_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_167_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_ce;
        else 
            grp_fu_167_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_167_p0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din0, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din0, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_167_p0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_167_p0 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din0;
        else 
            grp_fu_167_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_167_p1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din1, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din1, ap_CS_fsm_state2, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_167_p1 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_167_p_din1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_167_p1 <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_167_p_din1;
        else 
            grp_fu_167_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_171_ce_assign_proc : process(ap_CS_fsm_state1, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_ce, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            grp_fu_171_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_48_1_fu_66_grp_fu_171_p_ce;
        else 
            grp_fu_171_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_174_ce_assign_proc : process(ap_CS_fsm_state18, grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_ce, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_fu_174_ce <= grp_GaussianBlur_3_0_9_1024_1024_1_Pipeline_VITIS_LOOP_58_2_fu_73_grp_fu_174_p_ce;
        else 
            grp_fu_174_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start <= grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_ap_start_reg;
    mat_blur_4229_din <= grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_din;

    mat_blur_4229_write_assign_proc : process(grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_write, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            mat_blur_4229_write <= grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_blur_4229_write;
        else 
            mat_blur_4229_write <= ap_const_logic_0;
        end if; 
    end process;


    mat_in_4228_read_assign_proc : process(grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_in_4228_read, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            mat_in_4228_read <= grp_xfGaussianFilter3x3_9_1024_1024_3_15_1_9_1024_s_fu_81_mat_in_4228_read;
        else 
            mat_in_4228_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_cols_blk_n_assign_proc : process(p_src_cols_empty_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_src_cols_blk_n <= p_src_cols_empty_n;
        else 
            p_src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_cols_read_assign_proc : process(p_src_rows_empty_n, p_src_cols_empty_n, ap_CS_fsm_state20)
    begin
        if ((not(((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            p_src_cols_read <= ap_const_logic_1;
        else 
            p_src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src_rows_blk_n_assign_proc : process(p_src_rows_empty_n, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_src_rows_blk_n <= p_src_rows_empty_n;
        else 
            p_src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src_rows_read_assign_proc : process(p_src_rows_empty_n, p_src_cols_empty_n, ap_CS_fsm_state20)
    begin
        if ((not(((p_src_cols_empty_n = ap_const_logic_0) or (p_src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            p_src_rows_read <= ap_const_logic_1;
        else 
            p_src_rows_read <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln1246_1_fu_116_p1 <= p_src_cols_dout(16 - 1 downto 0);
    trunc_ln1246_fu_111_p1 <= p_src_rows_dout(16 - 1 downto 0);
end behav;
