-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    mat_hsv1_4231_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    mat_hsv1_4231_empty_n : IN STD_LOGIC;
    mat_hsv1_4231_read : OUT STD_LOGIC;
    mat_green1_4233_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    mat_green1_4233_full_n : IN STD_LOGIC;
    mat_green1_4233_write : OUT STD_LOGIC;
    lower_thresh_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    lower_thresh_ce0 : OUT STD_LOGIC;
    lower_thresh_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
    height : IN STD_LOGIC_VECTOR (15 downto 0);
    width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_lower_thresh_V_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lower_thresh_V_load_reg_159 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_lower_thresh_V_q1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lower_thresh_V_load_1_reg_184 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lower_thresh_V_load_2_reg_189 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_lower_thresh_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_lower_thresh_V_ce0 : STD_LOGIC;
    signal p_lower_thresh_V_we0 : STD_LOGIC;
    signal p_lower_thresh_V_address1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_lower_thresh_V_ce1 : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_idle : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_ready : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_ce0 : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_ce0 : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_we0 : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_d0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_idle : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_ready : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_hsv1_4231_read : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_din : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_write : STD_LOGIC;
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln1057_fu_131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i_V_fu_46 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_V_4_fu_136_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln1057_fu_127_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lower_thresh_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        lower_thresh_ce0 : OUT STD_LOGIC;
        lower_thresh_q0 : IN STD_LOGIC_VECTOR (6 downto 0);
        p_lower_thresh_V_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        p_lower_thresh_V_ce0 : OUT STD_LOGIC;
        p_lower_thresh_V_we0 : OUT STD_LOGIC;
        p_lower_thresh_V_d0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat_hsv1_4231_dout : IN STD_LOGIC_VECTOR (23 downto 0);
        mat_hsv1_4231_empty_n : IN STD_LOGIC;
        mat_hsv1_4231_read : OUT STD_LOGIC;
        mat_green1_4233_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        mat_green1_4233_full_n : IN STD_LOGIC;
        mat_green1_4233_write : OUT STD_LOGIC;
        width : IN STD_LOGIC_VECTOR (15 downto 0);
        p_lower_thresh_V_load_cast : IN STD_LOGIC_VECTOR (6 downto 0);
        p_lower_thresh_V_load_1_cast : IN STD_LOGIC_VECTOR (6 downto 0);
        p_lower_thresh_V_load_2_cast : IN STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_s_p_lower_thresh_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (6 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        address1 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    p_lower_thresh_V_U : component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_s_p_lower_thresh_V
    generic map (
        DataWidth => 7,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_lower_thresh_V_address0,
        ce0 => p_lower_thresh_V_ce0,
        we0 => p_lower_thresh_V_we0,
        d0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_d0,
        q0 => p_lower_thresh_V_q0,
        address1 => p_lower_thresh_V_address1,
        ce1 => p_lower_thresh_V_ce1,
        q1 => p_lower_thresh_V_q1);

    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99 : component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start,
        ap_done => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done,
        ap_idle => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_idle,
        ap_ready => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_ready,
        lower_thresh_address0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_address0,
        lower_thresh_ce0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_ce0,
        lower_thresh_q0 => lower_thresh_q0,
        p_lower_thresh_V_address0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_address0,
        p_lower_thresh_V_ce0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_ce0,
        p_lower_thresh_V_we0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_we0,
        p_lower_thresh_V_d0 => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_d0);

    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107 : component reversi_accel_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start,
        ap_done => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done,
        ap_idle => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_idle,
        ap_ready => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_ready,
        mat_hsv1_4231_dout => mat_hsv1_4231_dout,
        mat_hsv1_4231_empty_n => mat_hsv1_4231_empty_n,
        mat_hsv1_4231_read => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_hsv1_4231_read,
        mat_green1_4233_din => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_din,
        mat_green1_4233_full_n => mat_green1_4233_full_n,
        mat_green1_4233_write => grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_write,
        width => width,
        p_lower_thresh_V_load_cast => p_lower_thresh_V_load_reg_159,
        p_lower_thresh_V_load_1_cast => p_lower_thresh_V_load_1_reg_184,
        p_lower_thresh_V_load_2_cast => p_lower_thresh_V_load_2_reg_189);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_ready = ap_const_logic_1)) then 
                    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_fu_131_p2 = ap_const_lv1_1))) then 
                    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_ready = ap_const_logic_1)) then 
                    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_V_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_V_fu_46 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_fu_131_p2 = ap_const_lv1_1))) then 
                i_V_fu_46 <= i_V_4_fu_136_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                p_lower_thresh_V_load_1_reg_184 <= p_lower_thresh_V_q1;
                p_lower_thresh_V_load_2_reg_189 <= p_lower_thresh_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_lower_thresh_V_load_reg_159 <= p_lower_thresh_V_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done, grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6, icmp_ln1057_fu_131_p2, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_fu_131_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done)
    begin
        if ((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done)
    begin
        if ((grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6, icmp_ln1057_fu_131_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_fu_131_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln1057_fu_131_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1057_fu_131_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_ap_start_reg;
    grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_ap_start_reg;
    i_V_4_fu_136_p2 <= std_logic_vector(unsigned(i_V_fu_46) + unsigned(ap_const_lv13_1));
    icmp_ln1057_fu_131_p2 <= "1" when (unsigned(zext_ln1057_fu_127_p1) < unsigned(height)) else "0";
    lower_thresh_address0 <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_address0;
    lower_thresh_ce0 <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_lower_thresh_ce0;
    mat_green1_4233_din <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_din;

    mat_green1_4233_write_assign_proc : process(grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_write, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mat_green1_4233_write <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_green1_4233_write;
        else 
            mat_green1_4233_write <= ap_const_logic_0;
        end if; 
    end process;


    mat_hsv1_4231_read_assign_proc : process(grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_hsv1_4231_read, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            mat_hsv1_4231_read <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_colLoop_fu_107_mat_hsv1_4231_read;
        else 
            mat_hsv1_4231_read <= ap_const_logic_0;
        end if; 
    end process;


    p_lower_thresh_V_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lower_thresh_V_address0 <= ap_const_lv64_2(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_lower_thresh_V_address0 <= ap_const_lv64_0(2 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lower_thresh_V_address0 <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_address0;
        else 
            p_lower_thresh_V_address0 <= "XX";
        end if; 
    end process;

    p_lower_thresh_V_address1 <= ap_const_lv64_1(2 - 1 downto 0);

    p_lower_thresh_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            p_lower_thresh_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lower_thresh_V_ce0 <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_ce0;
        else 
            p_lower_thresh_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_lower_thresh_V_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_lower_thresh_V_ce1 <= ap_const_logic_1;
        else 
            p_lower_thresh_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_lower_thresh_V_we0_assign_proc : process(grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_lower_thresh_V_we0 <= grp_xFinRangeKernel_9_0_1024_1024_15_0_1_9_1_1024_Pipeline_VITIS_LOOP_99_1_fu_99_p_lower_thresh_V_we0;
        else 
            p_lower_thresh_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln1057_fu_127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_V_fu_46),16));
end behav;
