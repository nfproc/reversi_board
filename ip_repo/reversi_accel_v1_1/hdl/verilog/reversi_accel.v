// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="reversi_accel_reversi_accel,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.654000,HLS_SYN_LAT=1082526,HLS_SYN_TPT=1082527,HLS_SYN_MEM=93,HLS_SYN_DSP=0,HLS_SYN_FF=40289,HLS_SYN_LUT=87001,HLS_VERSION=2022_1}" *)

module reversi_accel (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        m_axi_data_AWVALID,
        m_axi_data_AWREADY,
        m_axi_data_AWADDR,
        m_axi_data_AWID,
        m_axi_data_AWLEN,
        m_axi_data_AWSIZE,
        m_axi_data_AWBURST,
        m_axi_data_AWLOCK,
        m_axi_data_AWCACHE,
        m_axi_data_AWPROT,
        m_axi_data_AWQOS,
        m_axi_data_AWREGION,
        m_axi_data_AWUSER,
        m_axi_data_WVALID,
        m_axi_data_WREADY,
        m_axi_data_WDATA,
        m_axi_data_WSTRB,
        m_axi_data_WLAST,
        m_axi_data_WID,
        m_axi_data_WUSER,
        m_axi_data_ARVALID,
        m_axi_data_ARREADY,
        m_axi_data_ARADDR,
        m_axi_data_ARID,
        m_axi_data_ARLEN,
        m_axi_data_ARSIZE,
        m_axi_data_ARBURST,
        m_axi_data_ARLOCK,
        m_axi_data_ARCACHE,
        m_axi_data_ARPROT,
        m_axi_data_ARQOS,
        m_axi_data_ARREGION,
        m_axi_data_ARUSER,
        m_axi_data_RVALID,
        m_axi_data_RREADY,
        m_axi_data_RDATA,
        m_axi_data_RLAST,
        m_axi_data_RID,
        m_axi_data_RUSER,
        m_axi_data_RRESP,
        m_axi_data_BVALID,
        m_axi_data_BREADY,
        m_axi_data_BRESP,
        m_axi_data_BID,
        m_axi_data_BUSER,
        m_axi_rho_AWVALID,
        m_axi_rho_AWREADY,
        m_axi_rho_AWADDR,
        m_axi_rho_AWID,
        m_axi_rho_AWLEN,
        m_axi_rho_AWSIZE,
        m_axi_rho_AWBURST,
        m_axi_rho_AWLOCK,
        m_axi_rho_AWCACHE,
        m_axi_rho_AWPROT,
        m_axi_rho_AWQOS,
        m_axi_rho_AWREGION,
        m_axi_rho_AWUSER,
        m_axi_rho_WVALID,
        m_axi_rho_WREADY,
        m_axi_rho_WDATA,
        m_axi_rho_WSTRB,
        m_axi_rho_WLAST,
        m_axi_rho_WID,
        m_axi_rho_WUSER,
        m_axi_rho_ARVALID,
        m_axi_rho_ARREADY,
        m_axi_rho_ARADDR,
        m_axi_rho_ARID,
        m_axi_rho_ARLEN,
        m_axi_rho_ARSIZE,
        m_axi_rho_ARBURST,
        m_axi_rho_ARLOCK,
        m_axi_rho_ARCACHE,
        m_axi_rho_ARPROT,
        m_axi_rho_ARQOS,
        m_axi_rho_ARREGION,
        m_axi_rho_ARUSER,
        m_axi_rho_RVALID,
        m_axi_rho_RREADY,
        m_axi_rho_RDATA,
        m_axi_rho_RLAST,
        m_axi_rho_RID,
        m_axi_rho_RUSER,
        m_axi_rho_RRESP,
        m_axi_rho_BVALID,
        m_axi_rho_BREADY,
        m_axi_rho_BRESP,
        m_axi_rho_BID,
        m_axi_rho_BUSER,
        m_axi_theta_AWVALID,
        m_axi_theta_AWREADY,
        m_axi_theta_AWADDR,
        m_axi_theta_AWID,
        m_axi_theta_AWLEN,
        m_axi_theta_AWSIZE,
        m_axi_theta_AWBURST,
        m_axi_theta_AWLOCK,
        m_axi_theta_AWCACHE,
        m_axi_theta_AWPROT,
        m_axi_theta_AWQOS,
        m_axi_theta_AWREGION,
        m_axi_theta_AWUSER,
        m_axi_theta_WVALID,
        m_axi_theta_WREADY,
        m_axi_theta_WDATA,
        m_axi_theta_WSTRB,
        m_axi_theta_WLAST,
        m_axi_theta_WID,
        m_axi_theta_WUSER,
        m_axi_theta_ARVALID,
        m_axi_theta_ARREADY,
        m_axi_theta_ARADDR,
        m_axi_theta_ARID,
        m_axi_theta_ARLEN,
        m_axi_theta_ARSIZE,
        m_axi_theta_ARBURST,
        m_axi_theta_ARLOCK,
        m_axi_theta_ARCACHE,
        m_axi_theta_ARPROT,
        m_axi_theta_ARQOS,
        m_axi_theta_ARREGION,
        m_axi_theta_ARUSER,
        m_axi_theta_RVALID,
        m_axi_theta_RREADY,
        m_axi_theta_RDATA,
        m_axi_theta_RLAST,
        m_axi_theta_RID,
        m_axi_theta_RUSER,
        m_axi_theta_RRESP,
        m_axi_theta_BVALID,
        m_axi_theta_BREADY,
        m_axi_theta_BRESP,
        m_axi_theta_BID,
        m_axi_theta_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_ADDR_WIDTH = 64;
parameter    C_M_AXI_DATA_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_RHO_ID_WIDTH = 1;
parameter    C_M_AXI_RHO_ADDR_WIDTH = 64;
parameter    C_M_AXI_RHO_DATA_WIDTH = 32;
parameter    C_M_AXI_RHO_AWUSER_WIDTH = 1;
parameter    C_M_AXI_RHO_ARUSER_WIDTH = 1;
parameter    C_M_AXI_RHO_WUSER_WIDTH = 1;
parameter    C_M_AXI_RHO_RUSER_WIDTH = 1;
parameter    C_M_AXI_RHO_BUSER_WIDTH = 1;
parameter    C_M_AXI_RHO_USER_VALUE = 0;
parameter    C_M_AXI_RHO_PROT_VALUE = 0;
parameter    C_M_AXI_RHO_CACHE_VALUE = 3;
parameter    C_M_AXI_THETA_ID_WIDTH = 1;
parameter    C_M_AXI_THETA_ADDR_WIDTH = 64;
parameter    C_M_AXI_THETA_DATA_WIDTH = 32;
parameter    C_M_AXI_THETA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_THETA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_THETA_WUSER_WIDTH = 1;
parameter    C_M_AXI_THETA_RUSER_WIDTH = 1;
parameter    C_M_AXI_THETA_BUSER_WIDTH = 1;
parameter    C_M_AXI_THETA_USER_VALUE = 0;
parameter    C_M_AXI_THETA_PROT_VALUE = 0;
parameter    C_M_AXI_THETA_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_RHO_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_THETA_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
output   m_axi_data_AWVALID;
input   m_axi_data_AWREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_AWADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_AWID;
output  [7:0] m_axi_data_AWLEN;
output  [2:0] m_axi_data_AWSIZE;
output  [1:0] m_axi_data_AWBURST;
output  [1:0] m_axi_data_AWLOCK;
output  [3:0] m_axi_data_AWCACHE;
output  [2:0] m_axi_data_AWPROT;
output  [3:0] m_axi_data_AWQOS;
output  [3:0] m_axi_data_AWREGION;
output  [C_M_AXI_DATA_AWUSER_WIDTH - 1:0] m_axi_data_AWUSER;
output   m_axi_data_WVALID;
input   m_axi_data_WREADY;
output  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_WDATA;
output  [C_M_AXI_DATA_WSTRB_WIDTH - 1:0] m_axi_data_WSTRB;
output   m_axi_data_WLAST;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_WID;
output  [C_M_AXI_DATA_WUSER_WIDTH - 1:0] m_axi_data_WUSER;
output   m_axi_data_ARVALID;
input   m_axi_data_ARREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_ARADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_ARID;
output  [7:0] m_axi_data_ARLEN;
output  [2:0] m_axi_data_ARSIZE;
output  [1:0] m_axi_data_ARBURST;
output  [1:0] m_axi_data_ARLOCK;
output  [3:0] m_axi_data_ARCACHE;
output  [2:0] m_axi_data_ARPROT;
output  [3:0] m_axi_data_ARQOS;
output  [3:0] m_axi_data_ARREGION;
output  [C_M_AXI_DATA_ARUSER_WIDTH - 1:0] m_axi_data_ARUSER;
input   m_axi_data_RVALID;
output   m_axi_data_RREADY;
input  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_RDATA;
input   m_axi_data_RLAST;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_RID;
input  [C_M_AXI_DATA_RUSER_WIDTH - 1:0] m_axi_data_RUSER;
input  [1:0] m_axi_data_RRESP;
input   m_axi_data_BVALID;
output   m_axi_data_BREADY;
input  [1:0] m_axi_data_BRESP;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_BID;
input  [C_M_AXI_DATA_BUSER_WIDTH - 1:0] m_axi_data_BUSER;
output   m_axi_rho_AWVALID;
input   m_axi_rho_AWREADY;
output  [C_M_AXI_RHO_ADDR_WIDTH - 1:0] m_axi_rho_AWADDR;
output  [C_M_AXI_RHO_ID_WIDTH - 1:0] m_axi_rho_AWID;
output  [7:0] m_axi_rho_AWLEN;
output  [2:0] m_axi_rho_AWSIZE;
output  [1:0] m_axi_rho_AWBURST;
output  [1:0] m_axi_rho_AWLOCK;
output  [3:0] m_axi_rho_AWCACHE;
output  [2:0] m_axi_rho_AWPROT;
output  [3:0] m_axi_rho_AWQOS;
output  [3:0] m_axi_rho_AWREGION;
output  [C_M_AXI_RHO_AWUSER_WIDTH - 1:0] m_axi_rho_AWUSER;
output   m_axi_rho_WVALID;
input   m_axi_rho_WREADY;
output  [C_M_AXI_RHO_DATA_WIDTH - 1:0] m_axi_rho_WDATA;
output  [C_M_AXI_RHO_WSTRB_WIDTH - 1:0] m_axi_rho_WSTRB;
output   m_axi_rho_WLAST;
output  [C_M_AXI_RHO_ID_WIDTH - 1:0] m_axi_rho_WID;
output  [C_M_AXI_RHO_WUSER_WIDTH - 1:0] m_axi_rho_WUSER;
output   m_axi_rho_ARVALID;
input   m_axi_rho_ARREADY;
output  [C_M_AXI_RHO_ADDR_WIDTH - 1:0] m_axi_rho_ARADDR;
output  [C_M_AXI_RHO_ID_WIDTH - 1:0] m_axi_rho_ARID;
output  [7:0] m_axi_rho_ARLEN;
output  [2:0] m_axi_rho_ARSIZE;
output  [1:0] m_axi_rho_ARBURST;
output  [1:0] m_axi_rho_ARLOCK;
output  [3:0] m_axi_rho_ARCACHE;
output  [2:0] m_axi_rho_ARPROT;
output  [3:0] m_axi_rho_ARQOS;
output  [3:0] m_axi_rho_ARREGION;
output  [C_M_AXI_RHO_ARUSER_WIDTH - 1:0] m_axi_rho_ARUSER;
input   m_axi_rho_RVALID;
output   m_axi_rho_RREADY;
input  [C_M_AXI_RHO_DATA_WIDTH - 1:0] m_axi_rho_RDATA;
input   m_axi_rho_RLAST;
input  [C_M_AXI_RHO_ID_WIDTH - 1:0] m_axi_rho_RID;
input  [C_M_AXI_RHO_RUSER_WIDTH - 1:0] m_axi_rho_RUSER;
input  [1:0] m_axi_rho_RRESP;
input   m_axi_rho_BVALID;
output   m_axi_rho_BREADY;
input  [1:0] m_axi_rho_BRESP;
input  [C_M_AXI_RHO_ID_WIDTH - 1:0] m_axi_rho_BID;
input  [C_M_AXI_RHO_BUSER_WIDTH - 1:0] m_axi_rho_BUSER;
output   m_axi_theta_AWVALID;
input   m_axi_theta_AWREADY;
output  [C_M_AXI_THETA_ADDR_WIDTH - 1:0] m_axi_theta_AWADDR;
output  [C_M_AXI_THETA_ID_WIDTH - 1:0] m_axi_theta_AWID;
output  [7:0] m_axi_theta_AWLEN;
output  [2:0] m_axi_theta_AWSIZE;
output  [1:0] m_axi_theta_AWBURST;
output  [1:0] m_axi_theta_AWLOCK;
output  [3:0] m_axi_theta_AWCACHE;
output  [2:0] m_axi_theta_AWPROT;
output  [3:0] m_axi_theta_AWQOS;
output  [3:0] m_axi_theta_AWREGION;
output  [C_M_AXI_THETA_AWUSER_WIDTH - 1:0] m_axi_theta_AWUSER;
output   m_axi_theta_WVALID;
input   m_axi_theta_WREADY;
output  [C_M_AXI_THETA_DATA_WIDTH - 1:0] m_axi_theta_WDATA;
output  [C_M_AXI_THETA_WSTRB_WIDTH - 1:0] m_axi_theta_WSTRB;
output   m_axi_theta_WLAST;
output  [C_M_AXI_THETA_ID_WIDTH - 1:0] m_axi_theta_WID;
output  [C_M_AXI_THETA_WUSER_WIDTH - 1:0] m_axi_theta_WUSER;
output   m_axi_theta_ARVALID;
input   m_axi_theta_ARREADY;
output  [C_M_AXI_THETA_ADDR_WIDTH - 1:0] m_axi_theta_ARADDR;
output  [C_M_AXI_THETA_ID_WIDTH - 1:0] m_axi_theta_ARID;
output  [7:0] m_axi_theta_ARLEN;
output  [2:0] m_axi_theta_ARSIZE;
output  [1:0] m_axi_theta_ARBURST;
output  [1:0] m_axi_theta_ARLOCK;
output  [3:0] m_axi_theta_ARCACHE;
output  [2:0] m_axi_theta_ARPROT;
output  [3:0] m_axi_theta_ARQOS;
output  [3:0] m_axi_theta_ARREGION;
output  [C_M_AXI_THETA_ARUSER_WIDTH - 1:0] m_axi_theta_ARUSER;
input   m_axi_theta_RVALID;
output   m_axi_theta_RREADY;
input  [C_M_AXI_THETA_DATA_WIDTH - 1:0] m_axi_theta_RDATA;
input   m_axi_theta_RLAST;
input  [C_M_AXI_THETA_ID_WIDTH - 1:0] m_axi_theta_RID;
input  [C_M_AXI_THETA_RUSER_WIDTH - 1:0] m_axi_theta_RUSER;
input  [1:0] m_axi_theta_RRESP;
input   m_axi_theta_BVALID;
output   m_axi_theta_BREADY;
input  [1:0] m_axi_theta_BRESP;
input  [C_M_AXI_THETA_ID_WIDTH - 1:0] m_axi_theta_BID;
input  [C_M_AXI_THETA_BUSER_WIDTH - 1:0] m_axi_theta_BUSER;

 reg    ap_rst_n_inv;
wire   [63:0] data_in;
wire   [63:0] rho_out;
wire   [63:0] theta_out;
wire   [31:0] height;
wire   [31:0] width;
wire   [31:0] stride;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    data_AWREADY;
wire    data_WREADY;
wire    data_ARREADY;
wire    data_RVALID;
wire   [31:0] data_RDATA;
wire    data_RLAST;
wire   [0:0] data_RID;
wire   [8:0] data_RFIFONUM;
wire   [0:0] data_RUSER;
wire   [1:0] data_RRESP;
wire    data_BVALID;
wire    rho_AWREADY;
wire    rho_WREADY;
wire    rho_ARREADY;
wire    rho_RVALID;
wire   [31:0] rho_RDATA;
wire   [8:0] rho_RFIFONUM;
wire    rho_BVALID;
wire   [1:0] rho_BRESP;
wire   [0:0] rho_BID;
wire   [0:0] rho_BUSER;
wire    theta_AWREADY;
wire    theta_WREADY;
wire    theta_ARREADY;
wire    theta_RVALID;
wire   [31:0] theta_RDATA;
wire   [8:0] theta_RFIFONUM;
wire    theta_BVALID;
wire   [1:0] theta_BRESP;
wire   [0:0] theta_BID;
wire   [0:0] theta_BUSER;
wire    entry_proc19_U0_ap_start;
wire    entry_proc19_U0_ap_done;
wire    entry_proc19_U0_ap_continue;
wire    entry_proc19_U0_ap_idle;
wire    entry_proc19_U0_ap_ready;
wire   [63:0] entry_proc19_U0_rho_out_c_din;
wire    entry_proc19_U0_rho_out_c_write;
wire   [63:0] entry_proc19_U0_theta_out_c_din;
wire    entry_proc19_U0_theta_out_c_write;
wire    Block_entry4_proc_U0_ap_start;
wire    Block_entry4_proc_U0_ap_done;
wire    Block_entry4_proc_U0_ap_continue;
wire    Block_entry4_proc_U0_ap_idle;
wire    Block_entry4_proc_U0_ap_ready;
wire   [31:0] Block_entry4_proc_U0_ap_return_0;
wire   [31:0] Block_entry4_proc_U0_ap_return_1;
wire   [31:0] Block_entry4_proc_U0_ap_return_2;
wire   [31:0] Block_entry4_proc_U0_ap_return_3;
wire   [31:0] Block_entry4_proc_U0_ap_return_4;
wire   [31:0] Block_entry4_proc_U0_ap_return_5;
wire   [31:0] Block_entry4_proc_U0_ap_return_6;
wire   [31:0] Block_entry4_proc_U0_ap_return_7;
wire   [31:0] Block_entry4_proc_U0_ap_return_8;
wire   [31:0] Block_entry4_proc_U0_ap_return_9;
wire   [31:0] Block_entry4_proc_U0_ap_return_10;
wire   [31:0] Block_entry4_proc_U0_ap_return_11;
wire   [31:0] Block_entry4_proc_U0_ap_return_12;
wire   [31:0] Block_entry4_proc_U0_ap_return_13;
wire   [31:0] Block_entry4_proc_U0_ap_return_14;
wire   [31:0] Block_entry4_proc_U0_ap_return_15;
wire   [31:0] Block_entry4_proc_U0_ap_return_16;
wire   [31:0] Block_entry4_proc_U0_ap_return_17;
wire   [31:0] Block_entry4_proc_U0_ap_return_18;
wire   [31:0] Block_entry4_proc_U0_ap_return_19;
wire   [31:0] Block_entry4_proc_U0_ap_return_20;
wire   [31:0] Block_entry4_proc_U0_ap_return_21;
wire   [31:0] Block_entry4_proc_U0_ap_return_22;
wire   [31:0] Block_entry4_proc_U0_ap_return_23;
wire   [31:0] Block_entry4_proc_U0_ap_return_24;
wire   [31:0] Block_entry4_proc_U0_ap_return_25;
wire   [63:0] Block_entry4_proc_U0_ap_return_26;
wire   [31:0] Block_entry4_proc_U0_ap_return_27;
wire   [31:0] Block_entry4_proc_U0_ap_return_28;
wire    ap_channel_done_mat_in_cols_c37_channel;
wire    mat_in_cols_c37_channel_full_n;
reg    ap_sync_reg_channel_write_mat_in_cols_c37_channel;
wire    ap_sync_channel_write_mat_in_cols_c37_channel;
wire    ap_channel_done_mat_in_rows_c36_channel;
wire    mat_in_rows_c36_channel_full_n;
reg    ap_sync_reg_channel_write_mat_in_rows_c36_channel;
wire    ap_sync_channel_write_mat_in_rows_c36_channel;
wire    ap_channel_done_add_ln22_loc_channel;
wire    add_ln22_loc_channel_full_n;
reg    ap_sync_reg_channel_write_add_ln22_loc_channel;
wire    ap_sync_channel_write_add_ln22_loc_channel;
wire    ap_channel_done_mat_dil_b_cols_channel;
wire    mat_dil_b_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_dil_b_cols_channel;
wire    ap_sync_channel_write_mat_dil_b_cols_channel;
wire    ap_channel_done_mat_dil_b_rows_channel;
wire    mat_dil_b_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_dil_b_rows_channel;
wire    ap_sync_channel_write_mat_dil_b_rows_channel;
wire    ap_channel_done_mat_lap_cols_channel;
wire    mat_lap_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_lap_cols_channel;
wire    ap_sync_channel_write_mat_lap_cols_channel;
wire    ap_channel_done_mat_lap_rows_channel;
wire    mat_lap_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_lap_rows_channel;
wire    ap_sync_channel_write_mat_lap_rows_channel;
wire    ap_channel_done_mat_lap1_cols_channel;
wire    mat_lap1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_lap1_cols_channel;
wire    ap_sync_channel_write_mat_lap1_cols_channel;
wire    ap_channel_done_mat_lap1_rows_channel;
wire    mat_lap1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_lap1_rows_channel;
wire    ap_sync_channel_write_mat_lap1_rows_channel;
wire    ap_channel_done_mat_ero2_cols_channel;
wire    mat_ero2_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero2_cols_channel;
wire    ap_sync_channel_write_mat_ero2_cols_channel;
wire    ap_channel_done_mat_ero2_rows_channel;
wire    mat_ero2_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero2_rows_channel;
wire    ap_sync_channel_write_mat_ero2_rows_channel;
wire    ap_channel_done_mat_ero1_cols_channel;
wire    mat_ero1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero1_cols_channel;
wire    ap_sync_channel_write_mat_ero1_cols_channel;
wire    ap_channel_done_mat_ero1_rows_channel;
wire    mat_ero1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero1_rows_channel;
wire    ap_sync_channel_write_mat_ero1_rows_channel;
wire    ap_channel_done_mat_ero_cols_channel;
wire    mat_ero_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero_cols_channel;
wire    ap_sync_channel_write_mat_ero_cols_channel;
wire    ap_channel_done_mat_ero_rows_channel;
wire    mat_ero_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_ero_rows_channel;
wire    ap_sync_channel_write_mat_ero_rows_channel;
wire    ap_channel_done_mat_dil_a_cols_channel;
wire    mat_dil_a_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_dil_a_cols_channel;
wire    ap_sync_channel_write_mat_dil_a_cols_channel;
wire    ap_channel_done_mat_dil_a_rows_channel;
wire    mat_dil_a_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_dil_a_rows_channel;
wire    ap_sync_channel_write_mat_dil_a_rows_channel;
wire    ap_channel_done_mat_green_cols_channel;
wire    mat_green_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_green_cols_channel;
wire    ap_sync_channel_write_mat_green_cols_channel;
wire    ap_channel_done_mat_green_rows_channel;
wire    mat_green_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_green_rows_channel;
wire    ap_sync_channel_write_mat_green_rows_channel;
wire    ap_channel_done_mat_green1_cols_channel;
wire    mat_green1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_green1_cols_channel;
wire    ap_sync_channel_write_mat_green1_cols_channel;
wire    ap_channel_done_mat_green1_rows_channel;
wire    mat_green1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_green1_rows_channel;
wire    ap_sync_channel_write_mat_green1_rows_channel;
wire    ap_channel_done_mat_hsv2_cols_channel;
wire    mat_hsv2_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv2_cols_channel;
wire    ap_sync_channel_write_mat_hsv2_cols_channel;
wire    ap_channel_done_mat_hsv2_rows_channel;
wire    mat_hsv2_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv2_rows_channel;
wire    ap_sync_channel_write_mat_hsv2_rows_channel;
wire    ap_channel_done_mat_hsv1_cols_channel;
wire    mat_hsv1_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv1_cols_channel;
wire    ap_sync_channel_write_mat_hsv1_cols_channel;
wire    ap_channel_done_mat_hsv1_rows_channel;
wire    mat_hsv1_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv1_rows_channel;
wire    ap_sync_channel_write_mat_hsv1_rows_channel;
wire    ap_channel_done_mat_hsv_cols_channel;
wire    mat_hsv_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv_cols_channel;
wire    ap_sync_channel_write_mat_hsv_cols_channel;
wire    ap_channel_done_mat_hsv_rows_channel;
wire    mat_hsv_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_hsv_rows_channel;
wire    ap_sync_channel_write_mat_hsv_rows_channel;
wire    ap_channel_done_mat_blur_cols_channel;
wire    mat_blur_cols_channel_full_n;
reg    ap_sync_reg_channel_write_mat_blur_cols_channel;
wire    ap_sync_channel_write_mat_blur_cols_channel;
wire    ap_channel_done_mat_blur_rows_channel;
wire    mat_blur_rows_channel_full_n;
reg    ap_sync_reg_channel_write_mat_blur_rows_channel;
wire    ap_sync_channel_write_mat_blur_rows_channel;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_ap_start;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_ap_done;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_ap_continue;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_ap_idle;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_start_out;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_start_write;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWVALID;
wire   [63:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWADDR;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWID;
wire   [31:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWLEN;
wire   [2:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWSIZE;
wire   [1:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWBURST;
wire   [1:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWLOCK;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWCACHE;
wire   [2:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWPROT;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWQOS;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWREGION;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWUSER;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WVALID;
wire   [31:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WDATA;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WSTRB;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WLAST;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WID;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WUSER;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARVALID;
wire   [63:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARADDR;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARID;
wire   [31:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARLEN;
wire   [2:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARSIZE;
wire   [1:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARBURST;
wire   [1:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARLOCK;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARCACHE;
wire   [2:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARPROT;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARQOS;
wire   [3:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARREGION;
wire   [0:0] Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARUSER;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_RREADY;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_BREADY;
wire   [23:0] Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_din;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_write;
wire   [31:0] Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_din;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_write;
wire   [31:0] Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_din;
wire    Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_write;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_start;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_done;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_continue;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_idle;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_ready;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_rows_read;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_cols_read;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_in_data323_read;
wire   [23:0] GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_din;
wire    GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_write;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_ap_start;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_ap_done;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_ap_continue;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_ap_idle;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_ap_ready;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_mat_blur_data324_read;
wire   [23:0] bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_din;
wire    bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_write;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_ap_start;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_ap_done;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_ap_continue;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_ap_idle;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_ap_ready;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv_data325_read;
wire   [23:0] duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_din;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_write;
wire   [23:0] duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_din;
wire    duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_write;
wire    inRange_16_0_1024_1024_1_2_2_U0_ap_start;
wire    inRange_16_0_1024_1024_1_2_2_U0_ap_done;
wire    inRange_16_0_1024_1024_1_2_2_U0_ap_continue;
wire    inRange_16_0_1024_1024_1_2_2_U0_ap_idle;
wire    inRange_16_0_1024_1024_1_2_2_U0_ap_ready;
wire    inRange_16_0_1024_1024_1_2_2_U0_mat_hsv1_data326_read;
wire   [7:0] inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_din;
wire    inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_write;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_ap_start;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_ap_done;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_ap_continue;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_ap_idle;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_ap_ready;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_mat_hsv2_data327_read;
wire   [7:0] inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_din;
wire    inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_write;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_ap_start;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_ap_done;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_ap_continue;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_ap_idle;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_ap_ready;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green1_data328_read;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green2_data329_read;
wire   [7:0] bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_din;
wire    bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_write;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_done;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_green_data330_read;
wire   [7:0] dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_din;
wire    dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_write;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_done;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_read;
wire   [7:0] erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_din;
wire    erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_write;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_ap_start;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_ap_done;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_ap_continue;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_ap_idle;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_ap_ready;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero_data332_read;
wire   [7:0] duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_din;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_write;
wire   [7:0] duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_din;
wire    duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_write;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_done;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero1_data333_read;
wire   [7:0] dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_din;
wire    dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_write;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_done;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero2_data334_read;
wire   [7:0] erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_din;
wire    erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_write;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_start;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_done;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_continue;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_idle;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_ready;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap1_data335_read;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap2_data336_read;
wire   [7:0] bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_din;
wire    bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_write;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_start;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_done;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_continue;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_idle;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_ready;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_lap_data337_read;
wire   [7:0] dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_din;
wire    dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_write;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_start;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_done;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_continue;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_idle;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_ready;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_mat_dil_b_data338_read;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWVALID;
wire   [63:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWADDR;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWLEN;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWSIZE;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWBURST;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWLOCK;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWCACHE;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWPROT;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWQOS;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWREGION;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WVALID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WDATA;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WSTRB;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WLAST;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WID;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARVALID;
wire   [63:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARADDR;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARLEN;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARSIZE;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARBURST;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARLOCK;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARCACHE;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARPROT;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARQOS;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARREGION;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_RREADY;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_BREADY;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputrho_read;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWVALID;
wire   [63:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWADDR;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWLEN;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWSIZE;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWBURST;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWLOCK;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWCACHE;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWPROT;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWQOS;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWREGION;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WVALID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WDATA;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WSTRB;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WLAST;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WID;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARVALID;
wire   [63:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARADDR;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARID;
wire   [31:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARLEN;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARSIZE;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARBURST;
wire   [1:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARLOCK;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARCACHE;
wire   [2:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARPROT;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARQOS;
wire   [3:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARREGION;
wire   [0:0] HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARUSER;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_RREADY;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_BREADY;
wire    HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputtheta_read;
wire    rho_out_c_full_n;
wire   [63:0] rho_out_c_dout;
wire   [4:0] rho_out_c_num_data_valid;
wire   [4:0] rho_out_c_fifo_cap;
wire    rho_out_c_empty_n;
wire    theta_out_c_full_n;
wire   [63:0] theta_out_c_dout;
wire   [4:0] theta_out_c_num_data_valid;
wire   [4:0] theta_out_c_fifo_cap;
wire    theta_out_c_empty_n;
wire   [31:0] mat_blur_rows_channel_dout;
wire   [2:0] mat_blur_rows_channel_num_data_valid;
wire   [2:0] mat_blur_rows_channel_fifo_cap;
wire    mat_blur_rows_channel_empty_n;
wire   [31:0] mat_blur_cols_channel_dout;
wire   [2:0] mat_blur_cols_channel_num_data_valid;
wire   [2:0] mat_blur_cols_channel_fifo_cap;
wire    mat_blur_cols_channel_empty_n;
wire   [31:0] mat_hsv_rows_channel_dout;
wire   [3:0] mat_hsv_rows_channel_num_data_valid;
wire   [3:0] mat_hsv_rows_channel_fifo_cap;
wire    mat_hsv_rows_channel_empty_n;
wire   [31:0] mat_hsv_cols_channel_dout;
wire   [3:0] mat_hsv_cols_channel_num_data_valid;
wire   [3:0] mat_hsv_cols_channel_fifo_cap;
wire    mat_hsv_cols_channel_empty_n;
wire   [31:0] mat_hsv1_rows_channel_dout;
wire   [3:0] mat_hsv1_rows_channel_num_data_valid;
wire   [3:0] mat_hsv1_rows_channel_fifo_cap;
wire    mat_hsv1_rows_channel_empty_n;
wire   [31:0] mat_hsv1_cols_channel_dout;
wire   [3:0] mat_hsv1_cols_channel_num_data_valid;
wire   [3:0] mat_hsv1_cols_channel_fifo_cap;
wire    mat_hsv1_cols_channel_empty_n;
wire   [31:0] mat_hsv2_rows_channel_dout;
wire   [3:0] mat_hsv2_rows_channel_num_data_valid;
wire   [3:0] mat_hsv2_rows_channel_fifo_cap;
wire    mat_hsv2_rows_channel_empty_n;
wire   [31:0] mat_hsv2_cols_channel_dout;
wire   [3:0] mat_hsv2_cols_channel_num_data_valid;
wire   [3:0] mat_hsv2_cols_channel_fifo_cap;
wire    mat_hsv2_cols_channel_empty_n;
wire   [31:0] mat_green1_rows_channel_dout;
wire   [3:0] mat_green1_rows_channel_num_data_valid;
wire   [3:0] mat_green1_rows_channel_fifo_cap;
wire    mat_green1_rows_channel_empty_n;
wire   [31:0] mat_green1_cols_channel_dout;
wire   [3:0] mat_green1_cols_channel_num_data_valid;
wire   [3:0] mat_green1_cols_channel_fifo_cap;
wire    mat_green1_cols_channel_empty_n;
wire   [31:0] mat_green_rows_channel_dout;
wire   [3:0] mat_green_rows_channel_num_data_valid;
wire   [3:0] mat_green_rows_channel_fifo_cap;
wire    mat_green_rows_channel_empty_n;
wire   [31:0] mat_green_cols_channel_dout;
wire   [3:0] mat_green_cols_channel_num_data_valid;
wire   [3:0] mat_green_cols_channel_fifo_cap;
wire    mat_green_cols_channel_empty_n;
wire   [31:0] mat_dil_a_rows_channel_dout;
wire   [4:0] mat_dil_a_rows_channel_num_data_valid;
wire   [4:0] mat_dil_a_rows_channel_fifo_cap;
wire    mat_dil_a_rows_channel_empty_n;
wire   [31:0] mat_dil_a_cols_channel_dout;
wire   [4:0] mat_dil_a_cols_channel_num_data_valid;
wire   [4:0] mat_dil_a_cols_channel_fifo_cap;
wire    mat_dil_a_cols_channel_empty_n;
wire   [31:0] mat_ero_rows_channel_dout;
wire   [4:0] mat_ero_rows_channel_num_data_valid;
wire   [4:0] mat_ero_rows_channel_fifo_cap;
wire    mat_ero_rows_channel_empty_n;
wire   [31:0] mat_ero_cols_channel_dout;
wire   [4:0] mat_ero_cols_channel_num_data_valid;
wire   [4:0] mat_ero_cols_channel_fifo_cap;
wire    mat_ero_cols_channel_empty_n;
wire   [31:0] mat_ero1_rows_channel_dout;
wire   [4:0] mat_ero1_rows_channel_num_data_valid;
wire   [4:0] mat_ero1_rows_channel_fifo_cap;
wire    mat_ero1_rows_channel_empty_n;
wire   [31:0] mat_ero1_cols_channel_dout;
wire   [4:0] mat_ero1_cols_channel_num_data_valid;
wire   [4:0] mat_ero1_cols_channel_fifo_cap;
wire    mat_ero1_cols_channel_empty_n;
wire   [31:0] mat_ero2_rows_channel_dout;
wire   [4:0] mat_ero2_rows_channel_num_data_valid;
wire   [4:0] mat_ero2_rows_channel_fifo_cap;
wire    mat_ero2_rows_channel_empty_n;
wire   [31:0] mat_ero2_cols_channel_dout;
wire   [4:0] mat_ero2_cols_channel_num_data_valid;
wire   [4:0] mat_ero2_cols_channel_fifo_cap;
wire    mat_ero2_cols_channel_empty_n;
wire   [31:0] mat_lap1_rows_channel_dout;
wire   [4:0] mat_lap1_rows_channel_num_data_valid;
wire   [4:0] mat_lap1_rows_channel_fifo_cap;
wire    mat_lap1_rows_channel_empty_n;
wire   [31:0] mat_lap1_cols_channel_dout;
wire   [4:0] mat_lap1_cols_channel_num_data_valid;
wire   [4:0] mat_lap1_cols_channel_fifo_cap;
wire    mat_lap1_cols_channel_empty_n;
wire   [31:0] mat_lap_rows_channel_dout;
wire   [4:0] mat_lap_rows_channel_num_data_valid;
wire   [4:0] mat_lap_rows_channel_fifo_cap;
wire    mat_lap_rows_channel_empty_n;
wire   [31:0] mat_lap_cols_channel_dout;
wire   [4:0] mat_lap_cols_channel_num_data_valid;
wire   [4:0] mat_lap_cols_channel_fifo_cap;
wire    mat_lap_cols_channel_empty_n;
wire   [31:0] mat_dil_b_rows_channel_dout;
wire   [4:0] mat_dil_b_rows_channel_num_data_valid;
wire   [4:0] mat_dil_b_rows_channel_fifo_cap;
wire    mat_dil_b_rows_channel_empty_n;
wire   [31:0] mat_dil_b_cols_channel_dout;
wire   [4:0] mat_dil_b_cols_channel_num_data_valid;
wire   [4:0] mat_dil_b_cols_channel_fifo_cap;
wire    mat_dil_b_cols_channel_empty_n;
wire   [63:0] add_ln22_loc_channel_dout;
wire   [1:0] add_ln22_loc_channel_num_data_valid;
wire   [1:0] add_ln22_loc_channel_fifo_cap;
wire    add_ln22_loc_channel_empty_n;
wire   [31:0] mat_in_rows_c36_channel_dout;
wire   [1:0] mat_in_rows_c36_channel_num_data_valid;
wire   [1:0] mat_in_rows_c36_channel_fifo_cap;
wire    mat_in_rows_c36_channel_empty_n;
wire   [31:0] mat_in_cols_c37_channel_dout;
wire   [1:0] mat_in_cols_c37_channel_num_data_valid;
wire   [1:0] mat_in_cols_c37_channel_fifo_cap;
wire    mat_in_cols_c37_channel_empty_n;
wire    mat_in_data_full_n;
wire   [23:0] mat_in_data_dout;
wire   [1:0] mat_in_data_num_data_valid;
wire   [1:0] mat_in_data_fifo_cap;
wire    mat_in_data_empty_n;
wire    mat_in_rows_c_full_n;
wire   [31:0] mat_in_rows_c_dout;
wire   [1:0] mat_in_rows_c_num_data_valid;
wire   [1:0] mat_in_rows_c_fifo_cap;
wire    mat_in_rows_c_empty_n;
wire    mat_in_cols_c_full_n;
wire   [31:0] mat_in_cols_c_dout;
wire   [1:0] mat_in_cols_c_num_data_valid;
wire   [1:0] mat_in_cols_c_fifo_cap;
wire    mat_in_cols_c_empty_n;
wire    mat_blur_data_full_n;
wire   [23:0] mat_blur_data_dout;
wire   [1:0] mat_blur_data_num_data_valid;
wire   [1:0] mat_blur_data_fifo_cap;
wire    mat_blur_data_empty_n;
wire    mat_hsv_data_full_n;
wire   [23:0] mat_hsv_data_dout;
wire   [1:0] mat_hsv_data_num_data_valid;
wire   [1:0] mat_hsv_data_fifo_cap;
wire    mat_hsv_data_empty_n;
wire    mat_hsv1_data_full_n;
wire   [23:0] mat_hsv1_data_dout;
wire   [1:0] mat_hsv1_data_num_data_valid;
wire   [1:0] mat_hsv1_data_fifo_cap;
wire    mat_hsv1_data_empty_n;
wire    mat_hsv2_data_full_n;
wire   [23:0] mat_hsv2_data_dout;
wire   [1:0] mat_hsv2_data_num_data_valid;
wire   [1:0] mat_hsv2_data_fifo_cap;
wire    mat_hsv2_data_empty_n;
wire    mat_green1_data_full_n;
wire   [7:0] mat_green1_data_dout;
wire   [1:0] mat_green1_data_num_data_valid;
wire   [1:0] mat_green1_data_fifo_cap;
wire    mat_green1_data_empty_n;
wire    mat_green2_data_full_n;
wire   [7:0] mat_green2_data_dout;
wire   [1:0] mat_green2_data_num_data_valid;
wire   [1:0] mat_green2_data_fifo_cap;
wire    mat_green2_data_empty_n;
wire    mat_green_data_full_n;
wire   [7:0] mat_green_data_dout;
wire   [1:0] mat_green_data_num_data_valid;
wire   [1:0] mat_green_data_fifo_cap;
wire    mat_green_data_empty_n;
wire    mat_dil_a_data_full_n;
wire   [7:0] mat_dil_a_data_dout;
wire   [1:0] mat_dil_a_data_num_data_valid;
wire   [1:0] mat_dil_a_data_fifo_cap;
wire    mat_dil_a_data_empty_n;
wire    mat_ero_data_full_n;
wire   [7:0] mat_ero_data_dout;
wire   [1:0] mat_ero_data_num_data_valid;
wire   [1:0] mat_ero_data_fifo_cap;
wire    mat_ero_data_empty_n;
wire    mat_ero1_data_full_n;
wire   [7:0] mat_ero1_data_dout;
wire   [1:0] mat_ero1_data_num_data_valid;
wire   [1:0] mat_ero1_data_fifo_cap;
wire    mat_ero1_data_empty_n;
wire    mat_ero2_data_full_n;
wire   [7:0] mat_ero2_data_dout;
wire   [1:0] mat_ero2_data_num_data_valid;
wire   [1:0] mat_ero2_data_fifo_cap;
wire    mat_ero2_data_empty_n;
wire    mat_lap1_data_full_n;
wire   [7:0] mat_lap1_data_dout;
wire   [1:0] mat_lap1_data_num_data_valid;
wire   [1:0] mat_lap1_data_fifo_cap;
wire    mat_lap1_data_empty_n;
wire    mat_lap2_data_full_n;
wire   [7:0] mat_lap2_data_dout;
wire   [1:0] mat_lap2_data_num_data_valid;
wire   [1:0] mat_lap2_data_fifo_cap;
wire    mat_lap2_data_empty_n;
wire    mat_lap_data_full_n;
wire   [7:0] mat_lap_data_dout;
wire   [1:0] mat_lap_data_num_data_valid;
wire   [1:0] mat_lap_data_fifo_cap;
wire    mat_lap_data_empty_n;
wire    mat_dil_b_data_full_n;
wire   [7:0] mat_dil_b_data_dout;
wire   [1:0] mat_dil_b_data_num_data_valid;
wire   [1:0] mat_dil_b_data_fifo_cap;
wire    mat_dil_b_data_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc19_U0_ap_ready;
wire    ap_sync_entry_proc19_U0_ap_ready;
reg    ap_sync_reg_Block_entry4_proc_U0_ap_ready;
wire    ap_sync_Block_entry4_proc_U0_ap_ready;
reg    ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready;
wire    ap_sync_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready;
wire   [0:0] start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_din;
wire    start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_full_n;
wire   [0:0] start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_dout;
wire    start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_mat_in_cols_c37_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_in_rows_c36_channel = 1'b0;
#0 ap_sync_reg_channel_write_add_ln22_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_dil_b_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_dil_b_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_lap_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_lap_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_lap1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_lap1_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero2_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero2_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero1_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_ero_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_dil_a_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_dil_a_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_green_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_green_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_green1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_green1_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv2_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv2_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv1_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv1_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_hsv_rows_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_blur_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_mat_blur_rows_channel = 1'b0;
#0 ap_sync_reg_entry_proc19_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_entry4_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready = 1'b0;
end

reversi_accel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .data_in(data_in),
    .rho_out(rho_out),
    .theta_out(theta_out),
    .height(height),
    .width(width),
    .stride(stride),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

reversi_accel_data_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
data_m_axi_U(
    .AWVALID(m_axi_data_AWVALID),
    .AWREADY(m_axi_data_AWREADY),
    .AWADDR(m_axi_data_AWADDR),
    .AWID(m_axi_data_AWID),
    .AWLEN(m_axi_data_AWLEN),
    .AWSIZE(m_axi_data_AWSIZE),
    .AWBURST(m_axi_data_AWBURST),
    .AWLOCK(m_axi_data_AWLOCK),
    .AWCACHE(m_axi_data_AWCACHE),
    .AWPROT(m_axi_data_AWPROT),
    .AWQOS(m_axi_data_AWQOS),
    .AWREGION(m_axi_data_AWREGION),
    .AWUSER(m_axi_data_AWUSER),
    .WVALID(m_axi_data_WVALID),
    .WREADY(m_axi_data_WREADY),
    .WDATA(m_axi_data_WDATA),
    .WSTRB(m_axi_data_WSTRB),
    .WLAST(m_axi_data_WLAST),
    .WID(m_axi_data_WID),
    .WUSER(m_axi_data_WUSER),
    .ARVALID(m_axi_data_ARVALID),
    .ARREADY(m_axi_data_ARREADY),
    .ARADDR(m_axi_data_ARADDR),
    .ARID(m_axi_data_ARID),
    .ARLEN(m_axi_data_ARLEN),
    .ARSIZE(m_axi_data_ARSIZE),
    .ARBURST(m_axi_data_ARBURST),
    .ARLOCK(m_axi_data_ARLOCK),
    .ARCACHE(m_axi_data_ARCACHE),
    .ARPROT(m_axi_data_ARPROT),
    .ARQOS(m_axi_data_ARQOS),
    .ARREGION(m_axi_data_ARREGION),
    .ARUSER(m_axi_data_ARUSER),
    .RVALID(m_axi_data_RVALID),
    .RREADY(m_axi_data_RREADY),
    .RDATA(m_axi_data_RDATA),
    .RLAST(m_axi_data_RLAST),
    .RID(m_axi_data_RID),
    .RUSER(m_axi_data_RUSER),
    .RRESP(m_axi_data_RRESP),
    .BVALID(m_axi_data_BVALID),
    .BREADY(m_axi_data_BREADY),
    .BRESP(m_axi_data_BRESP),
    .BID(m_axi_data_BID),
    .BUSER(m_axi_data_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARVALID),
    .I_ARREADY(data_ARREADY),
    .I_ARADDR(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARADDR),
    .I_ARLEN(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARLEN),
    .I_RVALID(data_RVALID),
    .I_RREADY(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_RREADY),
    .I_RDATA(data_RDATA),
    .I_RFIFONUM(data_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(data_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(data_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(data_BVALID),
    .I_BREADY(1'b0)
);

reversi_accel_rho_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_RHO_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_RHO_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_RHO_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_RHO_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_RHO_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_RHO_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_RHO_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_RHO_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_RHO_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_RHO_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_RHO_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
rho_m_axi_U(
    .AWVALID(m_axi_rho_AWVALID),
    .AWREADY(m_axi_rho_AWREADY),
    .AWADDR(m_axi_rho_AWADDR),
    .AWID(m_axi_rho_AWID),
    .AWLEN(m_axi_rho_AWLEN),
    .AWSIZE(m_axi_rho_AWSIZE),
    .AWBURST(m_axi_rho_AWBURST),
    .AWLOCK(m_axi_rho_AWLOCK),
    .AWCACHE(m_axi_rho_AWCACHE),
    .AWPROT(m_axi_rho_AWPROT),
    .AWQOS(m_axi_rho_AWQOS),
    .AWREGION(m_axi_rho_AWREGION),
    .AWUSER(m_axi_rho_AWUSER),
    .WVALID(m_axi_rho_WVALID),
    .WREADY(m_axi_rho_WREADY),
    .WDATA(m_axi_rho_WDATA),
    .WSTRB(m_axi_rho_WSTRB),
    .WLAST(m_axi_rho_WLAST),
    .WID(m_axi_rho_WID),
    .WUSER(m_axi_rho_WUSER),
    .ARVALID(m_axi_rho_ARVALID),
    .ARREADY(m_axi_rho_ARREADY),
    .ARADDR(m_axi_rho_ARADDR),
    .ARID(m_axi_rho_ARID),
    .ARLEN(m_axi_rho_ARLEN),
    .ARSIZE(m_axi_rho_ARSIZE),
    .ARBURST(m_axi_rho_ARBURST),
    .ARLOCK(m_axi_rho_ARLOCK),
    .ARCACHE(m_axi_rho_ARCACHE),
    .ARPROT(m_axi_rho_ARPROT),
    .ARQOS(m_axi_rho_ARQOS),
    .ARREGION(m_axi_rho_ARREGION),
    .ARUSER(m_axi_rho_ARUSER),
    .RVALID(m_axi_rho_RVALID),
    .RREADY(m_axi_rho_RREADY),
    .RDATA(m_axi_rho_RDATA),
    .RLAST(m_axi_rho_RLAST),
    .RID(m_axi_rho_RID),
    .RUSER(m_axi_rho_RUSER),
    .RRESP(m_axi_rho_RRESP),
    .BVALID(m_axi_rho_BVALID),
    .BREADY(m_axi_rho_BREADY),
    .BRESP(m_axi_rho_BRESP),
    .BID(m_axi_rho_BID),
    .BUSER(m_axi_rho_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(rho_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(rho_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(rho_RDATA),
    .I_RFIFONUM(rho_RFIFONUM),
    .I_AWVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWVALID),
    .I_AWREADY(rho_AWREADY),
    .I_AWADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWADDR),
    .I_AWLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWLEN),
    .I_WVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WVALID),
    .I_WREADY(rho_WREADY),
    .I_WDATA(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WDATA),
    .I_WSTRB(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WSTRB),
    .I_BVALID(rho_BVALID),
    .I_BREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_BREADY)
);

reversi_accel_theta_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_THETA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_THETA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_THETA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_THETA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_THETA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_THETA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_THETA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_THETA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_THETA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_THETA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_THETA_CACHE_VALUE ),
    .USER_DW( 32 ),
    .USER_AW( 64 ))
theta_m_axi_U(
    .AWVALID(m_axi_theta_AWVALID),
    .AWREADY(m_axi_theta_AWREADY),
    .AWADDR(m_axi_theta_AWADDR),
    .AWID(m_axi_theta_AWID),
    .AWLEN(m_axi_theta_AWLEN),
    .AWSIZE(m_axi_theta_AWSIZE),
    .AWBURST(m_axi_theta_AWBURST),
    .AWLOCK(m_axi_theta_AWLOCK),
    .AWCACHE(m_axi_theta_AWCACHE),
    .AWPROT(m_axi_theta_AWPROT),
    .AWQOS(m_axi_theta_AWQOS),
    .AWREGION(m_axi_theta_AWREGION),
    .AWUSER(m_axi_theta_AWUSER),
    .WVALID(m_axi_theta_WVALID),
    .WREADY(m_axi_theta_WREADY),
    .WDATA(m_axi_theta_WDATA),
    .WSTRB(m_axi_theta_WSTRB),
    .WLAST(m_axi_theta_WLAST),
    .WID(m_axi_theta_WID),
    .WUSER(m_axi_theta_WUSER),
    .ARVALID(m_axi_theta_ARVALID),
    .ARREADY(m_axi_theta_ARREADY),
    .ARADDR(m_axi_theta_ARADDR),
    .ARID(m_axi_theta_ARID),
    .ARLEN(m_axi_theta_ARLEN),
    .ARSIZE(m_axi_theta_ARSIZE),
    .ARBURST(m_axi_theta_ARBURST),
    .ARLOCK(m_axi_theta_ARLOCK),
    .ARCACHE(m_axi_theta_ARCACHE),
    .ARPROT(m_axi_theta_ARPROT),
    .ARQOS(m_axi_theta_ARQOS),
    .ARREGION(m_axi_theta_ARREGION),
    .ARUSER(m_axi_theta_ARUSER),
    .RVALID(m_axi_theta_RVALID),
    .RREADY(m_axi_theta_RREADY),
    .RDATA(m_axi_theta_RDATA),
    .RLAST(m_axi_theta_RLAST),
    .RID(m_axi_theta_RID),
    .RUSER(m_axi_theta_RUSER),
    .RRESP(m_axi_theta_RRESP),
    .BVALID(m_axi_theta_BVALID),
    .BREADY(m_axi_theta_BREADY),
    .BRESP(m_axi_theta_BRESP),
    .BID(m_axi_theta_BID),
    .BUSER(m_axi_theta_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(theta_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(theta_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(theta_RDATA),
    .I_RFIFONUM(theta_RFIFONUM),
    .I_AWVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWVALID),
    .I_AWREADY(theta_AWREADY),
    .I_AWADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWADDR),
    .I_AWLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWLEN),
    .I_WVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WVALID),
    .I_WREADY(theta_WREADY),
    .I_WDATA(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WDATA),
    .I_WSTRB(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WSTRB),
    .I_BVALID(theta_BVALID),
    .I_BREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_BREADY)
);

reversi_accel_entry_proc19 entry_proc19_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc19_U0_ap_start),
    .ap_done(entry_proc19_U0_ap_done),
    .ap_continue(entry_proc19_U0_ap_continue),
    .ap_idle(entry_proc19_U0_ap_idle),
    .ap_ready(entry_proc19_U0_ap_ready),
    .rho_out(rho_out),
    .rho_out_c_din(entry_proc19_U0_rho_out_c_din),
    .rho_out_c_num_data_valid(rho_out_c_num_data_valid),
    .rho_out_c_fifo_cap(rho_out_c_fifo_cap),
    .rho_out_c_full_n(rho_out_c_full_n),
    .rho_out_c_write(entry_proc19_U0_rho_out_c_write),
    .theta_out(theta_out),
    .theta_out_c_din(entry_proc19_U0_theta_out_c_din),
    .theta_out_c_num_data_valid(theta_out_c_num_data_valid),
    .theta_out_c_fifo_cap(theta_out_c_fifo_cap),
    .theta_out_c_full_n(theta_out_c_full_n),
    .theta_out_c_write(entry_proc19_U0_theta_out_c_write)
);

reversi_accel_Block_entry4_proc Block_entry4_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry4_proc_U0_ap_start),
    .ap_done(Block_entry4_proc_U0_ap_done),
    .ap_continue(Block_entry4_proc_U0_ap_continue),
    .ap_idle(Block_entry4_proc_U0_ap_idle),
    .ap_ready(Block_entry4_proc_U0_ap_ready),
    .height(height),
    .width(width),
    .stride(stride),
    .data_in(data_in),
    .ap_return_0(Block_entry4_proc_U0_ap_return_0),
    .ap_return_1(Block_entry4_proc_U0_ap_return_1),
    .ap_return_2(Block_entry4_proc_U0_ap_return_2),
    .ap_return_3(Block_entry4_proc_U0_ap_return_3),
    .ap_return_4(Block_entry4_proc_U0_ap_return_4),
    .ap_return_5(Block_entry4_proc_U0_ap_return_5),
    .ap_return_6(Block_entry4_proc_U0_ap_return_6),
    .ap_return_7(Block_entry4_proc_U0_ap_return_7),
    .ap_return_8(Block_entry4_proc_U0_ap_return_8),
    .ap_return_9(Block_entry4_proc_U0_ap_return_9),
    .ap_return_10(Block_entry4_proc_U0_ap_return_10),
    .ap_return_11(Block_entry4_proc_U0_ap_return_11),
    .ap_return_12(Block_entry4_proc_U0_ap_return_12),
    .ap_return_13(Block_entry4_proc_U0_ap_return_13),
    .ap_return_14(Block_entry4_proc_U0_ap_return_14),
    .ap_return_15(Block_entry4_proc_U0_ap_return_15),
    .ap_return_16(Block_entry4_proc_U0_ap_return_16),
    .ap_return_17(Block_entry4_proc_U0_ap_return_17),
    .ap_return_18(Block_entry4_proc_U0_ap_return_18),
    .ap_return_19(Block_entry4_proc_U0_ap_return_19),
    .ap_return_20(Block_entry4_proc_U0_ap_return_20),
    .ap_return_21(Block_entry4_proc_U0_ap_return_21),
    .ap_return_22(Block_entry4_proc_U0_ap_return_22),
    .ap_return_23(Block_entry4_proc_U0_ap_return_23),
    .ap_return_24(Block_entry4_proc_U0_ap_return_24),
    .ap_return_25(Block_entry4_proc_U0_ap_return_25),
    .ap_return_26(Block_entry4_proc_U0_ap_return_26),
    .ap_return_27(Block_entry4_proc_U0_ap_return_27),
    .ap_return_28(Block_entry4_proc_U0_ap_return_28)
);

reversi_accel_Array2xfMat_32_16_1024_1024_1_2_s Array2xfMat_32_16_1024_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Array2xfMat_32_16_1024_1024_1_2_U0_ap_start),
    .start_full_n(start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_full_n),
    .ap_done(Array2xfMat_32_16_1024_1024_1_2_U0_ap_done),
    .ap_continue(Array2xfMat_32_16_1024_1024_1_2_U0_ap_continue),
    .ap_idle(Array2xfMat_32_16_1024_1024_1_2_U0_ap_idle),
    .ap_ready(Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready),
    .start_out(Array2xfMat_32_16_1024_1024_1_2_U0_start_out),
    .start_write(Array2xfMat_32_16_1024_1024_1_2_U0_start_write),
    .m_axi_data_AWVALID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWVALID),
    .m_axi_data_AWREADY(1'b0),
    .m_axi_data_AWADDR(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWADDR),
    .m_axi_data_AWID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWID),
    .m_axi_data_AWLEN(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWLEN),
    .m_axi_data_AWSIZE(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWSIZE),
    .m_axi_data_AWBURST(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWBURST),
    .m_axi_data_AWLOCK(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWLOCK),
    .m_axi_data_AWCACHE(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWCACHE),
    .m_axi_data_AWPROT(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWPROT),
    .m_axi_data_AWQOS(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWQOS),
    .m_axi_data_AWREGION(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWREGION),
    .m_axi_data_AWUSER(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_AWUSER),
    .m_axi_data_WVALID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WVALID),
    .m_axi_data_WREADY(1'b0),
    .m_axi_data_WDATA(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WDATA),
    .m_axi_data_WSTRB(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WSTRB),
    .m_axi_data_WLAST(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WLAST),
    .m_axi_data_WID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WID),
    .m_axi_data_WUSER(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_WUSER),
    .m_axi_data_ARVALID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARVALID),
    .m_axi_data_ARREADY(data_ARREADY),
    .m_axi_data_ARADDR(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARADDR),
    .m_axi_data_ARID(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARID),
    .m_axi_data_ARLEN(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARLEN),
    .m_axi_data_ARSIZE(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARSIZE),
    .m_axi_data_ARBURST(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARBURST),
    .m_axi_data_ARLOCK(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARLOCK),
    .m_axi_data_ARCACHE(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARCACHE),
    .m_axi_data_ARPROT(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARPROT),
    .m_axi_data_ARQOS(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARQOS),
    .m_axi_data_ARREGION(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARREGION),
    .m_axi_data_ARUSER(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_ARUSER),
    .m_axi_data_RVALID(data_RVALID),
    .m_axi_data_RREADY(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_RREADY),
    .m_axi_data_RDATA(data_RDATA),
    .m_axi_data_RLAST(data_RLAST),
    .m_axi_data_RID(data_RID),
    .m_axi_data_RFIFONUM(data_RFIFONUM),
    .m_axi_data_RUSER(data_RUSER),
    .m_axi_data_RRESP(data_RRESP),
    .m_axi_data_BVALID(1'b0),
    .m_axi_data_BREADY(Array2xfMat_32_16_1024_1024_1_2_U0_m_axi_data_BREADY),
    .m_axi_data_BRESP(2'd0),
    .m_axi_data_BID(1'd0),
    .m_axi_data_BUSER(1'd0),
    .p_read(add_ln22_loc_channel_dout),
    .p_read1(mat_in_rows_c36_channel_dout),
    .p_read2(mat_in_cols_c37_channel_dout),
    .mat_in_data_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_din),
    .mat_in_data_num_data_valid(mat_in_data_num_data_valid),
    .mat_in_data_fifo_cap(mat_in_data_fifo_cap),
    .mat_in_data_full_n(mat_in_data_full_n),
    .mat_in_data_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_write),
    .stride(stride),
    .mat_in_rows_c_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_din),
    .mat_in_rows_c_num_data_valid(mat_in_rows_c_num_data_valid),
    .mat_in_rows_c_fifo_cap(mat_in_rows_c_fifo_cap),
    .mat_in_rows_c_full_n(mat_in_rows_c_full_n),
    .mat_in_rows_c_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_write),
    .mat_in_cols_c_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_din),
    .mat_in_cols_c_num_data_valid(mat_in_cols_c_num_data_valid),
    .mat_in_cols_c_fifo_cap(mat_in_cols_c_fifo_cap),
    .mat_in_cols_c_full_n(mat_in_cols_c_full_n),
    .mat_in_cols_c_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_write)
);

reversi_accel_GaussianBlur_3_0_16_1024_1024_1_2_2_s GaussianBlur_3_0_16_1024_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_start),
    .ap_done(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_done),
    .ap_continue(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_continue),
    .ap_idle(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_idle),
    .ap_ready(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_ready),
    .p_src_rows_dout(mat_in_rows_c_dout),
    .p_src_rows_num_data_valid(mat_in_rows_c_num_data_valid),
    .p_src_rows_fifo_cap(mat_in_rows_c_fifo_cap),
    .p_src_rows_empty_n(mat_in_rows_c_empty_n),
    .p_src_rows_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_rows_read),
    .p_src_cols_dout(mat_in_cols_c_dout),
    .p_src_cols_num_data_valid(mat_in_cols_c_num_data_valid),
    .p_src_cols_fifo_cap(mat_in_cols_c_fifo_cap),
    .p_src_cols_empty_n(mat_in_cols_c_empty_n),
    .p_src_cols_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_cols_read),
    .mat_in_data323_dout(mat_in_data_dout),
    .mat_in_data323_num_data_valid(mat_in_data_num_data_valid),
    .mat_in_data323_fifo_cap(mat_in_data_fifo_cap),
    .mat_in_data323_empty_n(mat_in_data_empty_n),
    .mat_in_data323_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_in_data323_read),
    .mat_blur_data324_din(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_din),
    .mat_blur_data324_num_data_valid(mat_blur_data_num_data_valid),
    .mat_blur_data324_fifo_cap(mat_blur_data_fifo_cap),
    .mat_blur_data324_full_n(mat_blur_data_full_n),
    .mat_blur_data324_write(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_write)
);

reversi_accel_bgr2hsv_16_1024_1024_1_2_2_s bgr2hsv_16_1024_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bgr2hsv_16_1024_1024_1_2_2_U0_ap_start),
    .ap_done(bgr2hsv_16_1024_1024_1_2_2_U0_ap_done),
    .ap_continue(bgr2hsv_16_1024_1024_1_2_2_U0_ap_continue),
    .ap_idle(bgr2hsv_16_1024_1024_1_2_2_U0_ap_idle),
    .ap_ready(bgr2hsv_16_1024_1024_1_2_2_U0_ap_ready),
    .p_read(mat_blur_rows_channel_dout),
    .p_read1(mat_blur_cols_channel_dout),
    .mat_blur_data324_dout(mat_blur_data_dout),
    .mat_blur_data324_num_data_valid(mat_blur_data_num_data_valid),
    .mat_blur_data324_fifo_cap(mat_blur_data_fifo_cap),
    .mat_blur_data324_empty_n(mat_blur_data_empty_n),
    .mat_blur_data324_read(bgr2hsv_16_1024_1024_1_2_2_U0_mat_blur_data324_read),
    .mat_hsv_data325_din(bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_din),
    .mat_hsv_data325_num_data_valid(mat_hsv_data_num_data_valid),
    .mat_hsv_data325_fifo_cap(mat_hsv_data_fifo_cap),
    .mat_hsv_data325_full_n(mat_hsv_data_full_n),
    .mat_hsv_data325_write(bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_write)
);

reversi_accel_duplicateMat_16_1024_1024_1_2_2_2_s duplicateMat_16_1024_1024_1_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_start),
    .ap_done(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_done),
    .ap_continue(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_continue),
    .ap_idle(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_idle),
    .ap_ready(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_ready),
    .p_read(mat_hsv_rows_channel_dout),
    .p_read1(mat_hsv_cols_channel_dout),
    .mat_hsv_data325_dout(mat_hsv_data_dout),
    .mat_hsv_data325_num_data_valid(mat_hsv_data_num_data_valid),
    .mat_hsv_data325_fifo_cap(mat_hsv_data_fifo_cap),
    .mat_hsv_data325_empty_n(mat_hsv_data_empty_n),
    .mat_hsv_data325_read(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv_data325_read),
    .mat_hsv1_data326_din(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_din),
    .mat_hsv1_data326_num_data_valid(mat_hsv1_data_num_data_valid),
    .mat_hsv1_data326_fifo_cap(mat_hsv1_data_fifo_cap),
    .mat_hsv1_data326_full_n(mat_hsv1_data_full_n),
    .mat_hsv1_data326_write(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_write),
    .mat_hsv2_data327_din(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_din),
    .mat_hsv2_data327_num_data_valid(mat_hsv2_data_num_data_valid),
    .mat_hsv2_data327_fifo_cap(mat_hsv2_data_fifo_cap),
    .mat_hsv2_data327_full_n(mat_hsv2_data_full_n),
    .mat_hsv2_data327_write(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_write)
);

reversi_accel_inRange_16_0_1024_1024_1_2_2_s inRange_16_0_1024_1024_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(inRange_16_0_1024_1024_1_2_2_U0_ap_start),
    .ap_done(inRange_16_0_1024_1024_1_2_2_U0_ap_done),
    .ap_continue(inRange_16_0_1024_1024_1_2_2_U0_ap_continue),
    .ap_idle(inRange_16_0_1024_1024_1_2_2_U0_ap_idle),
    .ap_ready(inRange_16_0_1024_1024_1_2_2_U0_ap_ready),
    .p_read(mat_hsv1_rows_channel_dout),
    .p_read1(mat_hsv1_cols_channel_dout),
    .mat_hsv1_data326_dout(mat_hsv1_data_dout),
    .mat_hsv1_data326_num_data_valid(mat_hsv1_data_num_data_valid),
    .mat_hsv1_data326_fifo_cap(mat_hsv1_data_fifo_cap),
    .mat_hsv1_data326_empty_n(mat_hsv1_data_empty_n),
    .mat_hsv1_data326_read(inRange_16_0_1024_1024_1_2_2_U0_mat_hsv1_data326_read),
    .mat_green1_data328_din(inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_din),
    .mat_green1_data328_num_data_valid(mat_green1_data_num_data_valid),
    .mat_green1_data328_fifo_cap(mat_green1_data_fifo_cap),
    .mat_green1_data328_full_n(mat_green1_data_full_n),
    .mat_green1_data328_write(inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_write)
);

reversi_accel_inRange_16_0_1024_1024_1_2_2_1 inRange_16_0_1024_1024_1_2_2_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(inRange_16_0_1024_1024_1_2_2_1_U0_ap_start),
    .ap_done(inRange_16_0_1024_1024_1_2_2_1_U0_ap_done),
    .ap_continue(inRange_16_0_1024_1024_1_2_2_1_U0_ap_continue),
    .ap_idle(inRange_16_0_1024_1024_1_2_2_1_U0_ap_idle),
    .ap_ready(inRange_16_0_1024_1024_1_2_2_1_U0_ap_ready),
    .p_read(mat_hsv2_rows_channel_dout),
    .p_read1(mat_hsv2_cols_channel_dout),
    .mat_hsv2_data327_dout(mat_hsv2_data_dout),
    .mat_hsv2_data327_num_data_valid(mat_hsv2_data_num_data_valid),
    .mat_hsv2_data327_fifo_cap(mat_hsv2_data_fifo_cap),
    .mat_hsv2_data327_empty_n(mat_hsv2_data_empty_n),
    .mat_hsv2_data327_read(inRange_16_0_1024_1024_1_2_2_1_U0_mat_hsv2_data327_read),
    .mat_green2_data329_din(inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_din),
    .mat_green2_data329_num_data_valid(mat_green2_data_num_data_valid),
    .mat_green2_data329_fifo_cap(mat_green2_data_fifo_cap),
    .mat_green2_data329_full_n(mat_green2_data_full_n),
    .mat_green2_data329_write(inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_write)
);

reversi_accel_bitwise_or_0_1024_1024_1_2_2_2_s bitwise_or_0_1024_1024_1_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_start),
    .ap_done(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_done),
    .ap_continue(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_continue),
    .ap_idle(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_idle),
    .ap_ready(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_ready),
    .p_read(mat_green1_rows_channel_dout),
    .p_read1(mat_green1_cols_channel_dout),
    .mat_green1_data328_dout(mat_green1_data_dout),
    .mat_green1_data328_num_data_valid(mat_green1_data_num_data_valid),
    .mat_green1_data328_fifo_cap(mat_green1_data_fifo_cap),
    .mat_green1_data328_empty_n(mat_green1_data_empty_n),
    .mat_green1_data328_read(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green1_data328_read),
    .mat_green2_data329_dout(mat_green2_data_dout),
    .mat_green2_data329_num_data_valid(mat_green2_data_num_data_valid),
    .mat_green2_data329_fifo_cap(mat_green2_data_fifo_cap),
    .mat_green2_data329_empty_n(mat_green2_data_empty_n),
    .mat_green2_data329_read(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green2_data329_read),
    .mat_green_data330_din(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_din),
    .mat_green_data330_num_data_valid(mat_green_data_num_data_valid),
    .mat_green_data330_fifo_cap(mat_green_data_fifo_cap),
    .mat_green_data330_full_n(mat_green_data_full_n),
    .mat_green_data330_write(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_write)
);

reversi_accel_dilate_0_0_1024_1024_0_7_7_1_1_2_2_s dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start),
    .ap_done(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_done),
    .ap_continue(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue),
    .ap_idle(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle),
    .ap_ready(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready),
    .p_read(mat_green_rows_channel_dout),
    .p_read1(mat_green_cols_channel_dout),
    .mat_green_data330_dout(mat_green_data_dout),
    .mat_green_data330_num_data_valid(mat_green_data_num_data_valid),
    .mat_green_data330_fifo_cap(mat_green_data_fifo_cap),
    .mat_green_data330_empty_n(mat_green_data_empty_n),
    .mat_green_data330_read(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_green_data330_read),
    .mat_dil_a_data331_din(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_din),
    .mat_dil_a_data331_num_data_valid(mat_dil_a_data_num_data_valid),
    .mat_dil_a_data331_fifo_cap(mat_dil_a_data_fifo_cap),
    .mat_dil_a_data331_full_n(mat_dil_a_data_full_n),
    .mat_dil_a_data331_write(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_write)
);

reversi_accel_erode_0_0_1024_1024_0_7_7_1_1_2_2_s erode_0_0_1024_1024_0_7_7_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start),
    .ap_done(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_done),
    .ap_continue(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue),
    .ap_idle(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle),
    .ap_ready(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready),
    .p_read(mat_dil_a_rows_channel_dout),
    .p_read1(mat_dil_a_cols_channel_dout),
    .mat_dil_a_data331_dout(mat_dil_a_data_dout),
    .mat_dil_a_data331_num_data_valid(mat_dil_a_data_num_data_valid),
    .mat_dil_a_data331_fifo_cap(mat_dil_a_data_fifo_cap),
    .mat_dil_a_data331_empty_n(mat_dil_a_data_empty_n),
    .mat_dil_a_data331_read(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_read),
    .mat_ero_data332_din(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_din),
    .mat_ero_data332_num_data_valid(mat_ero_data_num_data_valid),
    .mat_ero_data332_fifo_cap(mat_ero_data_fifo_cap),
    .mat_ero_data332_full_n(mat_ero_data_full_n),
    .mat_ero_data332_write(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_write)
);

reversi_accel_duplicateMat_0_1024_1024_1_2_2_2_s duplicateMat_0_1024_1024_1_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_start),
    .ap_done(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_done),
    .ap_continue(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_continue),
    .ap_idle(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_idle),
    .ap_ready(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_ready),
    .p_read(mat_ero_rows_channel_dout),
    .p_read1(mat_ero_cols_channel_dout),
    .mat_ero_data332_dout(mat_ero_data_dout),
    .mat_ero_data332_num_data_valid(mat_ero_data_num_data_valid),
    .mat_ero_data332_fifo_cap(mat_ero_data_fifo_cap),
    .mat_ero_data332_empty_n(mat_ero_data_empty_n),
    .mat_ero_data332_read(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero_data332_read),
    .mat_ero1_data333_din(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_din),
    .mat_ero1_data333_num_data_valid(mat_ero1_data_num_data_valid),
    .mat_ero1_data333_fifo_cap(mat_ero1_data_fifo_cap),
    .mat_ero1_data333_full_n(mat_ero1_data_full_n),
    .mat_ero1_data333_write(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_write),
    .mat_ero2_data334_din(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_din),
    .mat_ero2_data334_num_data_valid(mat_ero2_data_num_data_valid),
    .mat_ero2_data334_fifo_cap(mat_ero2_data_fifo_cap),
    .mat_ero2_data334_full_n(mat_ero2_data_full_n),
    .mat_ero2_data334_write(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_write)
);

reversi_accel_dilate_0_0_1024_1024_2_3_3_1_1_2_2_s dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start),
    .ap_done(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready),
    .p_read(mat_ero1_rows_channel_dout),
    .p_read1(mat_ero1_cols_channel_dout),
    .mat_ero1_data333_dout(mat_ero1_data_dout),
    .mat_ero1_data333_num_data_valid(mat_ero1_data_num_data_valid),
    .mat_ero1_data333_fifo_cap(mat_ero1_data_fifo_cap),
    .mat_ero1_data333_empty_n(mat_ero1_data_empty_n),
    .mat_ero1_data333_read(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero1_data333_read),
    .mat_lap1_data335_din(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_din),
    .mat_lap1_data335_num_data_valid(mat_lap1_data_num_data_valid),
    .mat_lap1_data335_fifo_cap(mat_lap1_data_fifo_cap),
    .mat_lap1_data335_full_n(mat_lap1_data_full_n),
    .mat_lap1_data335_write(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_write)
);

reversi_accel_erode_0_0_1024_1024_2_3_3_1_1_2_2_s erode_0_0_1024_1024_2_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start),
    .ap_done(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready),
    .p_read(mat_ero2_rows_channel_dout),
    .p_read1(mat_ero2_cols_channel_dout),
    .mat_ero2_data334_dout(mat_ero2_data_dout),
    .mat_ero2_data334_num_data_valid(mat_ero2_data_num_data_valid),
    .mat_ero2_data334_fifo_cap(mat_ero2_data_fifo_cap),
    .mat_ero2_data334_empty_n(mat_ero2_data_empty_n),
    .mat_ero2_data334_read(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero2_data334_read),
    .mat_lap2_data336_din(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_din),
    .mat_lap2_data336_num_data_valid(mat_lap2_data_num_data_valid),
    .mat_lap2_data336_fifo_cap(mat_lap2_data_fifo_cap),
    .mat_lap2_data336_full_n(mat_lap2_data_full_n),
    .mat_lap2_data336_write(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_write)
);

reversi_accel_bitwise_xor_0_1024_1024_1_2_2_2_s bitwise_xor_0_1024_1024_1_2_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_start),
    .ap_done(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_done),
    .ap_continue(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_continue),
    .ap_idle(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_idle),
    .ap_ready(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_ready),
    .p_read(mat_lap1_rows_channel_dout),
    .p_read1(mat_lap1_cols_channel_dout),
    .mat_lap1_data335_dout(mat_lap1_data_dout),
    .mat_lap1_data335_num_data_valid(mat_lap1_data_num_data_valid),
    .mat_lap1_data335_fifo_cap(mat_lap1_data_fifo_cap),
    .mat_lap1_data335_empty_n(mat_lap1_data_empty_n),
    .mat_lap1_data335_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap1_data335_read),
    .mat_lap2_data336_dout(mat_lap2_data_dout),
    .mat_lap2_data336_num_data_valid(mat_lap2_data_num_data_valid),
    .mat_lap2_data336_fifo_cap(mat_lap2_data_fifo_cap),
    .mat_lap2_data336_empty_n(mat_lap2_data_empty_n),
    .mat_lap2_data336_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap2_data336_read),
    .mat_lap_data337_din(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_din),
    .mat_lap_data337_num_data_valid(mat_lap_data_num_data_valid),
    .mat_lap_data337_fifo_cap(mat_lap_data_fifo_cap),
    .mat_lap_data337_full_n(mat_lap_data_full_n),
    .mat_lap_data337_write(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_write)
);

reversi_accel_dilate_0_0_1024_1024_0_3_3_1_1_2_2_s dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_start),
    .ap_done(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_done),
    .ap_continue(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_continue),
    .ap_idle(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_idle),
    .ap_ready(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_ready),
    .p_read(mat_lap_rows_channel_dout),
    .p_read1(mat_lap_cols_channel_dout),
    .mat_lap_data337_dout(mat_lap_data_dout),
    .mat_lap_data337_num_data_valid(mat_lap_data_num_data_valid),
    .mat_lap_data337_fifo_cap(mat_lap_data_fifo_cap),
    .mat_lap_data337_empty_n(mat_lap_data_empty_n),
    .mat_lap_data337_read(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_lap_data337_read),
    .mat_dil_b_data338_din(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_din),
    .mat_dil_b_data338_num_data_valid(mat_dil_b_data_num_data_valid),
    .mat_dil_b_data338_fifo_cap(mat_dil_b_data_fifo_cap),
    .mat_dil_b_data338_full_n(mat_dil_b_data_full_n),
    .mat_dil_b_data338_write(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_write)
);

reversi_accel_HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_s HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_start),
    .ap_done(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_done),
    .ap_continue(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_continue),
    .ap_idle(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_idle),
    .ap_ready(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_ready),
    .p_read(mat_dil_b_rows_channel_dout),
    .p_read1(mat_dil_b_cols_channel_dout),
    .mat_dil_b_data338_dout(mat_dil_b_data_dout),
    .mat_dil_b_data338_num_data_valid(mat_dil_b_data_num_data_valid),
    .mat_dil_b_data338_fifo_cap(mat_dil_b_data_fifo_cap),
    .mat_dil_b_data338_empty_n(mat_dil_b_data_empty_n),
    .mat_dil_b_data338_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_mat_dil_b_data338_read),
    .m_axi_rho_AWVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWVALID),
    .m_axi_rho_AWREADY(rho_AWREADY),
    .m_axi_rho_AWADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWADDR),
    .m_axi_rho_AWID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWID),
    .m_axi_rho_AWLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWLEN),
    .m_axi_rho_AWSIZE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWSIZE),
    .m_axi_rho_AWBURST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWBURST),
    .m_axi_rho_AWLOCK(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWLOCK),
    .m_axi_rho_AWCACHE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWCACHE),
    .m_axi_rho_AWPROT(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWPROT),
    .m_axi_rho_AWQOS(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWQOS),
    .m_axi_rho_AWREGION(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWREGION),
    .m_axi_rho_AWUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_AWUSER),
    .m_axi_rho_WVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WVALID),
    .m_axi_rho_WREADY(rho_WREADY),
    .m_axi_rho_WDATA(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WDATA),
    .m_axi_rho_WSTRB(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WSTRB),
    .m_axi_rho_WLAST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WLAST),
    .m_axi_rho_WID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WID),
    .m_axi_rho_WUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_WUSER),
    .m_axi_rho_ARVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARVALID),
    .m_axi_rho_ARREADY(1'b0),
    .m_axi_rho_ARADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARADDR),
    .m_axi_rho_ARID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARID),
    .m_axi_rho_ARLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARLEN),
    .m_axi_rho_ARSIZE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARSIZE),
    .m_axi_rho_ARBURST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARBURST),
    .m_axi_rho_ARLOCK(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARLOCK),
    .m_axi_rho_ARCACHE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARCACHE),
    .m_axi_rho_ARPROT(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARPROT),
    .m_axi_rho_ARQOS(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARQOS),
    .m_axi_rho_ARREGION(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARREGION),
    .m_axi_rho_ARUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_ARUSER),
    .m_axi_rho_RVALID(1'b0),
    .m_axi_rho_RREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_RREADY),
    .m_axi_rho_RDATA(32'd0),
    .m_axi_rho_RLAST(1'b0),
    .m_axi_rho_RID(1'd0),
    .m_axi_rho_RFIFONUM(9'd0),
    .m_axi_rho_RUSER(1'd0),
    .m_axi_rho_RRESP(2'd0),
    .m_axi_rho_BVALID(rho_BVALID),
    .m_axi_rho_BREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_rho_BREADY),
    .m_axi_rho_BRESP(rho_BRESP),
    .m_axi_rho_BID(rho_BID),
    .m_axi_rho_BUSER(rho_BUSER),
    .outputrho_dout(rho_out_c_dout),
    .outputrho_num_data_valid(rho_out_c_num_data_valid),
    .outputrho_fifo_cap(rho_out_c_fifo_cap),
    .outputrho_empty_n(rho_out_c_empty_n),
    .outputrho_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputrho_read),
    .m_axi_theta_AWVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWVALID),
    .m_axi_theta_AWREADY(theta_AWREADY),
    .m_axi_theta_AWADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWADDR),
    .m_axi_theta_AWID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWID),
    .m_axi_theta_AWLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWLEN),
    .m_axi_theta_AWSIZE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWSIZE),
    .m_axi_theta_AWBURST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWBURST),
    .m_axi_theta_AWLOCK(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWLOCK),
    .m_axi_theta_AWCACHE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWCACHE),
    .m_axi_theta_AWPROT(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWPROT),
    .m_axi_theta_AWQOS(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWQOS),
    .m_axi_theta_AWREGION(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWREGION),
    .m_axi_theta_AWUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_AWUSER),
    .m_axi_theta_WVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WVALID),
    .m_axi_theta_WREADY(theta_WREADY),
    .m_axi_theta_WDATA(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WDATA),
    .m_axi_theta_WSTRB(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WSTRB),
    .m_axi_theta_WLAST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WLAST),
    .m_axi_theta_WID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WID),
    .m_axi_theta_WUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_WUSER),
    .m_axi_theta_ARVALID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARVALID),
    .m_axi_theta_ARREADY(1'b0),
    .m_axi_theta_ARADDR(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARADDR),
    .m_axi_theta_ARID(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARID),
    .m_axi_theta_ARLEN(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARLEN),
    .m_axi_theta_ARSIZE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARSIZE),
    .m_axi_theta_ARBURST(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARBURST),
    .m_axi_theta_ARLOCK(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARLOCK),
    .m_axi_theta_ARCACHE(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARCACHE),
    .m_axi_theta_ARPROT(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARPROT),
    .m_axi_theta_ARQOS(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARQOS),
    .m_axi_theta_ARREGION(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARREGION),
    .m_axi_theta_ARUSER(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_ARUSER),
    .m_axi_theta_RVALID(1'b0),
    .m_axi_theta_RREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_RREADY),
    .m_axi_theta_RDATA(32'd0),
    .m_axi_theta_RLAST(1'b0),
    .m_axi_theta_RID(1'd0),
    .m_axi_theta_RFIFONUM(9'd0),
    .m_axi_theta_RUSER(1'd0),
    .m_axi_theta_RRESP(2'd0),
    .m_axi_theta_BVALID(theta_BVALID),
    .m_axi_theta_BREADY(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_m_axi_theta_BREADY),
    .m_axi_theta_BRESP(theta_BRESP),
    .m_axi_theta_BID(theta_BID),
    .m_axi_theta_BUSER(theta_BUSER),
    .outputtheta_dout(theta_out_c_dout),
    .outputtheta_num_data_valid(theta_out_c_num_data_valid),
    .outputtheta_fifo_cap(theta_out_c_fifo_cap),
    .outputtheta_empty_n(theta_out_c_empty_n),
    .outputtheta_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputtheta_read)
);

reversi_accel_fifo_w64_d15_S rho_out_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc19_U0_rho_out_c_din),
    .if_full_n(rho_out_c_full_n),
    .if_write(entry_proc19_U0_rho_out_c_write),
    .if_dout(rho_out_c_dout),
    .if_num_data_valid(rho_out_c_num_data_valid),
    .if_fifo_cap(rho_out_c_fifo_cap),
    .if_empty_n(rho_out_c_empty_n),
    .if_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputrho_read)
);

reversi_accel_fifo_w64_d15_S theta_out_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc19_U0_theta_out_c_din),
    .if_full_n(theta_out_c_full_n),
    .if_write(entry_proc19_U0_theta_out_c_write),
    .if_dout(theta_out_c_dout),
    .if_num_data_valid(theta_out_c_num_data_valid),
    .if_fifo_cap(theta_out_c_fifo_cap),
    .if_empty_n(theta_out_c_empty_n),
    .if_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_outputtheta_read)
);

reversi_accel_fifo_w32_d4_S mat_blur_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_0),
    .if_full_n(mat_blur_rows_channel_full_n),
    .if_write(ap_channel_done_mat_blur_rows_channel),
    .if_dout(mat_blur_rows_channel_dout),
    .if_num_data_valid(mat_blur_rows_channel_num_data_valid),
    .if_fifo_cap(mat_blur_rows_channel_fifo_cap),
    .if_empty_n(mat_blur_rows_channel_empty_n),
    .if_read(bgr2hsv_16_1024_1024_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d4_S mat_blur_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_1),
    .if_full_n(mat_blur_cols_channel_full_n),
    .if_write(ap_channel_done_mat_blur_cols_channel),
    .if_dout(mat_blur_cols_channel_dout),
    .if_num_data_valid(mat_blur_cols_channel_num_data_valid),
    .if_fifo_cap(mat_blur_cols_channel_fifo_cap),
    .if_empty_n(mat_blur_cols_channel_empty_n),
    .if_read(bgr2hsv_16_1024_1024_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d5_S mat_hsv_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_2),
    .if_full_n(mat_hsv_rows_channel_full_n),
    .if_write(ap_channel_done_mat_hsv_rows_channel),
    .if_dout(mat_hsv_rows_channel_dout),
    .if_num_data_valid(mat_hsv_rows_channel_num_data_valid),
    .if_fifo_cap(mat_hsv_rows_channel_fifo_cap),
    .if_empty_n(mat_hsv_rows_channel_empty_n),
    .if_read(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d5_S mat_hsv_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_3),
    .if_full_n(mat_hsv_cols_channel_full_n),
    .if_write(ap_channel_done_mat_hsv_cols_channel),
    .if_dout(mat_hsv_cols_channel_dout),
    .if_num_data_valid(mat_hsv_cols_channel_num_data_valid),
    .if_fifo_cap(mat_hsv_cols_channel_fifo_cap),
    .if_empty_n(mat_hsv_cols_channel_empty_n),
    .if_read(duplicateMat_16_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d6_S mat_hsv1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_4),
    .if_full_n(mat_hsv1_rows_channel_full_n),
    .if_write(ap_channel_done_mat_hsv1_rows_channel),
    .if_dout(mat_hsv1_rows_channel_dout),
    .if_num_data_valid(mat_hsv1_rows_channel_num_data_valid),
    .if_fifo_cap(mat_hsv1_rows_channel_fifo_cap),
    .if_empty_n(mat_hsv1_rows_channel_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d6_S mat_hsv1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_5),
    .if_full_n(mat_hsv1_cols_channel_full_n),
    .if_write(ap_channel_done_mat_hsv1_cols_channel),
    .if_dout(mat_hsv1_cols_channel_dout),
    .if_num_data_valid(mat_hsv1_cols_channel_num_data_valid),
    .if_fifo_cap(mat_hsv1_cols_channel_fifo_cap),
    .if_empty_n(mat_hsv1_cols_channel_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d6_S mat_hsv2_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_6),
    .if_full_n(mat_hsv2_rows_channel_full_n),
    .if_write(ap_channel_done_mat_hsv2_rows_channel),
    .if_dout(mat_hsv2_rows_channel_dout),
    .if_num_data_valid(mat_hsv2_rows_channel_num_data_valid),
    .if_fifo_cap(mat_hsv2_rows_channel_fifo_cap),
    .if_empty_n(mat_hsv2_rows_channel_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_1_U0_ap_ready)
);

reversi_accel_fifo_w32_d6_S mat_hsv2_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_7),
    .if_full_n(mat_hsv2_cols_channel_full_n),
    .if_write(ap_channel_done_mat_hsv2_cols_channel),
    .if_dout(mat_hsv2_cols_channel_dout),
    .if_num_data_valid(mat_hsv2_cols_channel_num_data_valid),
    .if_fifo_cap(mat_hsv2_cols_channel_fifo_cap),
    .if_empty_n(mat_hsv2_cols_channel_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_1_U0_ap_ready)
);

reversi_accel_fifo_w32_d7_S mat_green1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_8),
    .if_full_n(mat_green1_rows_channel_full_n),
    .if_write(ap_channel_done_mat_green1_rows_channel),
    .if_dout(mat_green1_rows_channel_dout),
    .if_num_data_valid(mat_green1_rows_channel_num_data_valid),
    .if_fifo_cap(mat_green1_rows_channel_fifo_cap),
    .if_empty_n(mat_green1_rows_channel_empty_n),
    .if_read(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d7_S mat_green1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_9),
    .if_full_n(mat_green1_cols_channel_full_n),
    .if_write(ap_channel_done_mat_green1_cols_channel),
    .if_dout(mat_green1_cols_channel_dout),
    .if_num_data_valid(mat_green1_cols_channel_num_data_valid),
    .if_fifo_cap(mat_green1_cols_channel_fifo_cap),
    .if_empty_n(mat_green1_cols_channel_empty_n),
    .if_read(bitwise_or_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d8_S mat_green_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_10),
    .if_full_n(mat_green_rows_channel_full_n),
    .if_write(ap_channel_done_mat_green_rows_channel),
    .if_dout(mat_green_rows_channel_dout),
    .if_num_data_valid(mat_green_rows_channel_num_data_valid),
    .if_fifo_cap(mat_green_rows_channel_fifo_cap),
    .if_empty_n(mat_green_rows_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d8_S mat_green_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_11),
    .if_full_n(mat_green_cols_channel_full_n),
    .if_write(ap_channel_done_mat_green_cols_channel),
    .if_dout(mat_green_cols_channel_dout),
    .if_num_data_valid(mat_green_cols_channel_num_data_valid),
    .if_fifo_cap(mat_green_cols_channel_fifo_cap),
    .if_empty_n(mat_green_cols_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d9_S mat_dil_a_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_12),
    .if_full_n(mat_dil_a_rows_channel_full_n),
    .if_write(ap_channel_done_mat_dil_a_rows_channel),
    .if_dout(mat_dil_a_rows_channel_dout),
    .if_num_data_valid(mat_dil_a_rows_channel_num_data_valid),
    .if_fifo_cap(mat_dil_a_rows_channel_fifo_cap),
    .if_empty_n(mat_dil_a_rows_channel_empty_n),
    .if_read(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d9_S mat_dil_a_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_13),
    .if_full_n(mat_dil_a_cols_channel_full_n),
    .if_write(ap_channel_done_mat_dil_a_cols_channel),
    .if_dout(mat_dil_a_cols_channel_dout),
    .if_num_data_valid(mat_dil_a_cols_channel_num_data_valid),
    .if_fifo_cap(mat_dil_a_cols_channel_fifo_cap),
    .if_empty_n(mat_dil_a_cols_channel_empty_n),
    .if_read(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d10_S mat_ero_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_14),
    .if_full_n(mat_ero_rows_channel_full_n),
    .if_write(ap_channel_done_mat_ero_rows_channel),
    .if_dout(mat_ero_rows_channel_dout),
    .if_num_data_valid(mat_ero_rows_channel_num_data_valid),
    .if_fifo_cap(mat_ero_rows_channel_fifo_cap),
    .if_empty_n(mat_ero_rows_channel_empty_n),
    .if_read(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d10_S mat_ero_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_15),
    .if_full_n(mat_ero_cols_channel_full_n),
    .if_write(ap_channel_done_mat_ero_cols_channel),
    .if_dout(mat_ero_cols_channel_dout),
    .if_num_data_valid(mat_ero_cols_channel_num_data_valid),
    .if_fifo_cap(mat_ero_cols_channel_fifo_cap),
    .if_empty_n(mat_ero_cols_channel_empty_n),
    .if_read(duplicateMat_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d11_S mat_ero1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_16),
    .if_full_n(mat_ero1_rows_channel_full_n),
    .if_write(ap_channel_done_mat_ero1_rows_channel),
    .if_dout(mat_ero1_rows_channel_dout),
    .if_num_data_valid(mat_ero1_rows_channel_num_data_valid),
    .if_fifo_cap(mat_ero1_rows_channel_fifo_cap),
    .if_empty_n(mat_ero1_rows_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d11_S mat_ero1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_17),
    .if_full_n(mat_ero1_cols_channel_full_n),
    .if_write(ap_channel_done_mat_ero1_cols_channel),
    .if_dout(mat_ero1_cols_channel_dout),
    .if_num_data_valid(mat_ero1_cols_channel_num_data_valid),
    .if_fifo_cap(mat_ero1_cols_channel_fifo_cap),
    .if_empty_n(mat_ero1_cols_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d11_S mat_ero2_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_18),
    .if_full_n(mat_ero2_rows_channel_full_n),
    .if_write(ap_channel_done_mat_ero2_rows_channel),
    .if_dout(mat_ero2_rows_channel_dout),
    .if_num_data_valid(mat_ero2_rows_channel_num_data_valid),
    .if_fifo_cap(mat_ero2_rows_channel_fifo_cap),
    .if_empty_n(mat_ero2_rows_channel_empty_n),
    .if_read(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d11_S mat_ero2_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_19),
    .if_full_n(mat_ero2_cols_channel_full_n),
    .if_write(ap_channel_done_mat_ero2_cols_channel),
    .if_dout(mat_ero2_cols_channel_dout),
    .if_num_data_valid(mat_ero2_cols_channel_num_data_valid),
    .if_fifo_cap(mat_ero2_cols_channel_fifo_cap),
    .if_empty_n(mat_ero2_cols_channel_empty_n),
    .if_read(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d12_S mat_lap1_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_20),
    .if_full_n(mat_lap1_rows_channel_full_n),
    .if_write(ap_channel_done_mat_lap1_rows_channel),
    .if_dout(mat_lap1_rows_channel_dout),
    .if_num_data_valid(mat_lap1_rows_channel_num_data_valid),
    .if_fifo_cap(mat_lap1_rows_channel_fifo_cap),
    .if_empty_n(mat_lap1_rows_channel_empty_n),
    .if_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d12_S mat_lap1_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_21),
    .if_full_n(mat_lap1_cols_channel_full_n),
    .if_write(ap_channel_done_mat_lap1_cols_channel),
    .if_dout(mat_lap1_cols_channel_dout),
    .if_num_data_valid(mat_lap1_cols_channel_num_data_valid),
    .if_fifo_cap(mat_lap1_cols_channel_fifo_cap),
    .if_empty_n(mat_lap1_cols_channel_empty_n),
    .if_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d13_S mat_lap_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_22),
    .if_full_n(mat_lap_rows_channel_full_n),
    .if_write(ap_channel_done_mat_lap_rows_channel),
    .if_dout(mat_lap_rows_channel_dout),
    .if_num_data_valid(mat_lap_rows_channel_num_data_valid),
    .if_fifo_cap(mat_lap_rows_channel_fifo_cap),
    .if_empty_n(mat_lap_rows_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d13_S mat_lap_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_23),
    .if_full_n(mat_lap_cols_channel_full_n),
    .if_write(ap_channel_done_mat_lap_cols_channel),
    .if_dout(mat_lap_cols_channel_dout),
    .if_num_data_valid(mat_lap_cols_channel_num_data_valid),
    .if_fifo_cap(mat_lap_cols_channel_fifo_cap),
    .if_empty_n(mat_lap_cols_channel_empty_n),
    .if_read(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d14_S mat_dil_b_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_24),
    .if_full_n(mat_dil_b_rows_channel_full_n),
    .if_write(ap_channel_done_mat_dil_b_rows_channel),
    .if_dout(mat_dil_b_rows_channel_dout),
    .if_num_data_valid(mat_dil_b_rows_channel_num_data_valid),
    .if_fifo_cap(mat_dil_b_rows_channel_fifo_cap),
    .if_empty_n(mat_dil_b_rows_channel_empty_n),
    .if_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d14_S mat_dil_b_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_25),
    .if_full_n(mat_dil_b_cols_channel_full_n),
    .if_write(ap_channel_done_mat_dil_b_cols_channel),
    .if_dout(mat_dil_b_cols_channel_dout),
    .if_num_data_valid(mat_dil_b_cols_channel_num_data_valid),
    .if_fifo_cap(mat_dil_b_cols_channel_fifo_cap),
    .if_empty_n(mat_dil_b_cols_channel_empty_n),
    .if_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_ready)
);

reversi_accel_fifo_w64_d2_S add_ln22_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_26),
    .if_full_n(add_ln22_loc_channel_full_n),
    .if_write(ap_channel_done_add_ln22_loc_channel),
    .if_dout(add_ln22_loc_channel_dout),
    .if_num_data_valid(add_ln22_loc_channel_num_data_valid),
    .if_fifo_cap(add_ln22_loc_channel_fifo_cap),
    .if_empty_n(add_ln22_loc_channel_empty_n),
    .if_read(Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d2_S_x mat_in_rows_c36_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_27),
    .if_full_n(mat_in_rows_c36_channel_full_n),
    .if_write(ap_channel_done_mat_in_rows_c36_channel),
    .if_dout(mat_in_rows_c36_channel_dout),
    .if_num_data_valid(mat_in_rows_c36_channel_num_data_valid),
    .if_fifo_cap(mat_in_rows_c36_channel_fifo_cap),
    .if_empty_n(mat_in_rows_c36_channel_empty_n),
    .if_read(Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready)
);

reversi_accel_fifo_w32_d2_S_x mat_in_cols_c37_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry4_proc_U0_ap_return_28),
    .if_full_n(mat_in_cols_c37_channel_full_n),
    .if_write(ap_channel_done_mat_in_cols_c37_channel),
    .if_dout(mat_in_cols_c37_channel_dout),
    .if_num_data_valid(mat_in_cols_c37_channel_num_data_valid),
    .if_fifo_cap(mat_in_cols_c37_channel_fifo_cap),
    .if_empty_n(mat_in_cols_c37_channel_empty_n),
    .if_read(Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready)
);

reversi_accel_fifo_w24_d2_S mat_in_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_din),
    .if_full_n(mat_in_data_full_n),
    .if_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_data_write),
    .if_dout(mat_in_data_dout),
    .if_num_data_valid(mat_in_data_num_data_valid),
    .if_fifo_cap(mat_in_data_fifo_cap),
    .if_empty_n(mat_in_data_empty_n),
    .if_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_in_data323_read)
);

reversi_accel_fifo_w32_d2_S_x mat_in_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_din),
    .if_full_n(mat_in_rows_c_full_n),
    .if_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_rows_c_write),
    .if_dout(mat_in_rows_c_dout),
    .if_num_data_valid(mat_in_rows_c_num_data_valid),
    .if_fifo_cap(mat_in_rows_c_fifo_cap),
    .if_empty_n(mat_in_rows_c_empty_n),
    .if_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_rows_read)
);

reversi_accel_fifo_w32_d2_S_x mat_in_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_din),
    .if_full_n(mat_in_cols_c_full_n),
    .if_write(Array2xfMat_32_16_1024_1024_1_2_U0_mat_in_cols_c_write),
    .if_dout(mat_in_cols_c_dout),
    .if_num_data_valid(mat_in_cols_c_num_data_valid),
    .if_fifo_cap(mat_in_cols_c_fifo_cap),
    .if_empty_n(mat_in_cols_c_empty_n),
    .if_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_p_src_cols_read)
);

reversi_accel_fifo_w24_d2_S mat_blur_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_din),
    .if_full_n(mat_blur_data_full_n),
    .if_write(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_mat_blur_data324_write),
    .if_dout(mat_blur_data_dout),
    .if_num_data_valid(mat_blur_data_num_data_valid),
    .if_fifo_cap(mat_blur_data_fifo_cap),
    .if_empty_n(mat_blur_data_empty_n),
    .if_read(bgr2hsv_16_1024_1024_1_2_2_U0_mat_blur_data324_read)
);

reversi_accel_fifo_w24_d2_S mat_hsv_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_din),
    .if_full_n(mat_hsv_data_full_n),
    .if_write(bgr2hsv_16_1024_1024_1_2_2_U0_mat_hsv_data325_write),
    .if_dout(mat_hsv_data_dout),
    .if_num_data_valid(mat_hsv_data_num_data_valid),
    .if_fifo_cap(mat_hsv_data_fifo_cap),
    .if_empty_n(mat_hsv_data_empty_n),
    .if_read(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv_data325_read)
);

reversi_accel_fifo_w24_d2_S mat_hsv1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_din),
    .if_full_n(mat_hsv1_data_full_n),
    .if_write(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv1_data326_write),
    .if_dout(mat_hsv1_data_dout),
    .if_num_data_valid(mat_hsv1_data_num_data_valid),
    .if_fifo_cap(mat_hsv1_data_fifo_cap),
    .if_empty_n(mat_hsv1_data_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_U0_mat_hsv1_data326_read)
);

reversi_accel_fifo_w24_d2_S mat_hsv2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_din),
    .if_full_n(mat_hsv2_data_full_n),
    .if_write(duplicateMat_16_1024_1024_1_2_2_2_U0_mat_hsv2_data327_write),
    .if_dout(mat_hsv2_data_dout),
    .if_num_data_valid(mat_hsv2_data_num_data_valid),
    .if_fifo_cap(mat_hsv2_data_fifo_cap),
    .if_empty_n(mat_hsv2_data_empty_n),
    .if_read(inRange_16_0_1024_1024_1_2_2_1_U0_mat_hsv2_data327_read)
);

reversi_accel_fifo_w8_d2_S mat_green1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_din),
    .if_full_n(mat_green1_data_full_n),
    .if_write(inRange_16_0_1024_1024_1_2_2_U0_mat_green1_data328_write),
    .if_dout(mat_green1_data_dout),
    .if_num_data_valid(mat_green1_data_num_data_valid),
    .if_fifo_cap(mat_green1_data_fifo_cap),
    .if_empty_n(mat_green1_data_empty_n),
    .if_read(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green1_data328_read)
);

reversi_accel_fifo_w8_d2_S mat_green2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_din),
    .if_full_n(mat_green2_data_full_n),
    .if_write(inRange_16_0_1024_1024_1_2_2_1_U0_mat_green2_data329_write),
    .if_dout(mat_green2_data_dout),
    .if_num_data_valid(mat_green2_data_num_data_valid),
    .if_fifo_cap(mat_green2_data_fifo_cap),
    .if_empty_n(mat_green2_data_empty_n),
    .if_read(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green2_data329_read)
);

reversi_accel_fifo_w8_d2_S mat_green_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_din),
    .if_full_n(mat_green_data_full_n),
    .if_write(bitwise_or_0_1024_1024_1_2_2_2_U0_mat_green_data330_write),
    .if_dout(mat_green_data_dout),
    .if_num_data_valid(mat_green_data_num_data_valid),
    .if_fifo_cap(mat_green_data_fifo_cap),
    .if_empty_n(mat_green_data_empty_n),
    .if_read(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_green_data330_read)
);

reversi_accel_fifo_w8_d2_S mat_dil_a_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_din),
    .if_full_n(mat_dil_a_data_full_n),
    .if_write(dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_write),
    .if_dout(mat_dil_a_data_dout),
    .if_num_data_valid(mat_dil_a_data_num_data_valid),
    .if_fifo_cap(mat_dil_a_data_fifo_cap),
    .if_empty_n(mat_dil_a_data_empty_n),
    .if_read(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_dil_a_data331_read)
);

reversi_accel_fifo_w8_d2_S mat_ero_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_din),
    .if_full_n(mat_ero_data_full_n),
    .if_write(erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_mat_ero_data332_write),
    .if_dout(mat_ero_data_dout),
    .if_num_data_valid(mat_ero_data_num_data_valid),
    .if_fifo_cap(mat_ero_data_fifo_cap),
    .if_empty_n(mat_ero_data_empty_n),
    .if_read(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero_data332_read)
);

reversi_accel_fifo_w8_d2_S mat_ero1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_din),
    .if_full_n(mat_ero1_data_full_n),
    .if_write(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero1_data333_write),
    .if_dout(mat_ero1_data_dout),
    .if_num_data_valid(mat_ero1_data_num_data_valid),
    .if_fifo_cap(mat_ero1_data_fifo_cap),
    .if_empty_n(mat_ero1_data_empty_n),
    .if_read(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero1_data333_read)
);

reversi_accel_fifo_w8_d2_S mat_ero2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_din),
    .if_full_n(mat_ero2_data_full_n),
    .if_write(duplicateMat_0_1024_1024_1_2_2_2_U0_mat_ero2_data334_write),
    .if_dout(mat_ero2_data_dout),
    .if_num_data_valid(mat_ero2_data_num_data_valid),
    .if_fifo_cap(mat_ero2_data_fifo_cap),
    .if_empty_n(mat_ero2_data_empty_n),
    .if_read(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_ero2_data334_read)
);

reversi_accel_fifo_w8_d2_S mat_lap1_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_din),
    .if_full_n(mat_lap1_data_full_n),
    .if_write(dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap1_data335_write),
    .if_dout(mat_lap1_data_dout),
    .if_num_data_valid(mat_lap1_data_num_data_valid),
    .if_fifo_cap(mat_lap1_data_fifo_cap),
    .if_empty_n(mat_lap1_data_empty_n),
    .if_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap1_data335_read)
);

reversi_accel_fifo_w8_d2_S mat_lap2_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_din),
    .if_full_n(mat_lap2_data_full_n),
    .if_write(erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_mat_lap2_data336_write),
    .if_dout(mat_lap2_data_dout),
    .if_num_data_valid(mat_lap2_data_num_data_valid),
    .if_fifo_cap(mat_lap2_data_fifo_cap),
    .if_empty_n(mat_lap2_data_empty_n),
    .if_read(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap2_data336_read)
);

reversi_accel_fifo_w8_d2_S mat_lap_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_din),
    .if_full_n(mat_lap_data_full_n),
    .if_write(bitwise_xor_0_1024_1024_1_2_2_2_U0_mat_lap_data337_write),
    .if_dout(mat_lap_data_dout),
    .if_num_data_valid(mat_lap_data_num_data_valid),
    .if_fifo_cap(mat_lap_data_fifo_cap),
    .if_empty_n(mat_lap_data_empty_n),
    .if_read(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_lap_data337_read)
);

reversi_accel_fifo_w8_d2_S mat_dil_b_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_din),
    .if_full_n(mat_dil_b_data_full_n),
    .if_write(dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_mat_dil_b_data338_write),
    .if_dout(mat_dil_b_data_dout),
    .if_num_data_valid(mat_dil_b_data_num_data_valid),
    .if_fifo_cap(mat_dil_b_data_fifo_cap),
    .if_empty_n(mat_dil_b_data_empty_n),
    .if_read(HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_mat_dil_b_data338_read)
);

reversi_accel_start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0 start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_din),
    .if_full_n(start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_full_n),
    .if_write(Array2xfMat_32_16_1024_1024_1_2_U0_start_write),
    .if_dout(start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_dout),
    .if_empty_n(start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_empty_n),
    .if_read(GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready <= ap_sync_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_entry4_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry4_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry4_proc_U0_ap_ready <= ap_sync_Block_entry4_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_add_ln22_loc_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_add_ln22_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_add_ln22_loc_channel <= ap_sync_channel_write_add_ln22_loc_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_blur_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_blur_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_blur_cols_channel <= ap_sync_channel_write_mat_blur_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_blur_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_blur_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_blur_rows_channel <= ap_sync_channel_write_mat_blur_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_dil_a_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_dil_a_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_dil_a_cols_channel <= ap_sync_channel_write_mat_dil_a_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_dil_a_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_dil_a_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_dil_a_rows_channel <= ap_sync_channel_write_mat_dil_a_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_dil_b_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_dil_b_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_dil_b_cols_channel <= ap_sync_channel_write_mat_dil_b_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_dil_b_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_dil_b_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_dil_b_rows_channel <= ap_sync_channel_write_mat_dil_b_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero1_cols_channel <= ap_sync_channel_write_mat_ero1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero1_rows_channel <= ap_sync_channel_write_mat_ero1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero2_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero2_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero2_cols_channel <= ap_sync_channel_write_mat_ero2_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero2_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero2_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero2_rows_channel <= ap_sync_channel_write_mat_ero2_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero_cols_channel <= ap_sync_channel_write_mat_ero_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_ero_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_ero_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_ero_rows_channel <= ap_sync_channel_write_mat_ero_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_green1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_green1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_green1_cols_channel <= ap_sync_channel_write_mat_green1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_green1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_green1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_green1_rows_channel <= ap_sync_channel_write_mat_green1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_green_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_green_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_green_cols_channel <= ap_sync_channel_write_mat_green_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_green_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_green_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_green_rows_channel <= ap_sync_channel_write_mat_green_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv1_cols_channel <= ap_sync_channel_write_mat_hsv1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv1_rows_channel <= ap_sync_channel_write_mat_hsv1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv2_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv2_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv2_cols_channel <= ap_sync_channel_write_mat_hsv2_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv2_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv2_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv2_rows_channel <= ap_sync_channel_write_mat_hsv2_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv_cols_channel <= ap_sync_channel_write_mat_hsv_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_hsv_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_hsv_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_hsv_rows_channel <= ap_sync_channel_write_mat_hsv_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_in_cols_c37_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_in_cols_c37_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_in_cols_c37_channel <= ap_sync_channel_write_mat_in_cols_c37_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_in_rows_c36_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_in_rows_c36_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_in_rows_c36_channel <= ap_sync_channel_write_mat_in_rows_c36_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_lap1_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_lap1_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_lap1_cols_channel <= ap_sync_channel_write_mat_lap1_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_lap1_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_lap1_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_lap1_rows_channel <= ap_sync_channel_write_mat_lap1_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_lap_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_lap_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_lap_cols_channel <= ap_sync_channel_write_mat_lap_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_mat_lap_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry4_proc_U0_ap_done & Block_entry4_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_mat_lap_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_mat_lap_rows_channel <= ap_sync_channel_write_mat_lap_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc19_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc19_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc19_U0_ap_ready <= ap_sync_entry_proc19_U0_ap_ready;
        end
    end
end

assign Array2xfMat_32_16_1024_1024_1_2_U0_ap_continue = 1'b1;

assign Array2xfMat_32_16_1024_1024_1_2_U0_ap_start = (mat_in_rows_c36_channel_empty_n & mat_in_cols_c37_channel_empty_n & (ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready ^ 1'b1) & ap_start & add_ln22_loc_channel_empty_n);

assign Block_entry4_proc_U0_ap_continue = (ap_sync_channel_write_mat_lap_rows_channel & ap_sync_channel_write_mat_lap_cols_channel & ap_sync_channel_write_mat_lap1_rows_channel & ap_sync_channel_write_mat_lap1_cols_channel & ap_sync_channel_write_mat_in_rows_c36_channel & ap_sync_channel_write_mat_in_cols_c37_channel & ap_sync_channel_write_mat_hsv_rows_channel & ap_sync_channel_write_mat_hsv_cols_channel & ap_sync_channel_write_mat_hsv2_rows_channel & ap_sync_channel_write_mat_hsv2_cols_channel & ap_sync_channel_write_mat_hsv1_rows_channel & ap_sync_channel_write_mat_hsv1_cols_channel & ap_sync_channel_write_mat_green_rows_channel & ap_sync_channel_write_mat_green_cols_channel & ap_sync_channel_write_mat_green1_rows_channel & ap_sync_channel_write_mat_green1_cols_channel & ap_sync_channel_write_mat_ero_rows_channel & ap_sync_channel_write_mat_ero_cols_channel & ap_sync_channel_write_mat_ero2_rows_channel & ap_sync_channel_write_mat_ero2_cols_channel & ap_sync_channel_write_mat_ero1_rows_channel & ap_sync_channel_write_mat_ero1_cols_channel & ap_sync_channel_write_mat_dil_b_rows_channel & ap_sync_channel_write_mat_dil_b_cols_channel & ap_sync_channel_write_mat_dil_a_rows_channel & ap_sync_channel_write_mat_dil_a_cols_channel & ap_sync_channel_write_mat_blur_rows_channel & ap_sync_channel_write_mat_blur_cols_channel & ap_sync_channel_write_add_ln22_loc_channel);

assign Block_entry4_proc_U0_ap_start = ((ap_sync_reg_Block_entry4_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_continue = 1'b1;

assign GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_start = start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_empty_n;

assign HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_continue = 1'b1;

assign HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_start = (mat_dil_b_rows_channel_empty_n & mat_dil_b_cols_channel_empty_n);

assign ap_channel_done_add_ln22_loc_channel = ((ap_sync_reg_channel_write_add_ln22_loc_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_blur_cols_channel = ((ap_sync_reg_channel_write_mat_blur_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_blur_rows_channel = ((ap_sync_reg_channel_write_mat_blur_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_dil_a_cols_channel = ((ap_sync_reg_channel_write_mat_dil_a_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_dil_a_rows_channel = ((ap_sync_reg_channel_write_mat_dil_a_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_dil_b_cols_channel = ((ap_sync_reg_channel_write_mat_dil_b_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_dil_b_rows_channel = ((ap_sync_reg_channel_write_mat_dil_b_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero1_cols_channel = ((ap_sync_reg_channel_write_mat_ero1_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero1_rows_channel = ((ap_sync_reg_channel_write_mat_ero1_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero2_cols_channel = ((ap_sync_reg_channel_write_mat_ero2_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero2_rows_channel = ((ap_sync_reg_channel_write_mat_ero2_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero_cols_channel = ((ap_sync_reg_channel_write_mat_ero_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_ero_rows_channel = ((ap_sync_reg_channel_write_mat_ero_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_green1_cols_channel = ((ap_sync_reg_channel_write_mat_green1_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_green1_rows_channel = ((ap_sync_reg_channel_write_mat_green1_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_green_cols_channel = ((ap_sync_reg_channel_write_mat_green_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_green_rows_channel = ((ap_sync_reg_channel_write_mat_green_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv1_cols_channel = ((ap_sync_reg_channel_write_mat_hsv1_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv1_rows_channel = ((ap_sync_reg_channel_write_mat_hsv1_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv2_cols_channel = ((ap_sync_reg_channel_write_mat_hsv2_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv2_rows_channel = ((ap_sync_reg_channel_write_mat_hsv2_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv_cols_channel = ((ap_sync_reg_channel_write_mat_hsv_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_hsv_rows_channel = ((ap_sync_reg_channel_write_mat_hsv_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_in_cols_c37_channel = ((ap_sync_reg_channel_write_mat_in_cols_c37_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_in_rows_c36_channel = ((ap_sync_reg_channel_write_mat_in_rows_c36_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_lap1_cols_channel = ((ap_sync_reg_channel_write_mat_lap1_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_lap1_rows_channel = ((ap_sync_reg_channel_write_mat_lap1_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_lap_cols_channel = ((ap_sync_reg_channel_write_mat_lap_cols_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_channel_done_mat_lap_rows_channel = ((ap_sync_reg_channel_write_mat_lap_rows_channel ^ 1'b1) & Block_entry4_proc_U0_ap_done);

assign ap_done = HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_done;

assign ap_idle = (inRange_16_0_1024_1024_1_2_2_U0_ap_idle & inRange_16_0_1024_1024_1_2_2_1_U0_ap_idle & (1'b1 ^ add_ln22_loc_channel_empty_n) & (mat_in_cols_c37_channel_empty_n ^ 1'b1) & (mat_in_rows_c36_channel_empty_n ^ 1'b1) & (mat_dil_b_cols_channel_empty_n ^ 1'b1) & (mat_dil_b_rows_channel_empty_n ^ 1'b1) & (mat_lap_cols_channel_empty_n ^ 1'b1) & (mat_lap_rows_channel_empty_n ^ 1'b1) & (mat_lap1_cols_channel_empty_n ^ 1'b1) & (mat_lap1_rows_channel_empty_n ^ 1'b1) & (mat_ero2_cols_channel_empty_n ^ 1'b1) & (mat_ero2_rows_channel_empty_n ^ 1'b1) & (mat_ero1_cols_channel_empty_n ^ 1'b1) & (mat_ero1_rows_channel_empty_n ^ 1'b1) & (mat_ero_cols_channel_empty_n ^ 1'b1) & (mat_ero_rows_channel_empty_n ^ 1'b1) & (mat_dil_a_cols_channel_empty_n ^ 1'b1) & (mat_dil_a_rows_channel_empty_n ^ 1'b1) & (mat_green_cols_channel_empty_n ^ 1'b1) & (mat_green_rows_channel_empty_n ^ 1'b1) & (mat_green1_cols_channel_empty_n ^ 1'b1) & (mat_green1_rows_channel_empty_n ^ 1'b1) & (mat_hsv2_cols_channel_empty_n ^ 1'b1) & (mat_hsv2_rows_channel_empty_n ^ 1'b1) & (mat_hsv1_cols_channel_empty_n ^ 1'b1) & (mat_hsv1_rows_channel_empty_n ^ 1'b1) & (mat_hsv_cols_channel_empty_n ^ 1'b1) & (mat_hsv_rows_channel_empty_n ^ 1'b1) & (mat_blur_cols_channel_empty_n ^ 1'b1) & (mat_blur_rows_channel_empty_n ^ 1'b1) & erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle & erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle & entry_proc19_U0_ap_idle & duplicateMat_16_1024_1024_1_2_2_2_U0_ap_idle & duplicateMat_0_1024_1024_1_2_2_2_U0_ap_idle & dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_idle & dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_idle & dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_idle & bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_idle & bitwise_or_0_1024_1024_1_2_2_2_U0_ap_idle & bgr2hsv_16_1024_1024_1_2_2_U0_ap_idle & HoughLines_3u_6u_32_483_0_180_0_1024_1024_1_2_U0_ap_idle & GaussianBlur_3_0_16_1024_1024_1_2_2_U0_ap_idle & Block_entry4_proc_U0_ap_idle & Array2xfMat_32_16_1024_1024_1_2_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready = (ap_sync_reg_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready | Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready);

assign ap_sync_Block_entry4_proc_U0_ap_ready = (ap_sync_reg_Block_entry4_proc_U0_ap_ready | Block_entry4_proc_U0_ap_ready);

assign ap_sync_channel_write_add_ln22_loc_channel = ((ap_channel_done_add_ln22_loc_channel & add_ln22_loc_channel_full_n) | ap_sync_reg_channel_write_add_ln22_loc_channel);

assign ap_sync_channel_write_mat_blur_cols_channel = ((mat_blur_cols_channel_full_n & ap_channel_done_mat_blur_cols_channel) | ap_sync_reg_channel_write_mat_blur_cols_channel);

assign ap_sync_channel_write_mat_blur_rows_channel = ((mat_blur_rows_channel_full_n & ap_channel_done_mat_blur_rows_channel) | ap_sync_reg_channel_write_mat_blur_rows_channel);

assign ap_sync_channel_write_mat_dil_a_cols_channel = ((mat_dil_a_cols_channel_full_n & ap_channel_done_mat_dil_a_cols_channel) | ap_sync_reg_channel_write_mat_dil_a_cols_channel);

assign ap_sync_channel_write_mat_dil_a_rows_channel = ((mat_dil_a_rows_channel_full_n & ap_channel_done_mat_dil_a_rows_channel) | ap_sync_reg_channel_write_mat_dil_a_rows_channel);

assign ap_sync_channel_write_mat_dil_b_cols_channel = ((mat_dil_b_cols_channel_full_n & ap_channel_done_mat_dil_b_cols_channel) | ap_sync_reg_channel_write_mat_dil_b_cols_channel);

assign ap_sync_channel_write_mat_dil_b_rows_channel = ((mat_dil_b_rows_channel_full_n & ap_channel_done_mat_dil_b_rows_channel) | ap_sync_reg_channel_write_mat_dil_b_rows_channel);

assign ap_sync_channel_write_mat_ero1_cols_channel = ((mat_ero1_cols_channel_full_n & ap_channel_done_mat_ero1_cols_channel) | ap_sync_reg_channel_write_mat_ero1_cols_channel);

assign ap_sync_channel_write_mat_ero1_rows_channel = ((mat_ero1_rows_channel_full_n & ap_channel_done_mat_ero1_rows_channel) | ap_sync_reg_channel_write_mat_ero1_rows_channel);

assign ap_sync_channel_write_mat_ero2_cols_channel = ((mat_ero2_cols_channel_full_n & ap_channel_done_mat_ero2_cols_channel) | ap_sync_reg_channel_write_mat_ero2_cols_channel);

assign ap_sync_channel_write_mat_ero2_rows_channel = ((mat_ero2_rows_channel_full_n & ap_channel_done_mat_ero2_rows_channel) | ap_sync_reg_channel_write_mat_ero2_rows_channel);

assign ap_sync_channel_write_mat_ero_cols_channel = ((mat_ero_cols_channel_full_n & ap_channel_done_mat_ero_cols_channel) | ap_sync_reg_channel_write_mat_ero_cols_channel);

assign ap_sync_channel_write_mat_ero_rows_channel = ((mat_ero_rows_channel_full_n & ap_channel_done_mat_ero_rows_channel) | ap_sync_reg_channel_write_mat_ero_rows_channel);

assign ap_sync_channel_write_mat_green1_cols_channel = ((mat_green1_cols_channel_full_n & ap_channel_done_mat_green1_cols_channel) | ap_sync_reg_channel_write_mat_green1_cols_channel);

assign ap_sync_channel_write_mat_green1_rows_channel = ((mat_green1_rows_channel_full_n & ap_channel_done_mat_green1_rows_channel) | ap_sync_reg_channel_write_mat_green1_rows_channel);

assign ap_sync_channel_write_mat_green_cols_channel = ((mat_green_cols_channel_full_n & ap_channel_done_mat_green_cols_channel) | ap_sync_reg_channel_write_mat_green_cols_channel);

assign ap_sync_channel_write_mat_green_rows_channel = ((mat_green_rows_channel_full_n & ap_channel_done_mat_green_rows_channel) | ap_sync_reg_channel_write_mat_green_rows_channel);

assign ap_sync_channel_write_mat_hsv1_cols_channel = ((mat_hsv1_cols_channel_full_n & ap_channel_done_mat_hsv1_cols_channel) | ap_sync_reg_channel_write_mat_hsv1_cols_channel);

assign ap_sync_channel_write_mat_hsv1_rows_channel = ((mat_hsv1_rows_channel_full_n & ap_channel_done_mat_hsv1_rows_channel) | ap_sync_reg_channel_write_mat_hsv1_rows_channel);

assign ap_sync_channel_write_mat_hsv2_cols_channel = ((mat_hsv2_cols_channel_full_n & ap_channel_done_mat_hsv2_cols_channel) | ap_sync_reg_channel_write_mat_hsv2_cols_channel);

assign ap_sync_channel_write_mat_hsv2_rows_channel = ((mat_hsv2_rows_channel_full_n & ap_channel_done_mat_hsv2_rows_channel) | ap_sync_reg_channel_write_mat_hsv2_rows_channel);

assign ap_sync_channel_write_mat_hsv_cols_channel = ((mat_hsv_cols_channel_full_n & ap_channel_done_mat_hsv_cols_channel) | ap_sync_reg_channel_write_mat_hsv_cols_channel);

assign ap_sync_channel_write_mat_hsv_rows_channel = ((mat_hsv_rows_channel_full_n & ap_channel_done_mat_hsv_rows_channel) | ap_sync_reg_channel_write_mat_hsv_rows_channel);

assign ap_sync_channel_write_mat_in_cols_c37_channel = ((mat_in_cols_c37_channel_full_n & ap_channel_done_mat_in_cols_c37_channel) | ap_sync_reg_channel_write_mat_in_cols_c37_channel);

assign ap_sync_channel_write_mat_in_rows_c36_channel = ((mat_in_rows_c36_channel_full_n & ap_channel_done_mat_in_rows_c36_channel) | ap_sync_reg_channel_write_mat_in_rows_c36_channel);

assign ap_sync_channel_write_mat_lap1_cols_channel = ((mat_lap1_cols_channel_full_n & ap_channel_done_mat_lap1_cols_channel) | ap_sync_reg_channel_write_mat_lap1_cols_channel);

assign ap_sync_channel_write_mat_lap1_rows_channel = ((mat_lap1_rows_channel_full_n & ap_channel_done_mat_lap1_rows_channel) | ap_sync_reg_channel_write_mat_lap1_rows_channel);

assign ap_sync_channel_write_mat_lap_cols_channel = ((mat_lap_cols_channel_full_n & ap_channel_done_mat_lap_cols_channel) | ap_sync_reg_channel_write_mat_lap_cols_channel);

assign ap_sync_channel_write_mat_lap_rows_channel = ((mat_lap_rows_channel_full_n & ap_channel_done_mat_lap_rows_channel) | ap_sync_reg_channel_write_mat_lap_rows_channel);

assign ap_sync_entry_proc19_U0_ap_ready = (entry_proc19_U0_ap_ready | ap_sync_reg_entry_proc19_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc19_U0_ap_ready & ap_sync_Block_entry4_proc_U0_ap_ready & ap_sync_Array2xfMat_32_16_1024_1024_1_2_U0_ap_ready);

assign bgr2hsv_16_1024_1024_1_2_2_U0_ap_continue = 1'b1;

assign bgr2hsv_16_1024_1024_1_2_2_U0_ap_start = (mat_blur_rows_channel_empty_n & mat_blur_cols_channel_empty_n);

assign bitwise_or_0_1024_1024_1_2_2_2_U0_ap_continue = 1'b1;

assign bitwise_or_0_1024_1024_1_2_2_2_U0_ap_start = (mat_green1_rows_channel_empty_n & mat_green1_cols_channel_empty_n);

assign bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_continue = 1'b1;

assign bitwise_xor_0_1024_1024_1_2_2_2_U0_ap_start = (mat_lap1_rows_channel_empty_n & mat_lap1_cols_channel_empty_n);

assign data_RID = 1'd0;

assign data_RLAST = 1'b0;

assign data_RRESP = 2'd0;

assign data_RUSER = 1'd0;

assign dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign dilate_0_0_1024_1024_0_3_3_1_1_2_2_U0_ap_start = (mat_lap_rows_channel_empty_n & mat_lap_cols_channel_empty_n);

assign dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue = 1'b1;

assign dilate_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start = (mat_green_rows_channel_empty_n & mat_green_cols_channel_empty_n);

assign dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign dilate_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start = (mat_ero1_rows_channel_empty_n & mat_ero1_cols_channel_empty_n);

assign duplicateMat_0_1024_1024_1_2_2_2_U0_ap_continue = 1'b1;

assign duplicateMat_0_1024_1024_1_2_2_2_U0_ap_start = (mat_ero_rows_channel_empty_n & mat_ero_cols_channel_empty_n);

assign duplicateMat_16_1024_1024_1_2_2_2_U0_ap_continue = 1'b1;

assign duplicateMat_16_1024_1024_1_2_2_2_U0_ap_start = (mat_hsv_rows_channel_empty_n & mat_hsv_cols_channel_empty_n);

assign entry_proc19_U0_ap_continue = 1'b1;

assign entry_proc19_U0_ap_start = ((ap_sync_reg_entry_proc19_U0_ap_ready ^ 1'b1) & ap_start);

assign erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_continue = 1'b1;

assign erode_0_0_1024_1024_0_7_7_1_1_2_2_U0_ap_start = (mat_dil_a_rows_channel_empty_n & mat_dil_a_cols_channel_empty_n);

assign erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_continue = 1'b1;

assign erode_0_0_1024_1024_2_3_3_1_1_2_2_U0_ap_start = (mat_ero2_rows_channel_empty_n & mat_ero2_cols_channel_empty_n);

assign inRange_16_0_1024_1024_1_2_2_1_U0_ap_continue = 1'b1;

assign inRange_16_0_1024_1024_1_2_2_1_U0_ap_start = (mat_hsv2_rows_channel_empty_n & mat_hsv2_cols_channel_empty_n);

assign inRange_16_0_1024_1024_1_2_2_U0_ap_continue = 1'b1;

assign inRange_16_0_1024_1024_1_2_2_U0_ap_start = (mat_hsv1_rows_channel_empty_n & mat_hsv1_cols_channel_empty_n);

assign rho_BID = 1'd0;

assign rho_BRESP = 2'd0;

assign rho_BUSER = 1'd0;

assign start_for_GaussianBlur_3_0_16_1024_1024_1_2_2_U0_din = 1'b1;

assign theta_BID = 1'd0;

assign theta_BRESP = 2'd0;

assign theta_BUSER = 1'd0;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "reversi_accel_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //reversi_accel

