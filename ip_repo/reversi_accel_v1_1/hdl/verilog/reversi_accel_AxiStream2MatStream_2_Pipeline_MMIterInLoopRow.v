// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reversi_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_num_data_valid,
        ldata1_fifo_cap,
        ldata1_empty_n,
        ldata1_read,
        mat_in_data323_din,
        mat_in_data323_num_data_valid,
        mat_in_data323_fifo_cap,
        mat_in_data323_full_n,
        mat_in_data323_write,
        bound,
        sext_ln1074,
        cols_bound_per_npc_load,
        sub,
        last_blk_width_load,
        sub3,
        add_ln1074
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] ldata1_dout;
input  [1:0] ldata1_num_data_valid;
input  [1:0] ldata1_fifo_cap;
input   ldata1_empty_n;
output   ldata1_read;
output  [23:0] mat_in_data323_din;
input  [1:0] mat_in_data323_num_data_valid;
input  [1:0] mat_in_data323_fifo_cap;
input   mat_in_data323_full_n;
output   mat_in_data323_write;
input  [31:0] bound;
input  [5:0] sext_ln1074;
input  [31:0] cols_bound_per_npc_load;
input  [31:0] sub;
input  [3:0] last_blk_width_load;
input  [5:0] sub3;
input  [5:0] add_ln1074;

reg ap_idle;
reg ldata1_read;
reg mat_in_data323_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1054_reg_828;
reg   [0:0] icmp_ln1054_reg_828_pp0_iter2_reg;
reg   [0:0] icmp_ln1065_reg_844;
reg    ap_predicate_op101_read_state4;
reg    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg   [0:0] icmp_ln1084_reg_840;
reg   [0:0] icmp_ln1084_reg_840_pp0_iter4_reg;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1054_fu_211_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ldata1_blk_n;
wire    ap_block_pp0_stage0;
reg    mat_in_data323_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1054_reg_828_pp0_iter3_reg;
wire   [0:0] bLast_width_fu_225_p2;
reg   [0:0] bLast_width_reg_832;
reg   [0:0] bLast_width_reg_832_pp0_iter2_reg;
reg   [0:0] bLast_width_reg_832_pp0_iter3_reg;
reg   [0:0] bLast_width_reg_832_pp0_iter4_reg;
wire   [0:0] icmp_ln1084_fu_233_p2;
reg   [0:0] icmp_ln1084_reg_840_pp0_iter2_reg;
reg   [0:0] icmp_ln1084_reg_840_pp0_iter3_reg;
wire   [0:0] icmp_ln1065_fu_297_p2;
reg   [0:0] icmp_ln1065_reg_844_pp0_iter3_reg;
wire   [0:0] icmp_ln674_1_fu_319_p2;
reg   [0:0] icmp_ln674_1_reg_848;
wire   [5:0] trunc_ln674_1_fu_325_p1;
reg   [5:0] trunc_ln674_1_reg_854;
wire   [5:0] sub_ln674_7_fu_353_p2;
reg   [5:0] sub_ln674_7_reg_860;
reg   [5:0] sub_ln674_7_reg_860_pp0_iter3_reg;
wire   [0:0] icmp_ln1066_fu_370_p2;
reg   [0:0] icmp_ln1066_reg_865;
reg   [0:0] icmp_ln1066_reg_865_pp0_iter3_reg;
wire   [4:0] trunc_ln1067_fu_376_p1;
reg   [4:0] trunc_ln1067_reg_870;
wire   [0:0] icmp_ln674_fu_390_p2;
reg   [0:0] icmp_ln674_reg_875;
wire   [5:0] trunc_ln674_fu_396_p1;
reg   [5:0] trunc_ln674_reg_882;
wire   [5:0] add_ln674_1_fu_420_p2;
reg   [5:0] add_ln674_1_reg_889;
reg   [5:0] add_ln674_1_reg_889_pp0_iter3_reg;
wire   [0:0] icmp_ln414_fu_426_p2;
reg   [0:0] icmp_ln414_reg_894;
reg   [0:0] icmp_ln414_reg_894_pp0_iter3_reg;
wire   [4:0] trunc_ln414_fu_432_p1;
reg   [4:0] trunc_ln414_reg_902;
reg   [4:0] trunc_ln414_reg_902_pp0_iter3_reg;
wire   [4:0] trunc_ln414_1_fu_436_p1;
reg   [4:0] trunc_ln414_1_reg_910;
wire   [31:0] lshr_ln674_8_fu_486_p2;
reg   [31:0] lshr_ln674_8_reg_916;
wire   [5:0] sub_ln674_2_fu_527_p2;
reg   [5:0] sub_ln674_2_reg_921;
wire   [31:0] lshr_ln674_fu_537_p2;
reg   [31:0] lshr_ln674_reg_926;
wire   [4:0] sub_ln414_fu_543_p2;
reg   [4:0] sub_ln414_reg_931;
reg   [31:0] tmp_29_reg_936;
wire   [4:0] sub_ln414_1_fu_548_p2;
reg   [4:0] sub_ln414_1_reg_941;
wire   [23:0] and_ln414_fu_589_p2;
reg   [23:0] and_ln414_reg_946;
wire   [23:0] localbuffer_V_3_fu_614_p1;
wire   [23:0] p_Result_98_fu_724_p2;
wire   [4:0] sub_ln674_8_fu_733_p2;
reg   [4:0] sub_ln674_8_reg_962;
wire   [23:0] ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_165;
reg   [23:0] ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_165;
reg   [23:0] ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_165;
reg   [23:0] ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_165;
reg   [23:0] ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_165;
reg   [23:0] ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_165;
reg   [31:0] rem_fu_94;
wire   [31:0] rem_2_fu_359_p2;
wire   [31:0] rem_1_fu_440_p2;
wire    ap_loop_init;
reg   [30:0] i_fu_98;
wire   [30:0] add_ln1054_fu_216_p2;
reg   [31:0] j_fu_102;
wire   [31:0] j_1_fu_247_p3;
reg   [31:0] p_Val2_s_fu_106;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln1054_fu_207_p1;
wire   [31:0] add_ln1086_fu_241_p2;
wire   [3:0] xf_bits_per_clock_fu_269_p3;
wire  signed [4:0] sext_ln1060_fu_275_p1;
wire   [5:0] ptr_width_minus_fu_287_p3;
wire   [31:0] zext_ln1060_fu_279_p1;
wire   [5:0] select_ln1074_fu_303_p3;
wire   [31:0] zext_ln1074_fu_309_p1;
wire   [31:0] grp_fu_174_p2;
wire   [31:0] sub_ln1074_fu_313_p2;
wire   [5:0] trunc_ln674_2_fu_329_p1;
wire   [5:0] sub_ln674_4_fu_333_p2;
wire   [5:0] sub_ln674_6_fu_339_p2;
wire   [5:0] select_ln674_3_fu_345_p3;
wire   [26:0] tmp_fu_380_p4;
wire   [5:0] zext_ln1060_1_fu_283_p1;
wire  signed [5:0] add_ln1071_fu_400_p2;
wire   [5:0] trunc_ln1071_fu_410_p1;
wire   [5:0] sub_ln674_3_fu_414_p2;
wire  signed [31:0] sext_ln1071_fu_406_p1;
wire   [31:0] zext_ln1061_fu_293_p1;
reg   [31:0] tmp_27_fu_454_p4;
wire   [5:0] sub_ln674_5_fu_464_p2;
wire   [5:0] select_ln674_5_fu_476_p3;
wire   [31:0] select_ln674_4_fu_469_p3;
wire   [31:0] zext_ln674_8_fu_482_p1;
wire   [5:0] add_ln674_fu_502_p2;
wire   [5:0] grp_fu_179_p2;
reg   [31:0] tmp_22_fu_492_p4;
wire   [5:0] select_ln674_fu_507_p3;
wire   [5:0] select_ln674_2_fu_521_p3;
wire   [31:0] select_ln674_1_fu_514_p3;
wire   [31:0] zext_ln674_fu_533_p1;
wire   [4:0] select_ln414_fu_553_p3;
wire   [4:0] select_ln414_1_fu_558_p3;
wire   [4:0] sub_ln414_2_fu_563_p2;
wire   [23:0] zext_ln414_3_fu_569_p1;
wire   [23:0] zext_ln414_4_fu_573_p1;
wire   [23:0] shl_ln414_2_fu_577_p2;
wire   [23:0] lshr_ln414_1_fu_583_p2;
wire   [31:0] zext_ln674_9_fu_600_p1;
wire   [31:0] lshr_ln674_9_fu_603_p2;
wire   [31:0] p_Result_99_fu_609_p2;
wire   [31:0] zext_ln674_6_fu_618_p1;
wire   [31:0] lshr_ln674_6_fu_621_p2;
wire   [31:0] p_Result_s_fu_627_p2;
wire   [23:0] zext_ln414_fu_636_p1;
wire   [23:0] tmp_28_fu_632_p1;
wire   [23:0] lshr_ln414_fu_639_p2;
wire   [23:0] p_Result_96_fu_645_p2;
wire   [31:0] zext_ln674_7_fu_658_p1;
wire   [31:0] lshr_ln674_7_fu_661_p2;
wire   [31:0] p_Result_97_fu_667_p2;
wire   [4:0] select_ln414_2_fu_676_p3;
wire   [23:0] tmp_30_fu_672_p1;
wire   [23:0] zext_ln414_2_fu_681_p1;
wire   [23:0] shl_ln414_fu_685_p2;
reg   [23:0] tmp_26_fu_691_p4;
wire   [23:0] localbuffer_V_fu_651_p3;
wire   [23:0] xor_ln414_fu_708_p2;
wire   [23:0] select_ln414_3_fu_701_p3;
wire   [23:0] and_ln414_1_fu_713_p2;
wire   [23:0] and_ln414_2_fu_719_p2;
wire   [4:0] trunc_ln674_3_fu_730_p1;
wire   [23:0] zext_ln674_10_fu_739_p1;
wire   [23:0] lshr_ln674_10_fu_742_p2;
wire   [23:0] select_ln1059_fu_748_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_731;
reg    ap_condition_735;
reg    ap_condition_738;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

reversi_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((icmp_ln1065_reg_844_pp0_iter3_reg == 1'd0) & (icmp_ln1054_reg_828_pp0_iter3_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_165 <= localbuffer_V_3_fu_614_p1;
        end else if (((icmp_ln1065_reg_844_pp0_iter3_reg == 1'd1) & (icmp_ln1054_reg_828_pp0_iter3_reg == 1'd1))) begin
            ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_165 <= p_Result_98_fu_724_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_165 <= ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_165;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_98 <= 31'd0;
        end else if (((icmp_ln1054_fu_211_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_98 <= add_ln1054_fu_216_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_102 <= 32'd0;
        end else if (((icmp_ln1054_fu_211_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_102 <= j_1_fu_247_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_Val2_s_fu_106 <= 32'd0;
        end else if ((1'b1 == ap_condition_731)) begin
            p_Val2_s_fu_106 <= ldata1_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            rem_fu_94 <= 32'd0;
        end else if ((1'b1 == ap_condition_738)) begin
            rem_fu_94 <= rem_1_fu_440_p2;
        end else if ((1'b1 == ap_condition_735)) begin
            rem_fu_94 <= rem_2_fu_359_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1054_reg_828 == 1'd1) & (icmp_ln1065_fu_297_p2 == 1'd1))) begin
        add_ln674_1_reg_889 <= add_ln674_1_fu_420_p2;
        icmp_ln1066_reg_865 <= icmp_ln1066_fu_370_p2;
        icmp_ln414_reg_894 <= icmp_ln414_fu_426_p2;
        icmp_ln674_reg_875 <= icmp_ln674_fu_390_p2;
        trunc_ln1067_reg_870 <= trunc_ln1067_fu_376_p1;
        trunc_ln414_1_reg_910 <= trunc_ln414_1_fu_436_p1;
        trunc_ln414_reg_902 <= trunc_ln414_fu_432_p1;
        trunc_ln674_reg_882 <= trunc_ln674_fu_396_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln674_1_reg_889_pp0_iter3_reg <= add_ln674_1_reg_889;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        bLast_width_reg_832_pp0_iter2_reg <= bLast_width_reg_832;
        bLast_width_reg_832_pp0_iter3_reg <= bLast_width_reg_832_pp0_iter2_reg;
        bLast_width_reg_832_pp0_iter4_reg <= bLast_width_reg_832_pp0_iter3_reg;
        icmp_ln1054_reg_828_pp0_iter2_reg <= icmp_ln1054_reg_828;
        icmp_ln1054_reg_828_pp0_iter3_reg <= icmp_ln1054_reg_828_pp0_iter2_reg;
        icmp_ln1065_reg_844_pp0_iter3_reg <= icmp_ln1065_reg_844;
        icmp_ln1066_reg_865_pp0_iter3_reg <= icmp_ln1066_reg_865;
        icmp_ln1084_reg_840_pp0_iter2_reg <= icmp_ln1084_reg_840;
        icmp_ln1084_reg_840_pp0_iter3_reg <= icmp_ln1084_reg_840_pp0_iter2_reg;
        icmp_ln1084_reg_840_pp0_iter4_reg <= icmp_ln1084_reg_840_pp0_iter3_reg;
        icmp_ln414_reg_894_pp0_iter3_reg <= icmp_ln414_reg_894;
        sub_ln674_7_reg_860_pp0_iter3_reg <= sub_ln674_7_reg_860;
        trunc_ln414_reg_902_pp0_iter3_reg <= trunc_ln414_reg_902;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_844 == 1'd1) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1))) begin
        and_ln414_reg_946 <= and_ln414_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln1054_reg_828 <= icmp_ln1054_fu_211_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_165 <= ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_165 <= ap_phi_reg_pp0_iter1_localbuffer_V_5_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_165 <= ap_phi_reg_pp0_iter2_localbuffer_V_5_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_localbuffer_V_5_reg_165 <= ap_phi_reg_pp0_iter3_localbuffer_V_5_reg_165;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1054_fu_211_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_width_reg_832 <= bLast_width_fu_225_p2;
        icmp_ln1084_reg_840 <= icmp_ln1084_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1054_reg_828 == 1'd1))) begin
        icmp_ln1065_reg_844 <= icmp_ln1065_fu_297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1054_reg_828 == 1'd1) & (icmp_ln1065_fu_297_p2 == 1'd0))) begin
        icmp_ln674_1_reg_848 <= icmp_ln674_1_fu_319_p2;
        sub_ln674_7_reg_860 <= sub_ln674_7_fu_353_p2;
        trunc_ln674_1_reg_854 <= trunc_ln674_1_fu_325_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_844 == 1'd0) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1))) begin
        lshr_ln674_8_reg_916 <= lshr_ln674_8_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_844 == 1'd1) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1) & (icmp_ln1066_reg_865 == 1'd0))) begin
        lshr_ln674_reg_926 <= lshr_ln674_fu_537_p2;
        sub_ln414_reg_931 <= sub_ln414_fu_543_p2;
        sub_ln674_2_reg_921 <= sub_ln674_2_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1065_reg_844 == 1'd1) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1) & (icmp_ln414_reg_894 == 1'd1))) begin
        sub_ln414_1_reg_941 <= sub_ln414_1_fu_548_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (bLast_width_reg_832_pp0_iter3_reg == 1'd1))) begin
        sub_ln674_8_reg_962 <= sub_ln674_8_fu_733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op101_read_state4 == 1'b1))) begin
        tmp_29_reg_936 <= ldata1_dout;
    end
end

always @ (*) begin
    if (((icmp_ln1054_fu_211_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op101_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op101_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        mat_in_data323_blk_n = mat_in_data323_full_n;
    end else begin
        mat_in_data323_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        mat_in_data323_write = 1'b1;
    end else begin
        mat_in_data323_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1054_fu_216_p2 = (i_fu_98 + 31'd1);

assign add_ln1071_fu_400_p2 = ($signed(zext_ln1060_1_fu_283_p1) + $signed(6'd63));

assign add_ln1086_fu_241_p2 = (j_fu_102 + 32'd1);

assign add_ln674_1_fu_420_p2 = (sub_ln674_3_fu_414_p2 + 6'd31);

assign add_ln674_fu_502_p2 = ($signed(trunc_ln674_reg_882) + $signed(6'd33));

assign and_ln414_1_fu_713_p2 = (xor_ln414_fu_708_p2 & localbuffer_V_fu_651_p3);

assign and_ln414_2_fu_719_p2 = (select_ln414_3_fu_701_p3 & and_ln414_reg_946);

assign and_ln414_fu_589_p2 = (shl_ln414_2_fu_577_p2 & lshr_ln414_1_fu_583_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (mat_in_data323_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_predicate_op101_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (mat_in_data323_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_predicate_op101_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (mat_in_data323_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((ap_predicate_op101_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op101_read_state4 == 1'b1) & (ldata1_empty_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((icmp_ln1084_reg_840_pp0_iter4_reg == 1'd1) & (mat_in_data323_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_731 = ((icmp_ln1065_reg_844 == 1'd1) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_735 = ((icmp_ln1054_reg_828 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1065_fu_297_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_738 = ((icmp_ln1054_reg_828 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1065_fu_297_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_localbuffer_V_5_reg_165 = 'bx;

always @ (*) begin
    ap_predicate_op101_read_state4 = ((icmp_ln1065_reg_844 == 1'd1) & (icmp_ln1054_reg_828_pp0_iter2_reg == 1'd1));
end

assign bLast_width_fu_225_p2 = ((j_fu_102 == sub) ? 1'b1 : 1'b0);

assign grp_fu_174_p2 = (32'd32 - rem_fu_94);

assign grp_fu_179_p2 = (6'd31 - trunc_ln674_reg_882);

assign icmp_ln1054_fu_211_p2 = (($signed(zext_ln1054_fu_207_p1) < $signed(bound)) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_297_p2 = (($signed(zext_ln1060_fu_279_p1) > $signed(rem_fu_94)) ? 1'b1 : 1'b0);

assign icmp_ln1066_fu_370_p2 = ((rem_fu_94 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1084_fu_233_p2 = (($signed(j_fu_102) < $signed(cols_bound_per_npc_load)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_426_p2 = ((rem_fu_94 > sext_ln1071_fu_406_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_319_p2 = ((grp_fu_174_p2 > sub_ln1074_fu_313_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_390_p2 = ((tmp_fu_380_p4 != 27'd0) ? 1'b1 : 1'b0);

assign j_1_fu_247_p3 = ((bLast_width_fu_225_p2[0:0] == 1'b1) ? 32'd0 : add_ln1086_fu_241_p2);

assign localbuffer_V_3_fu_614_p1 = p_Result_99_fu_609_p2[23:0];

assign localbuffer_V_fu_651_p3 = ((icmp_ln1066_reg_865_pp0_iter3_reg[0:0] == 1'b1) ? 24'd0 : p_Result_96_fu_645_p2);

assign lshr_ln414_1_fu_583_p2 = 24'd16777215 >> zext_ln414_4_fu_573_p1;

assign lshr_ln414_fu_639_p2 = 24'd16777215 >> zext_ln414_fu_636_p1;

assign lshr_ln674_10_fu_742_p2 = 24'd16777215 >> zext_ln674_10_fu_739_p1;

assign lshr_ln674_6_fu_621_p2 = 32'd4294967295 >> zext_ln674_6_fu_618_p1;

assign lshr_ln674_7_fu_661_p2 = 32'd4294967295 >> zext_ln674_7_fu_658_p1;

assign lshr_ln674_8_fu_486_p2 = select_ln674_4_fu_469_p3 >> zext_ln674_8_fu_482_p1;

assign lshr_ln674_9_fu_603_p2 = 32'd4294967295 >> zext_ln674_9_fu_600_p1;

assign lshr_ln674_fu_537_p2 = select_ln674_1_fu_514_p3 >> zext_ln674_fu_533_p1;

assign mat_in_data323_din = (select_ln1059_fu_748_p3 & ap_phi_reg_pp0_iter5_localbuffer_V_5_reg_165);

assign p_Result_96_fu_645_p2 = (tmp_28_fu_632_p1 & lshr_ln414_fu_639_p2);

assign p_Result_97_fu_667_p2 = (tmp_29_reg_936 & lshr_ln674_7_fu_661_p2);

assign p_Result_98_fu_724_p2 = (and_ln414_2_fu_719_p2 | and_ln414_1_fu_713_p2);

assign p_Result_99_fu_609_p2 = (lshr_ln674_9_fu_603_p2 & lshr_ln674_8_reg_916);

assign p_Result_s_fu_627_p2 = (lshr_ln674_reg_926 & lshr_ln674_6_fu_621_p2);

assign ptr_width_minus_fu_287_p3 = ((bLast_width_reg_832[0:0] == 1'b1) ? sub3 : 6'd8);

assign rem_1_fu_440_p2 = (rem_fu_94 + zext_ln1061_fu_293_p1);

assign rem_2_fu_359_p2 = (rem_fu_94 - zext_ln1060_fu_279_p1);

assign select_ln1059_fu_748_p3 = ((bLast_width_reg_832_pp0_iter4_reg[0:0] == 1'b1) ? lshr_ln674_10_fu_742_p2 : 24'd16777215);

assign select_ln1074_fu_303_p3 = ((bLast_width_reg_832[0:0] == 1'b1) ? add_ln1074 : 6'd55);

assign select_ln414_1_fu_558_p3 = ((icmp_ln414_reg_894[0:0] == 1'b1) ? trunc_ln414_1_reg_910 : trunc_ln414_reg_902);

assign select_ln414_2_fu_676_p3 = ((icmp_ln414_reg_894_pp0_iter3_reg[0:0] == 1'b1) ? sub_ln414_1_reg_941 : trunc_ln414_reg_902_pp0_iter3_reg);

assign select_ln414_3_fu_701_p3 = ((icmp_ln414_reg_894_pp0_iter3_reg[0:0] == 1'b1) ? tmp_26_fu_691_p4 : shl_ln414_fu_685_p2);

assign select_ln414_fu_553_p3 = ((icmp_ln414_reg_894[0:0] == 1'b1) ? trunc_ln414_reg_902 : trunc_ln414_1_reg_910);

assign select_ln674_1_fu_514_p3 = ((icmp_ln674_reg_875[0:0] == 1'b1) ? tmp_22_fu_492_p4 : p_Val2_s_fu_106);

assign select_ln674_2_fu_521_p3 = ((icmp_ln674_reg_875[0:0] == 1'b1) ? grp_fu_179_p2 : trunc_ln674_reg_882);

assign select_ln674_3_fu_345_p3 = ((icmp_ln674_1_fu_319_p2[0:0] == 1'b1) ? sub_ln674_4_fu_333_p2 : sub_ln674_6_fu_339_p2);

assign select_ln674_4_fu_469_p3 = ((icmp_ln674_1_reg_848[0:0] == 1'b1) ? tmp_27_fu_454_p4 : p_Val2_s_fu_106);

assign select_ln674_5_fu_476_p3 = ((icmp_ln674_1_reg_848[0:0] == 1'b1) ? sub_ln674_5_fu_464_p2 : trunc_ln674_1_reg_854);

assign select_ln674_fu_507_p3 = ((icmp_ln674_reg_875[0:0] == 1'b1) ? add_ln674_fu_502_p2 : grp_fu_179_p2);

assign sext_ln1060_fu_275_p1 = $signed(xf_bits_per_clock_fu_269_p3);

assign sext_ln1071_fu_406_p1 = add_ln1071_fu_400_p2;

assign shl_ln414_2_fu_577_p2 = 24'd16777215 << zext_ln414_3_fu_569_p1;

assign shl_ln414_fu_685_p2 = tmp_30_fu_672_p1 << zext_ln414_2_fu_681_p1;

assign sub_ln1074_fu_313_p2 = (zext_ln1074_fu_309_p1 - rem_fu_94);

assign sub_ln414_1_fu_548_p2 = ($signed(5'd23) - $signed(trunc_ln414_reg_902));

assign sub_ln414_2_fu_563_p2 = ($signed(5'd23) - $signed(select_ln414_fu_553_p3));

assign sub_ln414_fu_543_p2 = ($signed(5'd24) - $signed(trunc_ln1067_reg_870));

assign sub_ln674_2_fu_527_p2 = (6'd31 - select_ln674_fu_507_p3);

assign sub_ln674_3_fu_414_p2 = ($signed(trunc_ln1071_fu_410_p1) - $signed(add_ln1071_fu_400_p2));

assign sub_ln674_4_fu_333_p2 = (trunc_ln674_1_fu_325_p1 - trunc_ln674_2_fu_329_p1);

assign sub_ln674_5_fu_464_p2 = (6'd31 - trunc_ln674_1_reg_854);

assign sub_ln674_6_fu_339_p2 = (trunc_ln674_2_fu_329_p1 - trunc_ln674_1_fu_325_p1);

assign sub_ln674_7_fu_353_p2 = (6'd31 - select_ln674_3_fu_345_p3);

assign sub_ln674_8_fu_733_p2 = ($signed(5'd23) - $signed(trunc_ln674_3_fu_730_p1));

integer ap_tvar_int_0;

always @ (p_Val2_s_fu_106) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_22_fu_492_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_22_fu_492_p4[ap_tvar_int_0] = p_Val2_s_fu_106[31 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (shl_ln414_fu_685_p2) begin
    for (ap_tvar_int_1 = 24 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 23 - 0) begin
            tmp_26_fu_691_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_26_fu_691_p4[ap_tvar_int_1] = shl_ln414_fu_685_p2[23 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_106) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_27_fu_454_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_27_fu_454_p4[ap_tvar_int_2] = p_Val2_s_fu_106[31 - ap_tvar_int_2];
        end
    end
end

assign tmp_28_fu_632_p1 = p_Result_s_fu_627_p2[23:0];

assign tmp_30_fu_672_p1 = p_Result_97_fu_667_p2[23:0];

assign tmp_fu_380_p4 = {{grp_fu_174_p2[31:5]}};

assign trunc_ln1067_fu_376_p1 = rem_fu_94[4:0];

assign trunc_ln1071_fu_410_p1 = rem_fu_94[5:0];

assign trunc_ln414_1_fu_436_p1 = add_ln1071_fu_400_p2[4:0];

assign trunc_ln414_fu_432_p1 = rem_fu_94[4:0];

assign trunc_ln674_1_fu_325_p1 = grp_fu_174_p2[5:0];

assign trunc_ln674_2_fu_329_p1 = sub_ln1074_fu_313_p2[5:0];

assign trunc_ln674_3_fu_730_p1 = sext_ln1074[4:0];

assign trunc_ln674_fu_396_p1 = grp_fu_174_p2[5:0];

assign xf_bits_per_clock_fu_269_p3 = ((bLast_width_reg_832[0:0] == 1'b1) ? last_blk_width_load : 4'd8);

assign xor_ln414_fu_708_p2 = (24'd16777215 ^ and_ln414_reg_946);

assign zext_ln1054_fu_207_p1 = i_fu_98;

assign zext_ln1060_1_fu_283_p1 = $unsigned(sext_ln1060_fu_275_p1);

assign zext_ln1060_fu_279_p1 = $unsigned(sext_ln1060_fu_275_p1);

assign zext_ln1061_fu_293_p1 = ptr_width_minus_fu_287_p3;

assign zext_ln1074_fu_309_p1 = select_ln1074_fu_303_p3;

assign zext_ln414_2_fu_681_p1 = select_ln414_2_fu_676_p3;

assign zext_ln414_3_fu_569_p1 = select_ln414_1_fu_558_p3;

assign zext_ln414_4_fu_573_p1 = sub_ln414_2_fu_563_p2;

assign zext_ln414_fu_636_p1 = sub_ln414_reg_931;

assign zext_ln674_10_fu_739_p1 = sub_ln674_8_reg_962;

assign zext_ln674_6_fu_618_p1 = sub_ln674_2_reg_921;

assign zext_ln674_7_fu_658_p1 = add_ln674_1_reg_889_pp0_iter3_reg;

assign zext_ln674_8_fu_482_p1 = select_ln674_5_fu_476_p3;

assign zext_ln674_9_fu_600_p1 = sub_ln674_7_reg_860_pp0_iter3_reg;

assign zext_ln674_fu_533_p1 = select_ln674_2_fu_521_p3;

endmodule //reversi_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow
