// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reversi_accel_xfGaussianFilter3x3_Pipeline_VITIS_LOOP_529_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_Val2_reload,
        p_Val2_121_reload,
        p_Val2_122_reload,
        p_Val2_123_reload,
        p_Val2_124_reload,
        p_Val2_125_reload,
        p_read,
        p_read1,
        out_val1_V_1_out,
        out_val1_V_1_out_ap_vld,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din1,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din2,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din3,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din4,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din5,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din6,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din7,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din8,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din9,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din10,
        grp_xFapplygaussian3x3_16_s_fu_560_p_din11,
        grp_xFapplygaussian3x3_16_s_fu_560_p_dout0,
        grp_xFapplygaussian3x3_16_s_fu_560_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] p_Val2_reload;
input  [23:0] p_Val2_121_reload;
input  [23:0] p_Val2_122_reload;
input  [23:0] p_Val2_123_reload;
input  [23:0] p_Val2_124_reload;
input  [23:0] p_Val2_125_reload;
input  [7:0] p_read;
input  [7:0] p_read1;
output  [23:0] out_val1_V_1_out;
output   out_val1_V_1_out_ap_vld;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din1;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din2;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din3;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din4;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din5;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din6;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din7;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din8;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din9;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din10;
output  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_din11;
input  [7:0] grp_xFapplygaussian3x3_16_s_fu_560_p_dout0;
output   grp_xFapplygaussian3x3_16_s_fu_560_p_ce;

reg ap_idle;
reg out_val1_V_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln529_fu_158_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln529_reg_353;
reg   [0:0] icmp_ln529_reg_353_pp0_iter1_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter2_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter3_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter4_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter5_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter6_reg;
reg   [0:0] icmp_ln529_reg_353_pp0_iter7_reg;
reg   [4:0] k_load_reg_357;
reg   [4:0] k_load_reg_357_pp0_iter1_reg;
reg   [4:0] k_load_reg_357_pp0_iter2_reg;
reg   [4:0] k_load_reg_357_pp0_iter3_reg;
reg   [4:0] k_load_reg_357_pp0_iter4_reg;
reg   [4:0] k_load_reg_357_pp0_iter5_reg;
reg   [4:0] k_load_reg_357_pp0_iter6_reg;
reg   [4:0] k_load_reg_357_pp0_iter7_reg;
reg   [4:0] k_load_reg_357_pp0_iter8_reg;
wire   [7:0] srcbuf10_V_fu_183_p1;
reg   [7:0] srcbuf10_V_reg_362;
wire   [7:0] srcbuf11_V_fu_197_p1;
reg   [7:0] srcbuf11_V_reg_367;
wire   [7:0] srcbuf20_V_fu_211_p1;
reg   [7:0] srcbuf20_V_reg_372;
wire   [7:0] srcbuf21_V_fu_225_p1;
reg   [7:0] srcbuf21_V_reg_377;
wire   [7:0] srcbuf30_V_fu_239_p1;
reg   [7:0] srcbuf30_V_reg_382;
wire   [7:0] srcbuf31_V_fu_253_p1;
reg   [7:0] srcbuf31_V_reg_387;
reg    grp_xFapplygaussian3x3_16_s_fu_127_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call21;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call21;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call21;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call21;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call21;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call21;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call21;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call21;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call21;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call21;
wire    ap_block_pp0_stage0_11001_ignoreCallOp55;
wire    ap_block_pp0_stage0;
reg   [23:0] p_Val2_s_fu_60;
wire   [23:0] p_Result_s_fu_307_p2;
reg   [1:0] i_fu_64;
wire   [1:0] i_2_fu_164_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_1;
reg   [4:0] k_fu_68;
wire   [4:0] k_1_fu_257_p2;
reg   [4:0] ap_sig_allocacmp_k_load;
wire    ap_block_pp0_stage0_01001;
wire   [23:0] zext_ln674_fu_173_p1;
wire   [23:0] lshr_ln674_fu_177_p2;
wire   [23:0] zext_ln674_1_fu_187_p1;
wire   [23:0] lshr_ln674_1_fu_191_p2;
wire   [23:0] zext_ln674_2_fu_201_p1;
wire   [23:0] lshr_ln674_2_fu_205_p2;
wire   [23:0] zext_ln674_3_fu_215_p1;
wire   [23:0] lshr_ln674_3_fu_219_p2;
wire   [23:0] zext_ln674_4_fu_229_p1;
wire   [23:0] lshr_ln674_4_fu_233_p2;
wire   [23:0] zext_ln674_5_fu_243_p1;
wire   [23:0] lshr_ln674_5_fu_247_p2;
wire   [23:0] zext_ln414_fu_276_p1;
wire   [23:0] shl_ln414_fu_279_p2;
wire   [23:0] xor_ln414_fu_285_p2;
wire   [23:0] zext_ln414_1_fu_297_p1;
wire   [23:0] and_ln414_fu_291_p2;
wire   [23:0] shl_ln414_1_fu_301_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_done_reg = 1'b0;
end

reversi_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln529_fu_158_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_64 <= i_2_fu_164_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln529_fu_158_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_68 <= k_1_fu_257_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_68 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln529_reg_353 <= icmp_ln529_fu_158_p2;
        icmp_ln529_reg_353_pp0_iter1_reg <= icmp_ln529_reg_353;
        k_load_reg_357_pp0_iter1_reg <= k_load_reg_357;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln529_reg_353_pp0_iter2_reg <= icmp_ln529_reg_353_pp0_iter1_reg;
        icmp_ln529_reg_353_pp0_iter3_reg <= icmp_ln529_reg_353_pp0_iter2_reg;
        icmp_ln529_reg_353_pp0_iter4_reg <= icmp_ln529_reg_353_pp0_iter3_reg;
        icmp_ln529_reg_353_pp0_iter5_reg <= icmp_ln529_reg_353_pp0_iter4_reg;
        icmp_ln529_reg_353_pp0_iter6_reg <= icmp_ln529_reg_353_pp0_iter5_reg;
        icmp_ln529_reg_353_pp0_iter7_reg <= icmp_ln529_reg_353_pp0_iter6_reg;
        k_load_reg_357_pp0_iter2_reg <= k_load_reg_357_pp0_iter1_reg;
        k_load_reg_357_pp0_iter3_reg <= k_load_reg_357_pp0_iter2_reg;
        k_load_reg_357_pp0_iter4_reg <= k_load_reg_357_pp0_iter3_reg;
        k_load_reg_357_pp0_iter5_reg <= k_load_reg_357_pp0_iter4_reg;
        k_load_reg_357_pp0_iter6_reg <= k_load_reg_357_pp0_iter5_reg;
        k_load_reg_357_pp0_iter7_reg <= k_load_reg_357_pp0_iter6_reg;
        k_load_reg_357_pp0_iter8_reg <= k_load_reg_357_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln529_fu_158_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_load_reg_357 <= ap_sig_allocacmp_k_load;
        srcbuf10_V_reg_362 <= srcbuf10_V_fu_183_p1;
        srcbuf11_V_reg_367 <= srcbuf11_V_fu_197_p1;
        srcbuf20_V_reg_372 <= srcbuf20_V_fu_211_p1;
        srcbuf21_V_reg_377 <= srcbuf21_V_fu_225_p1;
        srcbuf30_V_reg_382 <= srcbuf30_V_fu_239_p1;
        srcbuf31_V_reg_387 <= srcbuf31_V_fu_253_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        p_Val2_s_fu_60 <= p_Result_s_fu_307_p2;
    end
end

always @ (*) begin
    if (((icmp_ln529_fu_158_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_64;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_k_load = 5'd0;
    end else begin
        ap_sig_allocacmp_k_load = k_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp55) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_xFapplygaussian3x3_16_s_fu_127_ap_ce = 1'b1;
    end else begin
        grp_xFapplygaussian3x3_16_s_fu_127_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln529_reg_353_pp0_iter7_reg == 1'd1))) begin
        out_val1_V_1_out_ap_vld = 1'b1;
    end else begin
        out_val1_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln414_fu_291_p2 = (xor_ln414_fu_285_p2 & p_Val2_s_fu_60);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp55 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_ce = grp_xFapplygaussian3x3_16_s_fu_127_ap_ce;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din1 = srcbuf10_V_reg_362;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din10 = p_read;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din11 = p_read1;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din2 = srcbuf11_V_reg_367;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din3 = 8'd0;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din4 = srcbuf20_V_reg_372;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din5 = srcbuf21_V_reg_377;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din6 = 8'd0;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din7 = srcbuf30_V_reg_382;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din8 = srcbuf31_V_reg_387;

assign grp_xFapplygaussian3x3_16_s_fu_560_p_din9 = 8'd0;

assign i_2_fu_164_p2 = (ap_sig_allocacmp_i_1 + 2'd1);

assign icmp_ln529_fu_158_p2 = ((ap_sig_allocacmp_i_1 == 2'd3) ? 1'b1 : 1'b0);

assign k_1_fu_257_p2 = (ap_sig_allocacmp_k_load + 5'd8);

assign lshr_ln674_1_fu_191_p2 = p_Val2_121_reload >> zext_ln674_1_fu_187_p1;

assign lshr_ln674_2_fu_205_p2 = p_Val2_122_reload >> zext_ln674_2_fu_201_p1;

assign lshr_ln674_3_fu_219_p2 = p_Val2_123_reload >> zext_ln674_3_fu_215_p1;

assign lshr_ln674_4_fu_233_p2 = p_Val2_124_reload >> zext_ln674_4_fu_229_p1;

assign lshr_ln674_5_fu_247_p2 = p_Val2_125_reload >> zext_ln674_5_fu_243_p1;

assign lshr_ln674_fu_177_p2 = p_Val2_reload >> zext_ln674_fu_173_p1;

assign out_val1_V_1_out = p_Val2_s_fu_60;

assign p_Result_s_fu_307_p2 = (shl_ln414_1_fu_301_p2 | and_ln414_fu_291_p2);

assign shl_ln414_1_fu_301_p2 = zext_ln414_1_fu_297_p1 << zext_ln414_fu_276_p1;

assign shl_ln414_fu_279_p2 = 24'd255 << zext_ln414_fu_276_p1;

assign srcbuf10_V_fu_183_p1 = lshr_ln674_fu_177_p2[7:0];

assign srcbuf11_V_fu_197_p1 = lshr_ln674_1_fu_191_p2[7:0];

assign srcbuf20_V_fu_211_p1 = lshr_ln674_2_fu_205_p2[7:0];

assign srcbuf21_V_fu_225_p1 = lshr_ln674_3_fu_219_p2[7:0];

assign srcbuf30_V_fu_239_p1 = lshr_ln674_4_fu_233_p2[7:0];

assign srcbuf31_V_fu_253_p1 = lshr_ln674_5_fu_247_p2[7:0];

assign xor_ln414_fu_285_p2 = (shl_ln414_fu_279_p2 ^ 24'd16777215);

assign zext_ln414_1_fu_297_p1 = grp_xFapplygaussian3x3_16_s_fu_560_p_dout0;

assign zext_ln414_fu_276_p1 = k_load_reg_357_pp0_iter8_reg;

assign zext_ln674_1_fu_187_p1 = ap_sig_allocacmp_k_load;

assign zext_ln674_2_fu_201_p1 = ap_sig_allocacmp_k_load;

assign zext_ln674_3_fu_215_p1 = ap_sig_allocacmp_k_load;

assign zext_ln674_4_fu_229_p1 = ap_sig_allocacmp_k_load;

assign zext_ln674_5_fu_243_p1 = ap_sig_allocacmp_k_load;

assign zext_ln674_fu_173_p1 = ap_sig_allocacmp_k_load;

endmodule //reversi_accel_xfGaussianFilter3x3_Pipeline_VITIS_LOOP_529_1
