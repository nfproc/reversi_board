// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module reversi_accel_xfSorting_1024_1024_0_1_1_6u_3u_60_483_32_0_Pipeline_THETAL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        maxrho_V,
        maxangle_V,
        local_max_V,
        local_max_V_1,
        local_max_V_2,
        local_max_V_3,
        local_max_V_4,
        local_max_V_5,
        local_max_V_6,
        local_max_V_7,
        local_max_V_8,
        local_max_V_9,
        local_max_V_10,
        local_max_V_11,
        local_max_V_12,
        local_max_V_13,
        local_max_V_14,
        local_max_V_15,
        local_max_V_16,
        local_max_V_17,
        local_max_V_18,
        local_max_V_19,
        local_max_V_20,
        local_max_V_21,
        local_max_V_22,
        local_max_V_23,
        local_max_V_24,
        local_max_V_25,
        local_max_V_26,
        local_max_V_27,
        local_max_V_28,
        local_max_V_29,
        local_max_V_30,
        local_max_V_31,
        local_max_V_32,
        local_max_V_33,
        local_max_V_34,
        local_max_V_35,
        local_max_V_36,
        local_max_V_37,
        local_max_V_38,
        local_max_V_39,
        local_max_V_40,
        local_max_V_41,
        local_max_V_42,
        local_max_V_43,
        local_max_V_44,
        local_max_V_45,
        local_max_V_46,
        local_max_V_47,
        local_max_V_48,
        local_max_V_49,
        local_max_V_50,
        local_max_V_51,
        local_max_V_52,
        local_max_V_53,
        local_max_V_54,
        local_max_V_55,
        local_max_V_56,
        local_max_V_57,
        local_max_V_58,
        local_max_V_59,
        local_max_rho_V,
        local_max_rho_V_1,
        local_max_rho_V_2,
        local_max_rho_V_3,
        local_max_rho_V_4,
        local_max_rho_V_5,
        local_max_rho_V_6,
        local_max_rho_V_7,
        local_max_rho_V_8,
        local_max_rho_V_9,
        local_max_rho_V_10,
        local_max_rho_V_11,
        local_max_rho_V_12,
        local_max_rho_V_13,
        local_max_rho_V_14,
        local_max_rho_V_15,
        local_max_rho_V_16,
        local_max_rho_V_17,
        local_max_rho_V_18,
        local_max_rho_V_19,
        local_max_rho_V_20,
        local_max_rho_V_21,
        local_max_rho_V_22,
        local_max_rho_V_23,
        local_max_rho_V_24,
        local_max_rho_V_25,
        local_max_rho_V_26,
        local_max_rho_V_27,
        local_max_rho_V_28,
        local_max_rho_V_29,
        local_max_rho_V_30,
        local_max_rho_V_31,
        local_max_rho_V_32,
        local_max_rho_V_33,
        local_max_rho_V_34,
        local_max_rho_V_35,
        local_max_rho_V_36,
        local_max_rho_V_37,
        local_max_rho_V_38,
        local_max_rho_V_39,
        local_max_rho_V_40,
        local_max_rho_V_41,
        local_max_rho_V_42,
        local_max_rho_V_43,
        local_max_rho_V_44,
        local_max_rho_V_45,
        local_max_rho_V_46,
        local_max_rho_V_47,
        local_max_rho_V_48,
        local_max_rho_V_49,
        local_max_rho_V_50,
        local_max_rho_V_51,
        local_max_rho_V_52,
        local_max_rho_V_53,
        local_max_rho_V_54,
        local_max_rho_V_55,
        local_max_rho_V_56,
        local_max_rho_V_57,
        local_max_rho_V_58,
        local_max_rho_V_59,
        maxrho_V_4_out,
        maxrho_V_4_out_ap_vld,
        maxangle_V_1_out,
        maxangle_V_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] maxrho_V;
input  [9:0] maxangle_V;
input  [11:0] local_max_V;
input  [11:0] local_max_V_1;
input  [11:0] local_max_V_2;
input  [11:0] local_max_V_3;
input  [11:0] local_max_V_4;
input  [11:0] local_max_V_5;
input  [11:0] local_max_V_6;
input  [11:0] local_max_V_7;
input  [11:0] local_max_V_8;
input  [11:0] local_max_V_9;
input  [11:0] local_max_V_10;
input  [11:0] local_max_V_11;
input  [11:0] local_max_V_12;
input  [11:0] local_max_V_13;
input  [11:0] local_max_V_14;
input  [11:0] local_max_V_15;
input  [11:0] local_max_V_16;
input  [11:0] local_max_V_17;
input  [11:0] local_max_V_18;
input  [11:0] local_max_V_19;
input  [11:0] local_max_V_20;
input  [11:0] local_max_V_21;
input  [11:0] local_max_V_22;
input  [11:0] local_max_V_23;
input  [11:0] local_max_V_24;
input  [11:0] local_max_V_25;
input  [11:0] local_max_V_26;
input  [11:0] local_max_V_27;
input  [11:0] local_max_V_28;
input  [11:0] local_max_V_29;
input  [11:0] local_max_V_30;
input  [11:0] local_max_V_31;
input  [11:0] local_max_V_32;
input  [11:0] local_max_V_33;
input  [11:0] local_max_V_34;
input  [11:0] local_max_V_35;
input  [11:0] local_max_V_36;
input  [11:0] local_max_V_37;
input  [11:0] local_max_V_38;
input  [11:0] local_max_V_39;
input  [11:0] local_max_V_40;
input  [11:0] local_max_V_41;
input  [11:0] local_max_V_42;
input  [11:0] local_max_V_43;
input  [11:0] local_max_V_44;
input  [11:0] local_max_V_45;
input  [11:0] local_max_V_46;
input  [11:0] local_max_V_47;
input  [11:0] local_max_V_48;
input  [11:0] local_max_V_49;
input  [11:0] local_max_V_50;
input  [11:0] local_max_V_51;
input  [11:0] local_max_V_52;
input  [11:0] local_max_V_53;
input  [11:0] local_max_V_54;
input  [11:0] local_max_V_55;
input  [11:0] local_max_V_56;
input  [11:0] local_max_V_57;
input  [11:0] local_max_V_58;
input  [11:0] local_max_V_59;
input  [11:0] local_max_rho_V;
input  [11:0] local_max_rho_V_1;
input  [11:0] local_max_rho_V_2;
input  [11:0] local_max_rho_V_3;
input  [11:0] local_max_rho_V_4;
input  [11:0] local_max_rho_V_5;
input  [11:0] local_max_rho_V_6;
input  [11:0] local_max_rho_V_7;
input  [11:0] local_max_rho_V_8;
input  [11:0] local_max_rho_V_9;
input  [11:0] local_max_rho_V_10;
input  [11:0] local_max_rho_V_11;
input  [11:0] local_max_rho_V_12;
input  [11:0] local_max_rho_V_13;
input  [11:0] local_max_rho_V_14;
input  [11:0] local_max_rho_V_15;
input  [11:0] local_max_rho_V_16;
input  [11:0] local_max_rho_V_17;
input  [11:0] local_max_rho_V_18;
input  [11:0] local_max_rho_V_19;
input  [11:0] local_max_rho_V_20;
input  [11:0] local_max_rho_V_21;
input  [11:0] local_max_rho_V_22;
input  [11:0] local_max_rho_V_23;
input  [11:0] local_max_rho_V_24;
input  [11:0] local_max_rho_V_25;
input  [11:0] local_max_rho_V_26;
input  [11:0] local_max_rho_V_27;
input  [11:0] local_max_rho_V_28;
input  [11:0] local_max_rho_V_29;
input  [11:0] local_max_rho_V_30;
input  [11:0] local_max_rho_V_31;
input  [11:0] local_max_rho_V_32;
input  [11:0] local_max_rho_V_33;
input  [11:0] local_max_rho_V_34;
input  [11:0] local_max_rho_V_35;
input  [11:0] local_max_rho_V_36;
input  [11:0] local_max_rho_V_37;
input  [11:0] local_max_rho_V_38;
input  [11:0] local_max_rho_V_39;
input  [11:0] local_max_rho_V_40;
input  [11:0] local_max_rho_V_41;
input  [11:0] local_max_rho_V_42;
input  [11:0] local_max_rho_V_43;
input  [11:0] local_max_rho_V_44;
input  [11:0] local_max_rho_V_45;
input  [11:0] local_max_rho_V_46;
input  [11:0] local_max_rho_V_47;
input  [11:0] local_max_rho_V_48;
input  [11:0] local_max_rho_V_49;
input  [11:0] local_max_rho_V_50;
input  [11:0] local_max_rho_V_51;
input  [11:0] local_max_rho_V_52;
input  [11:0] local_max_rho_V_53;
input  [11:0] local_max_rho_V_54;
input  [11:0] local_max_rho_V_55;
input  [11:0] local_max_rho_V_56;
input  [11:0] local_max_rho_V_57;
input  [11:0] local_max_rho_V_58;
input  [11:0] local_max_rho_V_59;
output  [11:0] maxrho_V_4_out;
output   maxrho_V_4_out_ap_vld;
output  [9:0] maxangle_V_1_out;
output   maxangle_V_1_out_ap_vld;

reg ap_idle;
reg maxrho_V_4_out_ap_vld;
reg maxangle_V_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1073_fu_1069_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] n_V_reg_1430;
wire    ap_block_pp0_stage0_11001;
wire   [11:0] maxfinal_V_1_fu_1081_p62;
reg   [11:0] maxfinal_V_1_reg_1438;
wire   [11:0] maxrho_V_2_fu_1207_p62;
reg   [11:0] maxrho_V_2_reg_1444;
reg   [9:0] maxangle_V_1_fu_284;
wire   [9:0] maxangle_V_5_fu_1355_p3;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
reg   [11:0] maxrho_V_1_fu_288;
wire   [11:0] maxrho_V_3_fu_1363_p3;
reg   [11:0] maxfinal_V_fu_292;
wire   [11:0] maxfinal_V_2_fu_1370_p3;
reg   [5:0] maxangle_V_2_fu_296;
wire   [5:0] add_ln886_fu_1075_p2;
reg   [5:0] ap_sig_allocacmp_n_V;
wire    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1081_fu_1347_p2;
wire   [9:0] zext_ln609_fu_1352_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

reversi_accel_mux_606_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 12 ),
    .din17_WIDTH( 12 ),
    .din18_WIDTH( 12 ),
    .din19_WIDTH( 12 ),
    .din20_WIDTH( 12 ),
    .din21_WIDTH( 12 ),
    .din22_WIDTH( 12 ),
    .din23_WIDTH( 12 ),
    .din24_WIDTH( 12 ),
    .din25_WIDTH( 12 ),
    .din26_WIDTH( 12 ),
    .din27_WIDTH( 12 ),
    .din28_WIDTH( 12 ),
    .din29_WIDTH( 12 ),
    .din30_WIDTH( 12 ),
    .din31_WIDTH( 12 ),
    .din32_WIDTH( 12 ),
    .din33_WIDTH( 12 ),
    .din34_WIDTH( 12 ),
    .din35_WIDTH( 12 ),
    .din36_WIDTH( 12 ),
    .din37_WIDTH( 12 ),
    .din38_WIDTH( 12 ),
    .din39_WIDTH( 12 ),
    .din40_WIDTH( 12 ),
    .din41_WIDTH( 12 ),
    .din42_WIDTH( 12 ),
    .din43_WIDTH( 12 ),
    .din44_WIDTH( 12 ),
    .din45_WIDTH( 12 ),
    .din46_WIDTH( 12 ),
    .din47_WIDTH( 12 ),
    .din48_WIDTH( 12 ),
    .din49_WIDTH( 12 ),
    .din50_WIDTH( 12 ),
    .din51_WIDTH( 12 ),
    .din52_WIDTH( 12 ),
    .din53_WIDTH( 12 ),
    .din54_WIDTH( 12 ),
    .din55_WIDTH( 12 ),
    .din56_WIDTH( 12 ),
    .din57_WIDTH( 12 ),
    .din58_WIDTH( 12 ),
    .din59_WIDTH( 12 ),
    .din60_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mux_606_12_1_1_U1486(
    .din0(local_max_V),
    .din1(local_max_V_1),
    .din2(local_max_V_2),
    .din3(local_max_V_3),
    .din4(local_max_V_4),
    .din5(local_max_V_5),
    .din6(local_max_V_6),
    .din7(local_max_V_7),
    .din8(local_max_V_8),
    .din9(local_max_V_9),
    .din10(local_max_V_10),
    .din11(local_max_V_11),
    .din12(local_max_V_12),
    .din13(local_max_V_13),
    .din14(local_max_V_14),
    .din15(local_max_V_15),
    .din16(local_max_V_16),
    .din17(local_max_V_17),
    .din18(local_max_V_18),
    .din19(local_max_V_19),
    .din20(local_max_V_20),
    .din21(local_max_V_21),
    .din22(local_max_V_22),
    .din23(local_max_V_23),
    .din24(local_max_V_24),
    .din25(local_max_V_25),
    .din26(local_max_V_26),
    .din27(local_max_V_27),
    .din28(local_max_V_28),
    .din29(local_max_V_29),
    .din30(local_max_V_30),
    .din31(local_max_V_31),
    .din32(local_max_V_32),
    .din33(local_max_V_33),
    .din34(local_max_V_34),
    .din35(local_max_V_35),
    .din36(local_max_V_36),
    .din37(local_max_V_37),
    .din38(local_max_V_38),
    .din39(local_max_V_39),
    .din40(local_max_V_40),
    .din41(local_max_V_41),
    .din42(local_max_V_42),
    .din43(local_max_V_43),
    .din44(local_max_V_44),
    .din45(local_max_V_45),
    .din46(local_max_V_46),
    .din47(local_max_V_47),
    .din48(local_max_V_48),
    .din49(local_max_V_49),
    .din50(local_max_V_50),
    .din51(local_max_V_51),
    .din52(local_max_V_52),
    .din53(local_max_V_53),
    .din54(local_max_V_54),
    .din55(local_max_V_55),
    .din56(local_max_V_56),
    .din57(local_max_V_57),
    .din58(local_max_V_58),
    .din59(local_max_V_59),
    .din60(ap_sig_allocacmp_n_V),
    .dout(maxfinal_V_1_fu_1081_p62)
);

reversi_accel_mux_606_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 12 ),
    .din17_WIDTH( 12 ),
    .din18_WIDTH( 12 ),
    .din19_WIDTH( 12 ),
    .din20_WIDTH( 12 ),
    .din21_WIDTH( 12 ),
    .din22_WIDTH( 12 ),
    .din23_WIDTH( 12 ),
    .din24_WIDTH( 12 ),
    .din25_WIDTH( 12 ),
    .din26_WIDTH( 12 ),
    .din27_WIDTH( 12 ),
    .din28_WIDTH( 12 ),
    .din29_WIDTH( 12 ),
    .din30_WIDTH( 12 ),
    .din31_WIDTH( 12 ),
    .din32_WIDTH( 12 ),
    .din33_WIDTH( 12 ),
    .din34_WIDTH( 12 ),
    .din35_WIDTH( 12 ),
    .din36_WIDTH( 12 ),
    .din37_WIDTH( 12 ),
    .din38_WIDTH( 12 ),
    .din39_WIDTH( 12 ),
    .din40_WIDTH( 12 ),
    .din41_WIDTH( 12 ),
    .din42_WIDTH( 12 ),
    .din43_WIDTH( 12 ),
    .din44_WIDTH( 12 ),
    .din45_WIDTH( 12 ),
    .din46_WIDTH( 12 ),
    .din47_WIDTH( 12 ),
    .din48_WIDTH( 12 ),
    .din49_WIDTH( 12 ),
    .din50_WIDTH( 12 ),
    .din51_WIDTH( 12 ),
    .din52_WIDTH( 12 ),
    .din53_WIDTH( 12 ),
    .din54_WIDTH( 12 ),
    .din55_WIDTH( 12 ),
    .din56_WIDTH( 12 ),
    .din57_WIDTH( 12 ),
    .din58_WIDTH( 12 ),
    .din59_WIDTH( 12 ),
    .din60_WIDTH( 6 ),
    .dout_WIDTH( 12 ))
mux_606_12_1_1_U1487(
    .din0(local_max_rho_V),
    .din1(local_max_rho_V_1),
    .din2(local_max_rho_V_2),
    .din3(local_max_rho_V_3),
    .din4(local_max_rho_V_4),
    .din5(local_max_rho_V_5),
    .din6(local_max_rho_V_6),
    .din7(local_max_rho_V_7),
    .din8(local_max_rho_V_8),
    .din9(local_max_rho_V_9),
    .din10(local_max_rho_V_10),
    .din11(local_max_rho_V_11),
    .din12(local_max_rho_V_12),
    .din13(local_max_rho_V_13),
    .din14(local_max_rho_V_14),
    .din15(local_max_rho_V_15),
    .din16(local_max_rho_V_16),
    .din17(local_max_rho_V_17),
    .din18(local_max_rho_V_18),
    .din19(local_max_rho_V_19),
    .din20(local_max_rho_V_20),
    .din21(local_max_rho_V_21),
    .din22(local_max_rho_V_22),
    .din23(local_max_rho_V_23),
    .din24(local_max_rho_V_24),
    .din25(local_max_rho_V_25),
    .din26(local_max_rho_V_26),
    .din27(local_max_rho_V_27),
    .din28(local_max_rho_V_28),
    .din29(local_max_rho_V_29),
    .din30(local_max_rho_V_30),
    .din31(local_max_rho_V_31),
    .din32(local_max_rho_V_32),
    .din33(local_max_rho_V_33),
    .din34(local_max_rho_V_34),
    .din35(local_max_rho_V_35),
    .din36(local_max_rho_V_36),
    .din37(local_max_rho_V_37),
    .din38(local_max_rho_V_38),
    .din39(local_max_rho_V_39),
    .din40(local_max_rho_V_40),
    .din41(local_max_rho_V_41),
    .din42(local_max_rho_V_42),
    .din43(local_max_rho_V_43),
    .din44(local_max_rho_V_44),
    .din45(local_max_rho_V_45),
    .din46(local_max_rho_V_46),
    .din47(local_max_rho_V_47),
    .din48(local_max_rho_V_48),
    .din49(local_max_rho_V_49),
    .din50(local_max_rho_V_50),
    .din51(local_max_rho_V_51),
    .din52(local_max_rho_V_52),
    .din53(local_max_rho_V_53),
    .din54(local_max_rho_V_54),
    .din55(local_max_rho_V_55),
    .din56(local_max_rho_V_56),
    .din57(local_max_rho_V_57),
    .din58(local_max_rho_V_58),
    .din59(local_max_rho_V_59),
    .din60(ap_sig_allocacmp_n_V),
    .dout(maxrho_V_2_fu_1207_p62)
);

reversi_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxangle_V_1_fu_284 <= maxangle_V;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            maxangle_V_1_fu_284 <= maxangle_V_5_fu_1355_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln1073_fu_1069_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            maxangle_V_2_fu_296 <= add_ln886_fu_1075_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            maxangle_V_2_fu_296 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxfinal_V_fu_292 <= 12'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            maxfinal_V_fu_292 <= maxfinal_V_2_fu_1370_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            maxrho_V_1_fu_288 <= maxrho_V;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            maxrho_V_1_fu_288 <= maxrho_V_3_fu_1363_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_fu_1069_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxfinal_V_1_reg_1438 <= maxfinal_V_1_fu_1081_p62;
        maxrho_V_2_reg_1444 <= maxrho_V_2_fu_1207_p62;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_V_reg_1430 <= ap_sig_allocacmp_n_V;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_1069_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n_V = 6'd0;
    end else begin
        ap_sig_allocacmp_n_V = maxangle_V_2_fu_296;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_1069_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxangle_V_1_out_ap_vld = 1'b1;
    end else begin
        maxangle_V_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_1069_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        maxrho_V_4_out_ap_vld = 1'b1;
    end else begin
        maxrho_V_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_fu_1075_p2 = (ap_sig_allocacmp_n_V + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign icmp_ln1073_fu_1069_p2 = ((ap_sig_allocacmp_n_V == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln1081_fu_1347_p2 = ((maxfinal_V_fu_292 < maxfinal_V_1_reg_1438) ? 1'b1 : 1'b0);

assign maxangle_V_1_out = maxangle_V_1_fu_284;

assign maxangle_V_5_fu_1355_p3 = ((icmp_ln1081_fu_1347_p2[0:0] == 1'b1) ? zext_ln609_fu_1352_p1 : maxangle_V_1_fu_284);

assign maxfinal_V_2_fu_1370_p3 = ((icmp_ln1081_fu_1347_p2[0:0] == 1'b1) ? maxfinal_V_1_reg_1438 : maxfinal_V_fu_292);

assign maxrho_V_3_fu_1363_p3 = ((icmp_ln1081_fu_1347_p2[0:0] == 1'b1) ? maxrho_V_2_reg_1444 : maxrho_V_1_fu_288);

assign maxrho_V_4_out = maxrho_V_1_fu_288;

assign zext_ln609_fu_1352_p1 = n_V_reg_1430;

endmodule //reversi_accel_xfSorting_1024_1024_0_1_1_6u_3u_60_483_32_0_Pipeline_THETAL
