-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reversi_accel_Axi2AxiStream is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_data_AWVALID : OUT STD_LOGIC;
    m_axi_data_AWREADY : IN STD_LOGIC;
    m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_WVALID : OUT STD_LOGIC;
    m_axi_data_WREADY : IN STD_LOGIC;
    m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_WLAST : OUT STD_LOGIC;
    m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_ARVALID : OUT STD_LOGIC;
    m_axi_data_ARREADY : IN STD_LOGIC;
    m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RVALID : IN STD_LOGIC;
    m_axi_data_RREADY : OUT STD_LOGIC;
    m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_data_RLAST : IN STD_LOGIC;
    m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BVALID : IN STD_LOGIC;
    m_axi_data_BREADY : OUT STD_LOGIC;
    m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    din : IN STD_LOGIC_VECTOR (63 downto 0);
    ldata_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    ldata_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    ldata_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    ldata_full_n : IN STD_LOGIC;
    ldata_write : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    stride : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of reversi_accel_Axi2AxiStream is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv26_1F : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal data_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal cols_int16_fu_158_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal cols_int16_reg_387 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1014_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1014_reg_392 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln232_fu_173_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln1540_fu_182_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln1540_reg_413 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln1540_1_fu_185_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1540_1_reg_418 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1540_2_fu_188_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln1540_2_reg_423 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln1540_3_fu_191_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1540_3_reg_428 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal cols_addrbound_fu_220_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal cols_addrbound_reg_443 : STD_LOGIC_VECTOR (20 downto 0);
    signal cmp_i82_i_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i82_i_reg_448 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1021_fu_279_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1021_reg_452 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln1021_1_fu_283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1021_1_reg_457 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_2_fu_299_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_2_reg_465 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln1017_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_309_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal empty_reg_475 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal trunc_ln_reg_480 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_done : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_idle : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_ready : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWVALID : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WVALID : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WLAST : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARVALID : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_RREADY : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_BREADY : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_write : STD_LOGIC;
    signal grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sext_ln1021_fu_340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_fu_108 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln1540_fu_182_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_354_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1540_1_fu_185_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1540_2_fu_188_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_362_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1540_3_fu_191_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln_fu_194_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1540_1_fu_201_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_fu_208_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln587_fu_214_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1540_2_fu_230_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal shl_ln1540_3_fu_237_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal ret_V_24_fu_244_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln587_1_fu_250_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal stride_addrbound_fu_256_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal addrbound_V_fu_266_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln1017_fu_290_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_309_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_309_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_7_fu_314_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_cast1_i_fu_321_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_245_fu_325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_354_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_354_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_362_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_362_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal grp_fu_309_p00 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_354_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_362_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component reversi_accel_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_data_AWVALID : OUT STD_LOGIC;
        m_axi_data_AWREADY : IN STD_LOGIC;
        m_axi_data_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WVALID : OUT STD_LOGIC;
        m_axi_data_WREADY : IN STD_LOGIC;
        m_axi_data_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_WLAST : OUT STD_LOGIC;
        m_axi_data_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARVALID : OUT STD_LOGIC;
        m_axi_data_ARREADY : IN STD_LOGIC;
        m_axi_data_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_data_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_data_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_data_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RVALID : IN STD_LOGIC;
        m_axi_data_RREADY : OUT STD_LOGIC;
        m_axi_data_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_data_RLAST : IN STD_LOGIC;
        m_axi_data_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_data_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BVALID : IN STD_LOGIC;
        m_axi_data_BREADY : OUT STD_LOGIC;
        m_axi_data_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_data_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_data_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ldata_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        ldata_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        ldata_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        ldata_full_n : IN STD_LOGIC;
        ldata_write : OUT STD_LOGIC;
        sext_ln1021 : IN STD_LOGIC_VECTOR (61 downto 0);
        cols_addrbound : IN STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component reversi_accel_mul_31ns_21ns_52_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component reversi_accel_mul_mul_16ns_16ns_32_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148 : component reversi_accel_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start,
        ap_done => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_done,
        ap_idle => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_idle,
        ap_ready => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_ready,
        m_axi_data_AWVALID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWVALID,
        m_axi_data_AWREADY => ap_const_logic_0,
        m_axi_data_AWADDR => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWADDR,
        m_axi_data_AWID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWID,
        m_axi_data_AWLEN => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWLEN,
        m_axi_data_AWSIZE => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWSIZE,
        m_axi_data_AWBURST => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWBURST,
        m_axi_data_AWLOCK => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWLOCK,
        m_axi_data_AWCACHE => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWCACHE,
        m_axi_data_AWPROT => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWPROT,
        m_axi_data_AWQOS => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWQOS,
        m_axi_data_AWREGION => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWREGION,
        m_axi_data_AWUSER => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_AWUSER,
        m_axi_data_WVALID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WVALID,
        m_axi_data_WREADY => ap_const_logic_0,
        m_axi_data_WDATA => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WDATA,
        m_axi_data_WSTRB => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WSTRB,
        m_axi_data_WLAST => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WLAST,
        m_axi_data_WID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WID,
        m_axi_data_WUSER => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_WUSER,
        m_axi_data_ARVALID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARVALID,
        m_axi_data_ARREADY => m_axi_data_ARREADY,
        m_axi_data_ARADDR => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARADDR,
        m_axi_data_ARID => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARID,
        m_axi_data_ARLEN => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLEN,
        m_axi_data_ARSIZE => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARSIZE,
        m_axi_data_ARBURST => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARBURST,
        m_axi_data_ARLOCK => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLOCK,
        m_axi_data_ARCACHE => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARCACHE,
        m_axi_data_ARPROT => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARPROT,
        m_axi_data_ARQOS => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARQOS,
        m_axi_data_ARREGION => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARREGION,
        m_axi_data_ARUSER => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARUSER,
        m_axi_data_RVALID => m_axi_data_RVALID,
        m_axi_data_RREADY => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_RREADY,
        m_axi_data_RDATA => m_axi_data_RDATA,
        m_axi_data_RLAST => m_axi_data_RLAST,
        m_axi_data_RID => m_axi_data_RID,
        m_axi_data_RFIFONUM => m_axi_data_RFIFONUM,
        m_axi_data_RUSER => m_axi_data_RUSER,
        m_axi_data_RRESP => m_axi_data_RRESP,
        m_axi_data_BVALID => ap_const_logic_0,
        m_axi_data_BREADY => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_BREADY,
        m_axi_data_BRESP => ap_const_lv2_0,
        m_axi_data_BID => ap_const_lv1_0,
        m_axi_data_BUSER => ap_const_lv1_0,
        ldata_din => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_din,
        ldata_num_data_valid => ap_const_lv2_0,
        ldata_fifo_cap => ap_const_lv2_0,
        ldata_full_n => ldata_full_n,
        ldata_write => grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_write,
        sext_ln1021 => trunc_ln_reg_480,
        cols_addrbound => cols_addrbound_reg_443);

    mul_31ns_21ns_52_2_1_U18 : component reversi_accel_mul_31ns_21ns_52_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 31,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_309_p0,
        din1 => grp_fu_309_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_309_p2);

    mul_mul_16ns_16ns_32_3_1_U19 : component reversi_accel_mul_mul_16ns_16ns_32_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_354_p0,
        din1 => grp_fu_354_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_354_p2);

    mul_mul_16ns_16ns_32_3_1_U20 : component reversi_accel_mul_mul_16ns_16ns_32_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_362_p0,
        din1 => grp_fu_362_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_362_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1017_fu_294_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_ready = ap_const_logic_1)) then 
                    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    r_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                r_fu_108 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                r_fu_108 <= r_2_reg_465;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                cmp_i82_i_reg_448 <= cmp_i82_i_fu_273_p2;
                cols_addrbound_reg_443 <= add_ln587_fu_214_p2(25 downto 5);
                    zext_ln1021_1_reg_457(20 downto 0) <= zext_ln1021_1_fu_283_p1(20 downto 0);
                    zext_ln1021_reg_452(20 downto 0) <= zext_ln1021_fu_279_p1(20 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cols_int16_reg_387 <= cols_int16_fu_158_p1;
                icmp_ln1014_reg_392 <= icmp_ln1014_fu_162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                empty_reg_475 <= grp_fu_309_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                r_2_reg_465 <= r_2_fu_299_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                trunc_ln1540_1_reg_418 <= trunc_ln1540_1_fu_185_p1;
                trunc_ln1540_reg_413 <= trunc_ln1540_fu_182_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln1014_reg_392 = ap_const_lv1_0))) then
                trunc_ln1540_2_reg_423 <= trunc_ln1540_2_fu_188_p1;
                trunc_ln1540_3_reg_428 <= trunc_ln1540_3_fu_191_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (cmp_i82_i_reg_448 = ap_const_lv1_0))) then
                trunc_ln_reg_480 <= empty_245_fu_325_p2(63 downto 2);
            end if;
        end if;
    end process;
    zext_ln1021_reg_452(51 downto 21) <= "0000000000000000000000000000000";
    zext_ln1021_1_reg_457(31 downto 21) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_data_ARREADY, ap_CS_fsm_state9, cmp_i82_i_reg_448, ap_CS_fsm_state6, icmp_ln1017_fu_294_p2, ap_CS_fsm_state8, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1017_fu_294_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (cmp_i82_i_reg_448 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((m_axi_data_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln587_1_fu_250_p2 <= std_logic_vector(unsigned(ret_V_24_fu_244_p2) + unsigned(ap_const_lv26_1F));
    add_ln587_fu_214_p2 <= std_logic_vector(unsigned(ret_V_fu_208_p2) + unsigned(ap_const_lv26_1F));
    addrbound_V_fu_266_p3 <= 
        cols_addrbound_fu_220_p4 when (icmp_ln1014_reg_392(0) = '1') else 
        stride_addrbound_fu_256_p4;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_on_subcall_done)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(m_axi_data_ARREADY)
    begin
        if ((m_axi_data_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_done = ap_const_logic_0) and (cmp_i82_i_reg_448 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, icmp_ln1017_fu_294_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1017_fu_294_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln1017_fu_294_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln1017_fu_294_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i82_i_fu_273_p2 <= "1" when (cols_addrbound_fu_220_p4 = ap_const_lv21_0) else "0";
    cols_addrbound_fu_220_p4 <= add_ln587_fu_214_p2(25 downto 5);
    cols_int16_fu_158_p1 <= stride(16 - 1 downto 0);

    data_blk_n_AR_assign_proc : process(m_axi_data_ARREADY, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            data_blk_n_AR <= m_axi_data_ARREADY;
        else 
            data_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    empty_245_fu_325_p2 <= std_logic_vector(unsigned(p_cast1_i_fu_321_p1) + unsigned(din));
    grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ap_start_reg;
    grp_fu_309_p0 <= grp_fu_309_p00(31 - 1 downto 0);
    grp_fu_309_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_108),52));
    grp_fu_309_p1 <= zext_ln1021_reg_452(21 - 1 downto 0);
    grp_fu_354_p0 <= grp_fu_354_p00(16 - 1 downto 0);
    grp_fu_354_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read2),32));
    grp_fu_354_p1 <= zext_ln232_fu_173_p1(16 - 1 downto 0);
    grp_fu_362_p0 <= grp_fu_362_p00(16 - 1 downto 0);
    grp_fu_362_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols_int16_reg_387),32));
    grp_fu_362_p1 <= zext_ln232_fu_173_p1(16 - 1 downto 0);
    icmp_ln1014_fu_162_p2 <= "1" when (stride = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln1017_fu_294_p2 <= "1" when (signed(zext_ln1017_fu_290_p1) < signed(p_read1)) else "0";
    ldata_din <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_din;

    ldata_write_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_write, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0))) then 
            ldata_write <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_ldata_write;
        else 
            ldata_write <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_data_ARADDR_assign_proc : process(m_axi_data_ARREADY, ap_CS_fsm_state9, cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARADDR, ap_CS_fsm_state16, ap_CS_fsm_state17, sext_ln1021_fu_340_p1)
    begin
        if (((m_axi_data_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_data_ARADDR <= sext_ln1021_fu_340_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARADDR <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARADDR;
        else 
            m_axi_data_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_data_ARBURST_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARBURST, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARBURST <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARBURST;
        else 
            m_axi_data_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_data_ARCACHE_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARCACHE, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARCACHE <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARCACHE;
        else 
            m_axi_data_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_data_ARID_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARID <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARID;
        else 
            m_axi_data_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_data_ARLEN_assign_proc : process(m_axi_data_ARREADY, ap_CS_fsm_state9, cmp_i82_i_reg_448, zext_ln1021_1_reg_457, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLEN, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((m_axi_data_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_data_ARLEN <= zext_ln1021_1_reg_457;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARLEN <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLEN;
        else 
            m_axi_data_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_data_ARLOCK_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLOCK, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARLOCK <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARLOCK;
        else 
            m_axi_data_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_data_ARPROT_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARPROT, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARPROT <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARPROT;
        else 
            m_axi_data_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_data_ARQOS_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARQOS, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARQOS <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARQOS;
        else 
            m_axi_data_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_data_ARREGION_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARREGION, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARREGION <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARREGION;
        else 
            m_axi_data_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_data_ARSIZE_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARSIZE, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARSIZE <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARSIZE;
        else 
            m_axi_data_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_data_ARUSER_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARUSER, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARUSER <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARUSER;
        else 
            m_axi_data_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_data_ARVALID_assign_proc : process(m_axi_data_ARREADY, ap_CS_fsm_state9, cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARVALID, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((m_axi_data_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_data_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_ARVALID <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_ARVALID;
        else 
            m_axi_data_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_data_AWADDR <= ap_const_lv64_0;
    m_axi_data_AWBURST <= ap_const_lv2_0;
    m_axi_data_AWCACHE <= ap_const_lv4_0;
    m_axi_data_AWID <= ap_const_lv1_0;
    m_axi_data_AWLEN <= ap_const_lv32_0;
    m_axi_data_AWLOCK <= ap_const_lv2_0;
    m_axi_data_AWPROT <= ap_const_lv3_0;
    m_axi_data_AWQOS <= ap_const_lv4_0;
    m_axi_data_AWREGION <= ap_const_lv4_0;
    m_axi_data_AWSIZE <= ap_const_lv3_0;
    m_axi_data_AWUSER <= ap_const_lv1_0;
    m_axi_data_AWVALID <= ap_const_logic_0;
    m_axi_data_BREADY <= ap_const_logic_0;

    m_axi_data_RREADY_assign_proc : process(cmp_i82_i_reg_448, grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_RREADY, ap_CS_fsm_state16, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (cmp_i82_i_reg_448 = ap_const_lv1_0)))) then 
            m_axi_data_RREADY <= grp_Axi2AxiStream_Pipeline_VITIS_LOOP_1021_1_fu_148_m_axi_data_RREADY;
        else 
            m_axi_data_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_data_WDATA <= ap_const_lv32_0;
    m_axi_data_WID <= ap_const_lv1_0;
    m_axi_data_WLAST <= ap_const_logic_0;
    m_axi_data_WSTRB <= ap_const_lv4_0;
    m_axi_data_WUSER <= ap_const_lv1_0;
    m_axi_data_WVALID <= ap_const_logic_0;
    p_cast1_i_fu_321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_314_p3),64));
    r_2_fu_299_p2 <= std_logic_vector(unsigned(r_fu_108) + unsigned(ap_const_lv31_1));
    ret_V_24_fu_244_p2 <= std_logic_vector(unsigned(shl_ln1540_2_fu_230_p3) - unsigned(shl_ln1540_3_fu_237_p3));
    ret_V_fu_208_p2 <= std_logic_vector(unsigned(shl_ln_fu_194_p3) - unsigned(shl_ln1540_1_fu_201_p3));
        sext_ln1021_fu_340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_480),64));

    shl_ln1540_1_fu_201_p3 <= (trunc_ln1540_1_reg_418 & ap_const_lv3_0);
    shl_ln1540_2_fu_230_p3 <= (trunc_ln1540_2_reg_423 & ap_const_lv5_0);
    shl_ln1540_3_fu_237_p3 <= (trunc_ln1540_3_reg_428 & ap_const_lv3_0);
    shl_ln_fu_194_p3 <= (trunc_ln1540_reg_413 & ap_const_lv5_0);
    stride_addrbound_fu_256_p4 <= add_ln587_1_fu_250_p2(25 downto 5);
    tmp_7_fu_314_p3 <= (empty_reg_475 & ap_const_lv2_0);
    trunc_ln1540_1_fu_185_p0 <= grp_fu_354_p2;
    trunc_ln1540_1_fu_185_p1 <= trunc_ln1540_1_fu_185_p0(23 - 1 downto 0);
    trunc_ln1540_2_fu_188_p0 <= grp_fu_362_p2;
    trunc_ln1540_2_fu_188_p1 <= trunc_ln1540_2_fu_188_p0(21 - 1 downto 0);
    trunc_ln1540_3_fu_191_p0 <= grp_fu_362_p2;
    trunc_ln1540_3_fu_191_p1 <= trunc_ln1540_3_fu_191_p0(23 - 1 downto 0);
    trunc_ln1540_fu_182_p0 <= grp_fu_354_p2;
    trunc_ln1540_fu_182_p1 <= trunc_ln1540_fu_182_p0(21 - 1 downto 0);
    zext_ln1017_fu_290_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_fu_108),32));
    zext_ln1021_1_fu_283_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cols_addrbound_fu_220_p4),32));
    zext_ln1021_fu_279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(addrbound_V_fu_266_p3),52));
    zext_ln232_fu_173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_read),32));
end behav;
